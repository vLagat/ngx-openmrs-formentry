{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","null","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","dataSourceOptions","checkSection","groupChildrenHidden_1","every","k","innerNode","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","styles","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_a","tslib_1.__values","_b","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","providers","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulate","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","repeatingModel","_d","_e","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","MatIconModule","MatTabsModule","MatCardModule","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"6+CAgBI,SAAAA,IAFOC,KAAAC,UAAY,YASvB,OALUF,EAAAG,UAAAC,aAAP,WAGS,OAAO,uBAXlBC,KAAAA,mDAaDL,KCvBAM,kBAAA,WAOA,SAAAA,IAMSL,KAAAM,yBAA2B,IAAIC,KAAAA,QAC/BP,KAAAQ,oBAAuCR,KAAKM,yBAAyBG,eAI9E,OAHSJ,EAAAH,UAAAQ,mBAAP,SAA0BC,GACxBX,KAAKM,yBAAyBM,KAAKD,IALvBN,EAAAQ,QAAyD,KACzDR,EAAAS,IAAc,yBAL7BV,KAAAA,aAWDC,EAlBA,GCgBIU,cAAgB,SAASC,EAAGC,GAI5B,OAHAF,cAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAAAO,UAA0BR,EAAGC,GAEzB,SAAAQ,IAAgBzB,KAAK0B,YAAcV,EADnCD,cAAcC,EAAGC,GAEjBD,EAAEd,UAAkB,OAANe,EAAaC,OAAOS,OAAOV,IAAMQ,EAAGvB,UAAYe,EAAEf,UAAW,IAAIuB,GAGnF,SAAAG,SA6EyBC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWC,EAAI,EAChE,OAAIH,EAAUA,EAAEI,KAAKL,GACd,CACHjB,KAAM,WAEF,OADIiB,GAAKI,GAAKJ,EAAEM,SAAQN,OAAI,GACrB,CAAEO,MAAOP,GAAKA,EAAEI,KAAMI,MAAOR,KC3GhD,+BAKI,SAAAS,EAAYzB,EAA0B0B,GAClCvC,KAAKwC,SAAW3B,EAChBb,KAAKyC,WAAaF,EAClBvC,KAAK0C,wCA8Cb,OA3CIxB,OAAAyB,eAAIL,EAAApC,UAAA,UAAO,KAAX,WACI,OAAOF,KAAKwC,0CAGhBtB,OAAAyB,eAAIL,EAAApC,UAAA,YAAS,KAAb,WACI,OAAOF,KAAKyC,4CAGhBvB,OAAAyB,eAAIL,EAAApC,UAAA,kBAAe,KAAnB,WACI,OAAOF,KAAK4C,kDAGhBN,EAAApC,UAAA2C,6BAAA,SAA6BC,GACzB,OAAIA,IAAa9C,KAAK4C,mBAClB5C,KAAK4C,iBAAmBE,EAEnB9C,KAAa,SAAS+C,uBACxB/C,KAAa,SAAS+C,wBAGzB/C,KAAKwC,SAASQ,yBACThD,KAAa,SAASiD,mBACtBjD,KAAa,SAASiD,oBAGtBjD,KAAa,SAASkD,qBACtBlD,KAAa,SAASkD,sBAGtBlD,KAAa,SAASmD,aACtBnD,KAAa,SAASmD,eAEpB,IAKPb,EAAApC,UAAAwC,sCAAR,WAAA,IAAAU,EAAApD,KAEEA,KAAKyC,WAAWY,aAAaC,UAAU,SAAClB,GACtCgB,EAAKP,6BAA6BT,MAG1CE,KCvDAiB,iBAAA,WAMI,SAAAA,EAAYC,EAA8BjB,GAFlCvC,KAAAyD,gBAAuB,GAG3BzD,KAAK0D,aAAeF,EACpBxD,KAAK2D,WAAa,GAEdpB,GACAvC,KAAK4D,mBAAmBrB,GA2BpC,OAvBIrB,OAAAyB,eAAIY,EAAArD,UAAA,eAAY,KAAhB,WACI,OAAOF,KAAK0D,8CAGhBxC,OAAAyB,eAAIY,EAAArD,UAAA,YAAS,KAAb,WACI,OAAOF,KAAK2D,4CAGhBzC,OAAAyB,eAAIY,EAAArD,UAAA,iBAAc,KAAlB,WACE,OAAOF,KAAKyD,iDAGdF,EAAArD,UAAA0D,mBAAA,SAAmBrB,GAKf,GAJIA,aAAqBsB,MAAAA,iBACrB7D,KAAK8D,UAAUC,KAAK,IAAIzB,gBAAgBtC,KAAK0D,aAAcnB,IAG3DA,aAAqBlB,MACrB,IAAK,IAAIY,EAAI,EAAGA,EAAIM,EAAUJ,OAAQF,IAClCjC,KAAK8D,UAAUC,KAAK,IAAIzB,gBAAgBtC,KAAK0D,aAAcnB,EAAUN,MAIrFsB,EAtCA,GCHAS,YAAA,WAAA,SAAAA,KA+CA,OA7CWA,EAAA9D,UAAA+D,YAAP,SAAmBpD,GACfA,EAAQqD,QAAS,EACbrD,EAAQsD,SACRtD,EAAQsD,WAITH,EAAA9D,UAAAkE,YAAP,SAAmBvD,GACfA,EAAQqD,QAAS,GAGdF,EAAA9D,UAAAmE,mBAAP,SAA0BxD,EAAkByD,GACxCzD,EAAQ0D,OAAOR,KAAKO,IAGjBN,EAAA9D,UAAAsE,sBAAP,SAA6B3D,GACzBA,EAAQ0D,OAAOE,OAAO,GACtB5D,EAAQqD,QAAS,GAGdF,EAAA9D,UAAAwE,sBAAP,SAA6B7D,OAErB8D,GAAc,EAClB9D,EAAQ0D,OAAOK,QAAQ,SAAAN,GACnBA,EAAMO,8BACe,IAAjBP,EAAMQ,SACNH,GAAc,KAItB9D,EAAQqD,OAASS,EACb9D,EAAQqD,QAAUrD,EAAQsD,SAC1BtD,EAAQsD,WAKTH,EAAA9D,UAAA6E,kCAAP,SAAyClE,GACjCA,EAAQoC,mBACRpC,EAAQwC,aAAaC,UAAU,SAAC0B,GAC5BnE,EAAQoC,uBAKxBe,EA/CA,GCAAiB,YAAA,WAAA,SAAAA,KA6CA,OA3CWA,EAAA/E,UAAAgF,UAAP,SAAiBrE,GACbA,EAAQsE,OAAQ,GAGbF,EAAA/E,UAAAkF,UAAP,SAAiBvE,GACbA,EAAQsE,OAAQ,GAGbF,EAAA/E,UAAAmF,oBAAP,SAA2BxE,EAA2ByE,GAClDzE,EAAQ0E,OAAOxB,KAAKuB,IAGjBL,EAAA/E,UAAAsF,sBAAP,SAA6B3E,GACzBA,EAAQ0E,OAAOd,OAAO,GACtB5D,EAAQyE,MAAQ,IAGbL,EAAA/E,UAAAuF,sBAAP,SAA6B5E,OACrB6E,EAAe,GACnB7E,EAAQ0E,OAAOX,QAAQ,SAAAe,GACnBA,EAAQC,4BAEJF,GADkB,IAAlBC,EAAQR,MACOQ,EAAQE,aAER,KAIvBhF,EAAQyE,MAAQI,GAObT,EAAA/E,UAAA6E,kCAAP,SAAyClE,GACjCA,EAAQsC,aACRtC,EAAQwC,aAAaC,UAAU,SAAC0B,GAC5BnE,EAAQsC,iBAKxB8B,EA7CA,GCAAa,eAAA,WAAA,SAAAA,KAqCA,OAnCWA,EAAA5F,UAAA6F,sBAAP,SAA6BlF,EAAqBmF,GAC9CnF,EAAQoF,UAAUlC,KAAKiC,IAGpBF,EAAA5F,UAAAgG,yBAAP,SAAgCrF,GAC5BA,EAAQoF,UAAUxB,OAAO,GACzB5D,EAAQsD,WAGL2B,EAAA5F,UAAAiG,yBAAP,SAAgCtF,OACxBuF,GAAY,EAChBvF,EAAQoF,UAAUrB,QAAQ,SAAAN,GACtBA,EAAM+B,iCACkB,IAApB/B,EAAM8B,YACNA,GAAY,KAMhBA,EACAvF,EAAQsD,UAERtD,EAAQyF,UAITR,EAAA5F,UAAA6E,kCAAP,SAAyClE,GACjCA,EAAQqC,qBACRrC,EAAQwC,aAAaC,UAAU,SAAC0B,GAC5BnE,EAAQqC,yBAKxB4C,EArCA,GCoBAS,SAAA,WASI,SAAAA,EAAYC,EAAwB3F,EAAwD4F,EAAaC,GACrG1G,KAAKwC,SAAW3B,EAChBb,KAAK2G,eAAiBH,EACtBxG,KAAK4G,MAAQH,EACbzG,KAAK6G,MAAQH,EAAaA,EAAa,IAAMF,EAASM,IAAMN,EAASM,IAuB7E,OApBI5F,OAAAyB,eAAW4D,EAAArG,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAK2G,gDAGhBzF,OAAAyB,eAAW4D,EAAArG,UAAA,UAAO,KAAlB,WACI,OAAOF,KAAKwC,0CAGhBtB,OAAAyB,eAAW4D,EAAArG,UAAA,OAAI,KAAf,WACI,OAAOF,KAAK4G,uCAGhB1F,OAAAyB,eAAW4D,EAAArG,UAAA,OAAI,KAAf,WACI,OAAOF,KAAK6G,uCAEhBN,EAAArG,UAAA6G,SAAA,SAASC,KAETT,EAAArG,UAAA+G,gBAAA,aACAV,EAAArG,UAAAgH,gBAAA,aAEJX,EApCA,GAsCAY,SAAA,SAAAC,GACI,SAAAD,EAAYX,EAAwB3F,EAC/BwG,EAA8DZ,EAAaC,UAC5EU,EAAAlF,KAAAlC,KAAMwG,EAAU3F,EAAS4F,EAAMC,IAAW1G,KAElD,OAL8BsH,UAAAA,EAAAA,GAK9BH,EALA,CAA8BZ,UAO9BgB,UAAA,SAAAH,GAEI,SAAAG,EAAYf,EAAwB3F,EAChCwG,EAA8DZ,EAAaC,GAD/E,IAAAtD,EAEIgE,EAAAlF,KAAAlC,KAAMwG,EAAU3F,EAAS4F,EAAMC,IAAW1G,YAC1CoD,EAAKoE,UAAY,KAWzB,OAhB+BF,UAAAA,EAAAA,GAQ3BpG,OAAAyB,eAAW4E,EAAArH,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAKwH,2CAGTD,EAAArH,UAAAuH,SAAP,SAAgBX,EAAaY,GACzB1H,KAAK2H,SAASb,GAAOY,GAG7BH,EAhBA,CAA+BhB,UAkB/BqB,UAAA,SAAAR,GAOI,SAAAQ,EAAYpB,EAAwB3F,EAChCwG,EAAsEQ,EACtEpB,EAAaC,GAFjB,IAAAtD,EAGIgE,EAAAlF,KAAAlC,KAAMwG,EAAU3F,EAAS4F,EAAMC,IAAW1G,YAF4BoD,EAAAyE,YAAAA,EANlEzE,EAAA0E,uBAAgC,GASpC1E,EAAKoE,UAAY,GACjBpE,EAAK0E,uBAAyB,KAiCtC,OA7C+BR,UAAAA,EAAAA,GAe3BpG,OAAAyB,eAAWiF,EAAA1H,UAAA,WAAQ,KAAnB,WACI,OAAOF,KAAKwH,2CAGTI,EAAA1H,UAAA+G,gBAAP,WACI,GAAIjH,KAAK+H,gBAAiB,KAChBC,EAAehI,KAAK+H,gBAAgB/H,KAAa,SAAuBA,KAAMA,KAAK6H,aAEzF,OADA7H,KAAKiI,6BAA6BD,GAC3BA,EAEX,OAAO,MAGJJ,EAAA1H,UAAA6G,SAAP,SAAgBC,GACRhH,KAAKkI,iBACLlI,KAAKkI,gBAAgBlB,EAAOhH,OAIpC4H,EAAA1H,UAAAiI,4BAAA,SAA4BC,GACxBpI,KAAK8H,uBAAuB/D,KAAKqE,IAGrCR,EAAA1H,UAAA+H,6BAAA,SAA6BP,GACzB,IAAK,IAAIzF,EAAI,EAAGA,EAAIjC,KAAK8H,uBAAuB3F,OAAQF,IAAK,EAGzDmG,EADkBpI,KAAK8H,uBAAuB7F,IACzCyF,KAGjBE,EA7CA,CAA+BrB,UCnF/B8B,gBAME,SAAAA,GAAYC,GAEVtI,KAAKuI,KAAOD,EAAYC,KACxBvI,KAAK2F,QAAU2C,EAAY3C,SAAW,8CCHxC,SAAA6C,EAAYF,GAAZ,IAAAlF,EACEgE,EAAAlF,KAAAlC,KAAMsI,IAAYtI,YAClBoD,EAAKqF,oBAAsBH,EAAYG,sBAE3C,OARiDnB,UAAAA,EAAAA,GAQjDkB,GARiDH,wDCI/C,SAAAK,EAAYJ,GAAZ,IAAAlF,EACEgE,EAAAlF,KAAAlC,KAAMsI,IAAYtI,YAClBoD,EAAKuF,oBAAsBL,EAAYK,oBACvCvF,EAAKwF,yBAA2BN,EAAYM,2BAEhD,OAVgDtB,UAAAA,EAAAA,GAUhDoB,GAVgDL,iBCFhDQ,wBAAA,WAcE,SAAAA,KAiTF,OA/SEA,EAAA3I,UAAA4I,eAAA,SAAeC,OAEPC,EAAqBhJ,KAAKiJ,cAAcF,EAAU,IAExD,IAAK,IAAMjC,KAAOkC,EAChB,GAAIA,EAAczH,eAAeuF,GAAM,KAC/BoC,EAAqBF,EAAclC,GAEzC9G,KAAKmJ,aAAaH,EAAeE,KAKvCL,EAAA3I,UAAAkJ,wBAAA,SAAwB1B,OAEhBjB,EAAaiB,EAAKjB,KAExB,GAAKA,EAAL,KAGMsC,EAAsBtC,EAAKsC,SAGjC/I,KAAK8I,eAAepB,OAGd2B,EAAyBrJ,KAAKiJ,cAAcF,EAAU,IACtDO,EAAyBtJ,KAAKiJ,cAAcvB,EAAM,IAExD,IAAK,IAAMZ,KAAOuC,EAAmB,CAEnC,GAAIA,EAAkB9H,eAAeuF,GAInC,IAFMyC,EAAkBF,EAAkBvC,cAErBK,SAAU,KAEvBqC,EAA6B,EAAoBhD,SAEnDgD,EAAa1C,KAAiC,EAA1B0C,EAAa1C,IAAI3E,QACvCnC,KAAKmJ,aAAaG,EAAmBC,IAU7C,IAAK,IAAME,KAHXzJ,KAAK0J,+BAA+BhC,GAGnB4B,EACf,GAAIA,EAAkB/H,eAAekI,GAAK,KAElCF,EACA1I,GADA0I,EAAkBD,EAAkBG,IACkB,QAC5D5I,EAAQoC,oBACRpC,EAAQsC,iBAKd0F,EAAA3I,UAAAwJ,+BAAA,SAA+BhC,OAIvBqB,EAFarB,EAAKjB,KAESsC,SAG3BM,EAAyBrJ,KAAKiJ,cAAcF,EAAU,IACtDO,EAAyBtJ,KAAKiJ,cAAcvB,EAAM,IAGxD,IAAK,IAAMZ,KAAOuC,EAChB,GAAIA,EAAkB9H,eAAeuF,GAAM,KAEnC6C,EAAmBN,EAAkBvC,GAErC8C,EAAiBlC,EAAKmC,KAAKC,UAAU,EAAGpC,EAAKmC,KAAKE,YAAY,MAEpE,IAAmD,IAA/CJ,EAAOE,KAAKG,QAAQJ,EAAiB,KAAa,gBAGzCH,GACT,GAAIH,EAAkB/H,eAAekI,GAAK,KAElCQ,EAAmBX,EAAkBG,GACrCS,EAAWD,EAAOzD,SAASM,IACjC,GAAIqD,EAAKC,YAAYF,EAAUP,EAAOnD,UAAW,KAEzC6D,EAAyB3C,EAAKjB,KAAK6D,iBAAiBvB,EAAUa,EAAgB,IACpF,GAAmB,EAAfS,EAAMlI,OAAY,KACdoI,EAAKF,EAAM,GACXG,EAAeb,EAAc,SAE8B,IAA7Da,EAAYC,iBAAiBC,eAAeV,QAAQO,IACtDC,EAAYC,iBAAiBC,eAAe3G,KAAKwG,GAGlDN,EAAc,QAAmCU,uBAAuB,SAACvI,GAEpE,EAAqBW,uBACvB,EAAqBA,wBAGvByH,EAAYxH,yBACR,EAAqBC,mBACvB,EAAqBA,oBAGnB,EAAqBE,aACvB,EAAqBA,cAGnB,EAAqBD,qBACvB,EAAqBA,mCAhCjC,IAAK,IAAMuG,KAAMH,IAANG,MA4CnBZ,EAAA3I,UAAA0K,uBAAA,SAAuBnB,EAAI/B,OAEnB5D,EAAkD,IAAIzC,MAEtDwJ,EAAiCnD,EAAKjB,KAAKqE,uBAAuBrB,GAExE,GAA2B,EAAvBoB,EAAc1I,OAAY,KAEtB+G,EAAqB2B,EAAc,GAEnCE,EAAmB/K,KAAKiJ,cAAcvB,EAAM,IAElD,IAAK,IAAMZ,KAAOiE,EACZA,EAAYxJ,eAAeuF,IAEzB9G,KAAKoK,YAAYW,EAAYjE,GAAKN,SAASM,IAAKoC,EAAS1C,WAC3D1C,EAAUC,KAAKgH,EAAYjE,GAAKjG,SAKxC,OAAOiD,GAGT+E,EAAA3I,UAAA+I,cAAA,SAAcvB,EAAiBsB,OAEvBrB,EAAqBD,EAAKC,SAEhC,IAAK,IAAMb,KAAOa,EAEhB,GAAIA,EAASpG,eAAeuF,GAAM,KAE1ByC,EAAkB5B,EAASb,GAEjC,GAAIyC,aAAiBhC,UAEnBvH,KAAKiJ,cAAcM,EAAOP,QACrB,GAAIO,aAAiBpC,SAAU,EAE9BqC,EAA6B,EAAoBhD,UAEtCM,KAAiC,EAA1B0C,EAAa1C,IAAI3E,SACvC6G,EAAcQ,EAAa1C,KAAOyC,QAE/B,GAAIA,aAAiB3B,UAAW,KAE/B4B,GAAAA,EAA6B,EAAqBhD,UAEvCM,KAAiC,EAA1B0C,EAAa1C,IAAI3E,SACvC6G,EAAcQ,EAAa1C,KAAOyC,IAM1C,OAAOP,GAGTH,EAAA3I,UAAAiJ,aAAA,SAAaH,EAAoBE,OAIzBO,EAF6BP,EAAS1C,SAEpBM,IAExB,IAAK,IAAMA,KAAOkC,EAChB,GAAIA,EAAczH,eAAeuF,IAAQA,IAAQ2C,EAAI,KAE7C/B,EAAiBsB,EAAclC,GAC/BN,EAAyBkB,EAAKlB,SAOpC,GALIxG,KAAKoK,YAAYX,EAAIjD,EAAU0C,IACjClJ,KAAKgL,qBAAqBtD,EAAY,QAAmCwB,EAAgB,SAI1D,iBAAtB1C,EAASyE,SAAuB,KAEnCA,EAAgBzE,EAASyE,SAET,wBAAlBA,EAAS1C,MAEP0C,EAAStC,sBAAwBc,GACnCzJ,KAAKgL,qBAAqBtD,EAAY,QACpCwB,EAAgB,YAQ9BL,EAAA3I,UAAAkK,YAAA,SAAYX,EAAYD,EAA4BN,OAE9CkB,GAAc,EAsBlB,GApBIZ,EAAa0B,YAA+C,EAAjC1B,EAAa0B,WAAW/I,QAErDqH,EAAa0B,WAAWtG,QAAQ,SAAAuG,GAE9B,GAAIA,aAAmB3C,4BAA6B,KAI5CC,EAFK,EAE+BA,oBACtCA,IAA4D,IAArCA,EAAoBuB,QAAQP,KACrDW,GAAc,QAEPe,aAAmBzC,4BAA+C,wBAAjByC,EAAQ5C,MAC/D4C,EAAQxC,sBAAwBc,IACnCW,GAAc,MAMfA,EAAa,CAEhB,GAAiC,iBAAtBZ,EAAa4B,KAAmB,KAEnCA,EAAe5B,EAAiB,KAEpB,EAAd4B,EAAKjJ,SAAoC,IAAtBiJ,EAAKpB,QAAQP,KAClCW,GAAc,QAEX,GAAiC,iBAAtBZ,EAAa4B,KAAmB,CAE3B5B,EAAa4B,KAEtBC,QAAU5B,IACpBW,GAAc,GAQlB,GAJIZ,EAAalE,OAAuC,iBAAvBkE,EAAalE,QAC5C8E,GAAc,GAGoB,iBAAzBZ,EAAarF,QAAsB,KAEtCA,EAAkBqF,EAAoB,QAEvB,EAAjBrF,EAAQhC,SAAuC,IAAzBgC,EAAQ6F,QAAQP,KACxCW,GAAc,IAWpB,OALKA,GAAeZ,EAAa8B,qBAAiE,EAA1C9B,EAAa8B,oBAAoBnJ,SAClC,IAAlDqH,EAAa8B,oBAAoBtB,QAAQP,KAC5CW,GAAc,GAGTA,GAGTvB,EAAA3I,UAAA8K,qBAAA,SAAqBnK,EAAwC0K,GAkB3D1K,EAAQ4J,iBAAiB7G,mBAAmB2H,wBAjT/CnL,KAAAA,mDAoTDyI,EA/TA,GCOM2C,OAASC,QACfC,iBAAA,WAAA,SAAAA,oBA+JA,OA9JIA,iBAAAxL,UAAAyL,YAAA,SAAYC,WAAoB/K,QAC5BgL,OAAaC,iBAAuBrF,UAE9BsF,OAAS/L,KACTgM,SAAqB,CACvBC,IAAK,eAGGC,MAAa,GACbrL,QAAQsL,OACRD,MAAMrL,QAAQsL,MAAQtL,QAAQuB,OAElCgK,OAAe,OAAIZ,OAEnBU,MAAe,QAAIrL,QAAQuB,MAC3B2J,OAAOM,8BAA8BxL,QAASqL,OAC9CH,OAAOO,iBAAiBT,OAAQK,OAChCH,OAAOQ,oBAAoBT,iBAAkBI,OAEzCzF,MAEAsF,OAAOQ,oBAAoB9F,KAAK+F,qBAAqBC,YAAaP,WAGlEQ,UAAY,GACZC,QAAU,GACd,IAAK,IAAI9K,KAAKqK,MACVQ,UAA0B,KAAdA,UAAmBA,UAAY7K,EAAI6K,UAAY,IAAM7K,EACjE8K,QAAsB,KAAZA,QAAiBA,QAAU,UAAY9K,EAAI,KAAO8K,QAAU,WAAa9K,EAAI,MAIrD,IAAlC+J,WAAW5B,QAAQ,YACnB4B,WAAa,WAAaA,WAAa,SAGvCgB,oBAAsB,sCAAwCF,UAAY,MAAQd,WAAa,KAC/FiB,aAAe,6BAA2C,KAAZF,QAAiB,GAAK,IAAMA,SAAW,KAEzF,IAEI,OAA+C,GAA3CzL,OAAO4L,KAAKZ,OAAOlC,QAAQ,cAC3B+C,QAAQC,KAAK,0BAA2BpB,WAAYM,QAC7C,GAGJe,KAAKL,oBAAsBC,cACpC,MAAOK,GAcL,OAAO,KAKnB,OAAOlB,UAGHN,iBAAAxL,UAAAmM,8BAAR,SAAsCxL,EAAuDqL,GAA7F,IAAA9I,EAAApD,KACQa,GAAWA,EAAQ4J,kBAAoB5J,EAAQ4J,iBAAiB3G,WAChEjD,EAAQ4J,iBAAiB3G,UAAUc,QAAQ,SAAAuI,GACvC,GAAIA,EAAS5K,UAAW,KACdgJ,EAAU4B,EAAkB,UAC5BC,EAAmBD,EAAkB,UACvCC,GAAoB/L,MAAMgM,QAAQD,EAAiBhL,OACnD8J,EAAMX,EAAQY,MAAQgB,EAAS5K,UAAUH,MAEzC8J,EAAMX,EAAQY,MAAQgB,EAAS5K,UAAUH,OAAS+K,EAAS5K,UAAUH,MAAMA,MACvE+K,EAAS5K,UAAUH,MAAMA,MAAQ+K,EAAS5K,UAAUH,SAMpEvB,GAAWA,EAAQ4J,kBAAoB5J,EAAQ4J,iBAAiBC,gBACZ,EAAjD7J,EAAQ4J,iBAAiBC,eAAevI,QAE3CtB,EAAQ4J,iBAAiBC,eAAe9F,QAAQ,SAAA8C,GAC5C,GAAIA,aAAgBE,UAAW,KACrB0F,EAAS,EACTC,EAAO1M,EAAQsL,KAEfqB,EAAmD,IAAI3E,wBACzD4E,EAA4D,GAEhEH,EAAU3F,SAAS/C,QAAQ,SAAA2E,GACvBkE,EAAsBA,EAAoBC,OAAOF,EAAwB5C,uBAAuB2C,EAAMhE,MAI1GnG,EAAKuK,sBAAqB,EAA2CF,EAAqBvB,OAMlGR,iBAAAxL,UAAAyN,sBAAR,SAA8B9M,EAC1B+M,EAA2D1B,GAD/D,IAAA9I,EAAApD,KAEgCA,KAAK6N,oBAAoBD,GAEhDhJ,QAAQ,SAAAkC,OACHgH,EAAc1K,EAAK2K,iBAAiBjH,EAAK8G,GAC/C1B,EAAMpF,GAAOgH,KAIbpC,iBAAAxL,UAAA2N,oBAAR,SAA4BG,OAElBlB,EAAsB,GAQ5B,OAPAkB,EAAMpJ,QAAQ,SAAA/D,IAE0B,IAAhCiM,EAAK9C,QAAQnJ,EAAQsL,OACrBW,EAAK/I,KAAKlD,EAAQsL,QAInBW,GAGHpB,iBAAAxL,UAAA6N,iBAAR,SAAyBjH,EAAakH,OAC5BF,EAAc,GASpB,OAPAE,EAAMpJ,QAAQ,SAAA/D,GAENA,EAAQsL,OAASrF,GACjBgH,EAAO/J,KAAKlD,EAAQuB,SAIrB0L,GAGHpC,iBAAAxL,UAAAoM,iBAAR,SAAyB2B,EAAU/B,GAC/B,IAAK,IAAMpF,KAAOmH,EACVA,EAAI1M,eAAeuF,KACnBoF,EAAMpF,GAAOmH,EAAInH,KAKrB4E,iBAAAxL,UAAAqM,oBAAR,SAA4B0B,EAAU/B,GAClC,IAAK,IAAMpF,KAAOmH,EACVA,EAAI1M,eAAeuF,KACnBoF,EAAMpF,GAAOmH,EAAInH,KAIjC4E,iBA/JA,8BCsBI,SAAAwC,EAAYC,EAAiBC,EACzBC,GADJ,IAAAjL,EAEIgE,EAAAlF,KAAAlC,KAAMmO,EAAWC,EAAWC,IAAerO,YAZ/CoD,EAAAc,QAAS,EAODd,EAAAkL,YAA2B,IAAItK,YAC/BZ,EAAAmL,eAAiC,IAAIzI,eACrC1C,EAAA6B,YAA2B,IAAIA,YAInC7B,EAAKoL,kBAAoB,IAAIjL,iBAAiBH,GAC9CA,EAAKmB,OAAS,GACdnB,EAAK6C,UAAY,GACjB7C,EAAKmC,OAAS,GAEdnC,EAAKC,aAAaC,UAAU,SAAClB,GACrBgB,EAAKqL,iBAAmBrM,IACxBgB,EAAKsL,wBAAwBtM,GAC7BgB,EAAKqL,eAAiBrM,OAkFtC,OA9G6BkF,UAAAA,EAAAA,GAiCzBpG,OAAAyB,eAAIuL,EAAAhO,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKwO,mDAGhBN,EAAAhO,UAAAiE,QAAA,SAAQwK,GACJvH,EAAAlH,UAAMiE,QAAOjC,KAAAlC,KAAC2O,GACdvH,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAAC,KAGnBkO,EAAAhO,UAAAkL,KAAA,WACIpL,KAAKsO,YAAYrK,YAAYjE,OAGjCkO,EAAAhO,UAAA2O,KAAA,WACI7O,KAAKsO,YAAYlK,YAAYpE,OAGjCkO,EAAAhO,UAAA4O,YAAA,SAAYC,GACR/O,KAAKsO,YAAYjK,mBAAmBrE,KAAM+O,IAG9Cb,EAAAhO,UAAA8O,gBAAA,SAAgBC,GACZjP,KAAKkP,WAAaD,GAGtBf,EAAAhO,UAAA6C,sBAAA,WACI,GAAI/C,KAAKkP,WAAY,KACXC,EAAOnP,KAAKkP,WAAWhN,KAAKwJ,iBAAkB,IACpD1L,KAAK4O,SAASO,KAItBjB,EAAAhO,UAAAkP,eAAA,WACIpP,KAAKsO,YAAY9J,sBAAsBxE,OAG3CkO,EAAAhO,UAAA+C,kBAAA,WACIjD,KAAKsO,YAAY5J,sBAAsB1E,OAG3CkO,EAAAhO,UAAAmP,eAAA,SAAeC,GACXtP,KAAKuO,eAAexI,sBAAsB/F,KAAMsP,IAGpDpB,EAAAhO,UAAAqP,kBAAA,WACIvP,KAAKuO,eAAerI,yBAAyBlG,OAGjDkO,EAAAhO,UAAAgD,oBAAA,WACIlD,KAAKuO,eAAepI,yBAAyBnG,OAGjDkO,EAAAhO,UAAAsP,WAAA,SAAWT,GACP/O,KAAKiF,YAAYI,oBAAoBrF,KAAM+O,IAG/Cb,EAAAhO,UAAAuP,gBAAA,WACIzP,KAAKiF,YAAYO,sBAAsBxF,OAG3CkO,EAAAhO,UAAAiD,YAAA,WACInD,KAAKiF,YAAYQ,sBAAsBzF,OAG3CkO,EAAAhO,UAAAyK,uBAAA,SAAuBvC,GACnBpI,KAAK0P,qBAAuBtH,GAGhC8F,EAAAhO,UAAAwO,wBAAA,SAAwBtM,GAChBpC,KAAK0P,sBAA6D,mBAA9B1P,KAAK0P,sBACzC1P,KAAK0P,qBAAqBtN,IAIlC8L,EAAAhO,UAAA0O,SAAA,SAASxM,GACLgF,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAACoC,IAEvB8L,GA9G6ByB,MAAAA,sCCezB,SAAAC,EAAYC,EAA8CzB,EAAyBC,GAAnF,IAAAjL,EACIgE,EAAAlF,KAAAlC,KAAM6P,EAAUzB,EAAWC,IAAerO,YALtCoD,EAAAkL,YAA2B,IAAItK,YAC/BZ,EAAAmL,eAAiC,IAAIzI,eACrC1C,EAAA6B,YAA2B,IAAIA,YAInC7B,EAAKoL,kBAAoB,IAAIjL,iBAAiBH,GAC9CA,EAAKmB,OAAS,GACdnB,EAAK6C,UAAY,GACjB7C,EAAKmC,OAAS,KA2DtB,OAjFkC+B,UAAAA,EAAAA,GAyB9BpG,OAAAyB,eAAIiN,EAAA1P,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKwO,mDAGhBoB,EAAA1P,UAAAkL,KAAA,WACIpL,KAAKsO,YAAYrK,YAAYjE,OAGjC4P,EAAA1P,UAAA2O,KAAA,WACI7O,KAAKsO,YAAYlK,YAAYpE,OAGjC4P,EAAA1P,UAAAiE,QAAA,SAAQwK,GACJvH,EAAAlH,UAAMiE,QAAOjC,KAAAlC,KAAC2O,GACdvH,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAAC,KAGnB4P,EAAA1P,UAAA4O,YAAA,SAAYC,GACR/O,KAAKsO,YAAYjK,mBAAmBrE,KAAM+O,IAG9Ca,EAAA1P,UAAAkP,eAAA,WACIpP,KAAKsO,YAAY9J,sBAAsBxE,OAG3C4P,EAAA1P,UAAA+C,kBAAA,WACIjD,KAAKsO,YAAY5J,sBAAsB1E,OAG3C4P,EAAA1P,UAAAmP,eAAA,SAAeC,GACXtP,KAAKuO,eAAexI,sBAAsB/F,KAAMsP,IAGpDM,EAAA1P,UAAAqP,kBAAA,WACIvP,KAAKuO,eAAerI,yBAAyBlG,OAGjD4P,EAAA1P,UAAAgD,oBAAA,WACIlD,KAAKuO,eAAepI,yBAAyBnG,OAGjD4P,EAAA1P,UAAAsP,WAAA,SAAWT,GACP/O,KAAKiF,YAAYI,oBAAoBrF,KAAM+O,IAG/Ca,EAAA1P,UAAAuP,gBAAA,WACIzP,KAAKiF,YAAYO,sBAAsBxF,OAG1C4P,EAAA1P,UAAAiD,YAAA,WACGnD,KAAKiF,YAAYQ,sBAAsBzF,OAE3C4P,EAAA1P,UAAA0O,SAAA,SAASxM,GACLgF,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAACoC,IAGvBwN,GAjFkCE,MAAAA,oCCoB9B,SAAAC,EAAYF,EAA6BzB,EAAyBC,GAAlE,IAAAjL,EACIgE,EAAAlF,KAAAlC,KAAM6P,EAAUzB,EAAWC,IAAerO,YALtCoD,EAAAkL,YAA2B,IAAItK,YAC/BZ,EAAA6B,YAA2B,IAAIA,YAC/B7B,EAAAmL,eAAiC,IAAIzI,eAIzC1C,EAAKoL,kBAAoB,IAAIjL,iBAAiBH,GAC9CA,EAAKmB,OAAS,GACdnB,EAAKmC,OAAS,GACdnC,EAAK6C,UAAY,GAEjB7C,EAAKC,aAAaC,UAAU,SAAClB,GACvBgB,EAAKqL,iBAAmBrM,IAC1BgB,EAAKsL,wBAAwBtM,GAC7BgB,EAAKqL,eAAiBrM,OAkFlC,OA/GkCkF,UAAAA,EAAAA,GAkC9BpG,OAAAyB,eAAIoN,EAAA7P,UAAA,OAAI,KAAR,WACI,OAAOF,KAAKgQ,WAEhB,SAAShL,GACLhF,KAAKgQ,MAAQhL,mCAGjB9D,OAAAyB,eAAIoN,EAAA7P,UAAA,mBAAgB,KAApB,WACI,OAAOF,KAAKwO,mDAGhBuB,EAAA7P,UAAAkL,KAAA,WACIpL,KAAKsO,YAAYrK,YAAYjE,OAGjC+P,EAAA7P,UAAA2O,KAAA,WACI7O,KAAKsO,YAAYlK,YAAYpE,OAGjC+P,EAAA7P,UAAAiE,QAAA,SAAQwK,GACJvH,EAAAlH,UAAMiE,QAAOjC,KAAAlC,KAAC2O,GACdvH,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAAC,KAGnB+P,EAAA7P,UAAA4O,YAAA,SAAYC,GACR/O,KAAKsO,YAAYjK,mBAAmBrE,KAAM+O,IAG9CgB,EAAA7P,UAAAkP,eAAA,WACIpP,KAAKsO,YAAY9J,sBAAsBxE,OAG3C+P,EAAA7P,UAAA+C,kBAAA,WACIjD,KAAKsO,YAAY5J,sBAAsB1E,OAG3C+P,EAAA7P,UAAAmP,eAAA,SAAeC,GACXtP,KAAKuO,eAAexI,sBAAsB/F,KAAMsP,IAGpDS,EAAA7P,UAAAqP,kBAAA,WACIvP,KAAKuO,eAAerI,yBAAyBlG,OAGjD+P,EAAA7P,UAAAgD,oBAAA,WACIlD,KAAKuO,eAAepI,yBAAyBnG,OAGjD+P,EAAA7P,UAAAsP,WAAA,SAAWT,GACP/O,KAAKiF,YAAYI,oBAAoBrF,KAAM+O,IAG/CgB,EAAA7P,UAAAuP,gBAAA,WACIzP,KAAKiF,YAAYO,sBAAsBxF,OAG1C+P,EAAA7P,UAAAiD,YAAA,WACGnD,KAAKiF,YAAYQ,sBAAsBzF,OAG3C+P,EAAA7P,UAAAyK,uBAAA,SAAuBvC,GACrBpI,KAAK0P,qBAAuBtH,GAG9B2H,EAAA7P,UAAAwO,wBAAA,SAAwBtM,GACG,EAArBpC,KAAKuF,OAAOpD,QACdnC,KAAKmD,cAEHnD,KAAK0P,sBAA6D,mBAA9B1P,KAAK0P,sBAC3C1P,KAAK0P,qBAAqBtN,IAI9B2N,EAAA7P,UAAA0O,SAAA,SAASxM,GACLgF,EAAAlH,UAAM0O,SAAQ1M,KAAAlC,KAACoC,IAGvB2N,GA/GkCE,MAAAA,2BCX9B/B,eAAA,EACA6B,aAAA,EACAH,aAAA,EACAM,KAAA,mOCAJ,IAAAC,aAAA,WAkCI,SAAAA,EAAYC,GAERpQ,KAAKqQ,aAAeD,EAAQC,aAC5BrQ,KAAKsQ,cAAgBF,EAAQE,cAC7BtQ,KAAKuQ,OAASH,EAAQG,OACtBvQ,KAAKwQ,cAAgBJ,EAAQ7H,KAC7BvI,KAAK8G,IAAMsJ,EAAQtJ,KAAO,GAC1B9G,KAAKyQ,MAAQL,EAAQK,OAAS,GAC9BzQ,KAAKkL,WAAakF,EAAQlF,YAAc,GACxClL,KAAKiL,SAAWmF,EAAQnF,SACxBjL,KAAKoL,KAAOgF,EAAQhF,KACpBpL,KAAKmE,QAAUiM,EAAQjM,QACvBnE,KAAKsF,MAAQ8K,EAAQ9K,MACrBtF,KAAK0Q,oBAAsBN,EAAQM,oBACnC1Q,KAAKsL,oBAAsB8E,EAAQ9E,oBAS3C,OANI6E,EAAAjQ,UAAAyQ,mBAAA,SAAmBC,GACf5Q,KAAK6Q,sBAAwBD,GAEjCT,EAAAjQ,UAAA4Q,4BAAA,SAA4BF,GAC1B5Q,KAAK+Q,wBAA0BH,IAAMI,WAAmBJ,GAE9DT,EAzDA,GCDAc,6BAAA,WAEE,SAAAA,KAuCF,OArCEA,EAAA/Q,UAAAgR,SAAA,SAASC,GAGP,OAAO,SAACtQ,OAMFuQ,EAJEhP,EAAQvB,EAAQuB,MAClBiP,EAAgB,KACd1I,EAA8BwI,EAAMxI,oBACpCC,EAAgCuI,EAAMvI,yBAsB5C,OAnBI/H,GAAWA,EAAQ4J,kBAAoB5J,EAAQ4J,iBAAiB3G,WAChEjD,EAAQ4J,iBAAiB3G,UAAUc,QAAQ,SAAAuI,OAEnCC,EAAmBD,EAAkB,UACvCC,EAAiBjB,OAASxD,IAExB0I,EADAjE,GAAoB/L,MAAMgM,QAAQD,EAAiBhL,OACnC+K,EAAS5K,UAAUH,MAEnB+K,EAAS5K,UAAUH,OAAS+K,EAAS5K,UAAUH,MAAMA,MACjE+K,EAAS5K,UAAUH,MAAMA,MAAQ+K,EAAS5K,UAAUH,SAM5B,iBAA7BwG,IAA8F,IAArDA,EAAyBoB,QAAQqH,KACnFD,GAAa,GAGXA,IAAehP,EACV,CAAEkP,qBAAwB,CAAE3L,QAAUwL,EAAMxL,UAG9C,OAGbsL,EAzCA,GCAAM,6BAAA,WAEE,SAAAA,KA0CF,OAxCEA,EAAArR,UAAAgR,SAAA,SAASC,GAEP,OAAO,SAACtQ,OAEAuB,EAAQvB,EAAQuB,MAClBiP,EAAgB,KACd1I,EAA8BwI,EAAMxI,oBACpCC,EAAgCuI,EAAMvI,yBACxC4I,GAAwB,EAyB5B,OAvBIpP,GACEvB,GAAWA,EAAQ4J,kBAAoB5J,EAAQ4J,iBAAiB3G,WAChEjD,EAAQ4J,iBAAiB3G,UAAUc,QAAQ,SAAAuI,OAEnCC,EAAmBD,EAAkB,UACvCC,EAAiBjB,OAASxD,IAExB0I,EADAhQ,MAAMgM,QAAQD,EAAiBhL,OACfgL,EAAiBhL,MAEjBgL,EAAiBhL,OAA2C,iBAA3BgL,EAAiBhL,OAAsBgL,EAAiBhL,MAAMA,MAC3GgL,EAAiBhL,MAAMA,MAAQgL,EAAiBhL,OAIrDiP,EAE0C,iBAA7BzI,IAA8F,IAArDA,EAAyBoB,QAAQqH,KAC1FG,GAAmB,GAFnBA,GAAmB,IAQxBA,EAIE,KAHE,CAAEC,qBAAwB,CAAE9L,QAAUwL,EAAMxL,YAM3D4L,EA5CA,GCDAG,kBAAA,WAAA,SAAAA,KAaA,OAXEA,EAAAxR,UAAAgR,SAAA,SAASrQ,GAEP,GAAIA,EAAQqD,OACV,OAAO,SAGH9B,EAAavB,EAAQuB,MAG3B,OAFkC,MAATA,GAAkC,iBAAVA,GAAuC,IAAjBA,EAAMD,OAE5D,CAAE8I,UAAY,GAAS,MAE5CyG,EAbA,GCCAC,cAAA,WAEE,SAAAA,KAoBF,OAlBEA,EAAAzR,UAAAgR,SAAA,SAASrQ,GAEP,GAAIA,EAAQqD,OACV,OAAO,SAGH9B,EAAQvB,EAAQuB,MAEtB,OAAIA,GAA0B,IAAjBA,EAAMD,QAGM,cAAcyP,KAAK,IAAIC,KAAKzP,GAAO0P,YAE5C,KAAO,CAAEC,MAAQ,GAExB,MAGbJ,EAtBA,GCDAK,aAAA,WAAA,SAAAA,KAmBA,OAhBEA,EAAA9R,UAAAgR,SAAA,SAASe,GAEP,OAAO,SAACpR,GAEN,GAAIA,EAAQqD,OACV,OAAO,KAET,GAAIrD,EAAQuB,OAAkC,IAAzBvB,EAAQuB,MAAMD,OAAc,KAEzCyO,EAAY/P,EAAQuB,MAC1B,OAAY6P,GAALrB,EAAW,KAAO,CAAEqB,IAAO,CAAEC,cAAeD,EAAKE,YAAavB,IAGvE,OAAO,OAGboB,EAnBA,GCAAI,aAAA,WAAA,SAAAA,KAmBA,OAjBEA,EAAAlS,UAAAgR,SAAA,SAASmB,GAEP,OAAO,SAACxR,GAEN,GAAIA,EAAQqD,OACV,OAAO,KAGT,GAAIrD,EAAQuB,OAAkC,IAAzBvB,EAAQuB,MAAMD,OAAc,KAEzCyO,EAAY/P,EAAQuB,MAC1B,OAAOwO,GAAKyB,EAAM,KAAO,CAAEA,IAAO,CAAEH,cAAeG,EAAKF,YAAavB,IAGvE,OAAO,OAGbwB,EAnBA,GCCAE,iBAAA,WAAA,SAAAA,KA0BA,OAxBEA,EAAApS,UAAAgR,SAAA,SAASe,GAEP,OAAO,SAACpR,GAEN,GAAIA,EAAQqD,OACV,OAAO,KAGT,GAAIrD,EAAQuB,OAAkC,IAAzBvB,EAAQuB,MAAMD,OAAc,CAE/C,IAAK,IAAIwP,eAAgBT,SAASrQ,EAAQuB,OAOxC,MAAO,CAAEmQ,QAAW,CAAEC,aAAgBP,QALhCQ,EAAgB,IAAIZ,KAAKhR,EAAQuB,OAEvC,OAAOqQ,EAAQC,UAAYT,EAAIS,UAAY,CAAEH,QAAW,CAAEC,aAAgBP,EAAKU,WAAYF,IAAc,KAO7G,OAAO,OAGbH,EA1BA,GCAAM,iBAAA,WAAA,SAAAA,KA0BA,OAxBEA,EAAA1S,UAAAgR,SAAA,SAASmB,GAEP,OAAO,SAACxR,GAEN,GAAIA,EAAQqD,OACV,OAAO,KAGT,GAAIrD,EAAQuB,OAAkC,IAAzBvB,EAAQuB,MAAMD,OAAc,CAE/C,IAAK,IAAIwP,eAAgBT,SAASrQ,EAAQuB,OAOxC,MAAO,CAAEyQ,QAAW,CAAEL,aAAgBH,QALhCI,EAAgB,IAAIZ,KAAKhR,EAAQuB,OAEvC,OAAOqQ,EAAQC,UAAYL,EAAIK,UAAY,CAAEG,QAAW,CAAEL,aAAgBH,EAAKM,WAAYF,IAAc,KAO7G,OAAO,OAGbG,EA1BA,GCAAE,+BAAA,WAEE,SAAAA,KAuBF,OArBEA,EAAA5S,UAAAgR,SAAA,SAASrQ,GAEP,GAAIA,EAAQqD,OACV,OAAO,SAGH9B,EAAQvB,EAAQuB,MAChB2Q,EAAY,IAAIlB,KAEtB,GAAIzP,GAA0B,IAAjBA,EAAMD,UAEZ,IAAIwP,eAAgBT,SAAS9O,GAIhC,OAFgB,IAAIyP,KAAKzP,GAEhBsQ,UAAYK,EAAIL,UAAY,CAAEM,uBAAyB,GAAS,KAI7E,OAAO,MAEXF,EAzBA,GCFAG,mBAAA,WACA,SAAAA,KA4OA,OA1OEA,EAAA/S,UAAAgT,QAAA,SAAQC,EAAQC,OAEVC,EAIJ,OAHIF,GAAUC,IACZC,GAAKD,GAAUD,EAAS,IAAMA,EAAS,MAAMG,QAAQ,IAEhDH,GAAUC,EAASG,WAAWF,GAAK,MAG5CJ,EAAA/S,UAAAsT,oBAAA,SAAoBC,EAAcN,EAAQC,OACrCM,EAECP,GAAUC,IACZM,GAAON,GAAUD,EAAS,IAAMA,EAAS,MAAMG,QAAQ,QAGrDK,EADEC,EAAmBC,EAAAA,MAAQJ,GAEjC,GAAIG,EAAkB,KACdE,EAAkB5S,OAAO4L,KAAK8G,GAAkBG,IACpD,SAACjN,GAAQ,OAAA8M,EAAiB9M,KAAMiN,IAAK,SAACC,GAAM,OAAAA,IACtCC,EAAgB/S,OAAO4L,KAAK8G,GAC5BM,EAAeJ,EAAgB,GAC/BK,EAAoB,GACtBT,EAAMQ,EACRC,EAAkBpQ,KAAKmQ,GAEvBE,EAAAA,QAAUN,EAAiB,SAAC1R,GACxBA,GAASsR,GACbS,EAAkBpQ,KAAK3B,SAInBiS,EAAqBC,EAAAA,KAAOH,IAKlCR,EADgBM,EAHOM,EAAAA,UAAYT,EAAiB,SAACjS,GACrD,OAAOA,IAAMwS,KAGcG,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiB7J,UAAU,EAAG,KAIzB,MAArB6J,GAAiD,MAArBA,GAAiD,MAArBA,GAAiD,OAArBA,IACvFA,EAAmB,MAKzB,OAAQD,GAAOE,EAAoBD,EAAmB,MAExDV,EAAA/S,UAAAwU,0BAAA,SAA0BC,EAAoBxB,EAAQC,OAChDwB,EACAjB,EACAR,GAAUC,IACZD,EAASI,WAAWJ,GAAQG,QAAQ,IAIjCH,EAFqB,IACA,IACSA,EACjCQ,GAAoB,EAElBiB,EAAaC,EAAAA,OAASF,EAAoB,SAACG,GAC3C,OAAOvB,WAAWuB,EAAkB,QAAGxB,QAAQ,KAAOH,QAIpDS,EAAmBC,EAAAA,MAAQe,GACjC,GAAIhB,EAAkB,KACdE,EAAkB5S,OAAO4L,KAAK8G,GAAkBG,IACpD,SAACjN,GAAQ,OAAA8M,EAAiB9M,KAAMiN,IAAK,SAACC,GAAM,OAAAA,IACtCC,EAAgB/S,OAAO4L,KAAK8G,GAC5BM,EAAeJ,EAAgB,GAC/BiB,EAAoB,GACtB3B,EAASc,EACXa,EAAkBhR,KAAKmQ,GAEvBE,EAAAA,QAAUN,EAAiB,SAAC1R,GACxBA,GAASgR,GACb2B,EAAkBhR,KAAK3B,SAKnB4S,EAAqBV,EAAAA,KAAOS,IAKlCpB,EADgBM,EAHOM,EAAAA,UAAYT,EAAiB,SAACjS,GACrD,OAAOA,IAAMmT,KAGcR,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiB7J,UAAU,EAAG,KAGzB,MAArB6J,GAAiD,MAArBA,GAAiD,MAArBA,GAAkD,OAArBA,IACxFA,EAAmB,MAKzB,OAAQR,GAAUC,EAAWO,EAAmB,MAGlDV,EAAA/S,UAAA+U,uBAAA,SAAuBC,EAAiB/B,EAAQC,OAG1CO,EADEC,EAAmBC,EAAAA,MAAQqB,GAEjC,GAAItB,EAAkB,KACdE,EAAkB5S,OAAO4L,KAAK8G,GAAkBG,IACpD,SAACjN,GAAQ,OAAA8M,EAAiB9M,KAAMiN,IAAK,SAACC,GAAM,OAAAA,IACtCC,EAAgB/S,OAAO4L,KAAK8G,GAC5BM,EAAeJ,EAAgB,GAC/BqB,EAAoB,GACtBhC,EAASe,EACXiB,EAAkBpR,KAAKmQ,GAEvBE,EAAAA,QAAUN,EAAiB,SAAC1R,GACxBA,GAAS+Q,GACbgC,EAAkBpR,KAAK3B,SAInBgT,EAAqBd,EAAAA,KAAOa,IAKlCxB,EADgBM,EAHOM,EAAAA,UAAYT,EAAiB,SAACjS,GACrD,OAAOA,IAAMuT,KAGcZ,QAAQ,KAAM,KACpBC,SAAS,SAE5Bd,EAAmB,KADnBA,EAAmBA,EAAiB7J,UAAU,EAAG,KAIzB,MAArB6J,GAAiD,MAArBA,GAAiD,MAArBA,GAAkD,OAArBA,IACxFA,EAAmB,MAKzB,OAAQR,GAAUC,GAAUQ,EAAoBD,EAAmB,MAGrEV,EAAA/S,UAAAmV,QAAA,SAAQrQ,GAEN,OAAIA,IAAQgM,WAAqB,OAARhM,GAAwB,KAARA,GAAsB,SAARA,GAA0B,cAARA,MAIrE3D,MAAMgM,QAAQrI,IAAuB,IAAfA,EAAI7C,SAMhC8Q,EAAA/S,UAAAoV,cAAA,SAActH,EAAOuH,GAEnB,GAAIlU,MAAMgM,QAAQkI,GAAU,CAE1B,GAAuB,IAAnBA,EAAQpT,OACV,OAAO,EAKT,QAFIqT,GAAW,EAENvT,EAAI,EAAGA,EAAIsT,EAAQpT,OAAQF,IAAK,KACjC+C,EAAMuQ,EAAQtT,IACQ,IAAxB+L,EAAMhE,QAAQhF,KAChBwQ,GAAW,GAIf,OAAOA,EAEP,OAAmC,IAA5BxH,EAAMhE,QAAQuL,IAGzBtC,EAAA/S,UAAAuV,4BAAA,SAA4B3O,EAAKkH,GAIjC,OAHiBA,EAAM+F,IAAI,SAAS2B,GAClC,OAAOA,EAAK5O,MAIdmM,EAAA/S,UAAAyV,WAAA,SAAWvT,EAAOwT,EAAQC,GAKxB,GAHAD,EAASA,GAAU,aACnBC,EAASA,GAAU,UAEbzT,aAAiByP,MAGP,QADdzP,EAAQ,IAAIyP,KAAKzP,KACKA,IAAU4O,WAC9B,MAAM,IAAI8E,MAAM,yDAKpB,OAAO1T,GAIT6Q,EAAA/S,UAAA6V,iBAAA,SAAiB/H,EAAOuH,GAEtB,GAAIlU,MAAMgM,QAAQkI,GAAU,CAC1B,GAAuB,IAAnBA,EAAQpT,OACV,OAAO,EAIT,QAFIqT,GAAW,EAENvT,EAAI,EAAGA,EAAIsT,EAAQpT,OAAQF,IAAK,KAEjC+C,EAAMuQ,EAAQtT,IACQ,IAAxB+L,EAAMhE,QAAQhF,KAChBwQ,GAAW,GAGf,OAAOA,EAEP,OAAmC,IAA5BxH,EAAMhE,QAAQuL,IAIzBrU,OAAAyB,eAAIsQ,EAAA/S,UAAA,kBAAe,KAAnB,eACQ2L,EAAS7L,KACf,MAAO,CACL+V,iBAAkBlK,EAAOkK,iBACzB7C,QAASrH,EAAOqH,QAChBM,oBAAqB3H,EAAO2H,oBAC5BkB,0BAA2B7I,EAAO6I,0BAClCO,uBAAwBpJ,EAAOoJ,uBAC/BI,QAASxJ,EAAOwJ,QAChBC,cAAezJ,EAAOyJ,cACtBG,4BAA6B5J,EAAO4J,8DAG1CxC,EA7OA,GCCA+C,YAAA,WAIE,SAAAA,KACF,OAHgBA,EAAAC,+BAAgC,EAGhDD,EALA,GCIAE,sBAAA,WAEE,SAAAA,KA0BF,OAxBEA,EAAAhW,UAAAgR,SAAA,SAASC,EAAoC1K,GAG3C,OAAO,SAAC5F,GAEN,IAAKmV,YAAYC,8BACf,OAAO,SAGHrK,EAAauF,EAAM1I,oBAInB0N,GAHS,IAAIlD,oBAGYkD,gBAG/B,OAFiB,IAAIzK,kBAAmBC,YAAYC,EAAY/K,EAASsV,EAHhD,GAGmF1P,GAE/FwF,MAEJ,CAAEmK,cAAiB,CAAExK,WAAcA,EAAYjG,QAAUwL,EAAMxL,UAGjE,OAGbuQ,EA5BA,GCLAG,SAAA,WAAA,SAAAA,KAmBA,OAjByBA,EAAAC,mBAAqB,0BAErBD,EAAAE,iBAAmB,4BAEnBF,EAAAG,4BAA8B,8BAE9BH,EAAAI,eAAiB,mCAEjBJ,EAAAK,eAAiB,mCAEjBL,EAAAM,aAAe,+BAEfN,EAAAO,aAAe,+BAEfP,EAAAQ,QAAU,4BAEVR,EAAAS,QAAU,4BACnCT,EAnBA,GCDAU,kBAAA,WA0BE,SAAAA,KAoJF,OAlJEA,EAAA7W,UAAA8W,cAAA,SAAcxQ,EAAwBC,GAAtC,IAAArD,EAAApD,KAEQiX,EAAmB,GAyCzB,OAvCIzQ,EAAS0E,YAEXkJ,EAAAA,QAAU5N,EAAS0E,WAAY,SAACkD,GAE9B,OAAQA,EAAU7F,MAChB,IAAK,OACH0O,EAAKlT,KAAKX,EAAK8T,eACmB,EAAmCC,kBAGnEF,EAAKlT,KAAKX,EAAKgU,gCAEjB,MACF,IAAK,gBACHH,EAAKlT,KAAKX,EAAKiU,sBAAsBnG,SAAQ,EAAyCzK,IACtF,MACF,IAAK,MACHwQ,EAAKlT,KAAKX,EAAKkU,qBAAqB,EAAgCjF,MACpE,MACF,IAAK,MACH4E,EAAKlT,KAAKX,EAAKmU,qBAAqB,EAAgCtF,MACpE,MACF,IAAK,sBACHgF,EAAKlT,KAAKX,EAAKoU,6BAA6BtG,SAAQ,IACpD,MACF,IAAK,sBACH+F,EAAKlT,KAAKX,EAAKqU,6BAA6BvG,SAAQ,OAMxD1K,EAASyE,UAA0C,iBAAvBzE,EAAiB,UAAwC,SAAtBA,EAASyE,UAC1EgM,EAAKlT,KAAK/D,KAAK0X,mBAMVT,GAGT/V,OAAAyB,eAAIoU,EAAA7W,UAAA,+BAA4B,KAAhC,WACE,OAAO,IAAI+Q,8DAGb/P,OAAAyB,eAAIoU,EAAA7W,UAAA,+BAA4B,KAAhC,WACE,OAAO,IAAIqR,8DAGbrQ,OAAAyB,eAAIoU,EAAA7W,UAAA,oBAAiB,KAArB,WACE,OAAO,IAAIwR,mBAAoBR,0CAGjChQ,OAAAyB,eAAIoU,EAAA7W,UAAA,gBAAa,KAAjB,WACE,OAAO,IAAIyR,eAAgBT,0CAG7BhQ,OAAAyB,eAAIoU,EAAA7W,UAAA,iCAA8B,KAAlC,WACE,OAAO,IAAI4S,gCAAiC5B,0CAG9ChQ,OAAAyB,eAAIoU,EAAA7W,UAAA,mBAAgB,KAApB,WACE,OAAO,IAAI0S,kBAAmB1B,0CAGhChQ,OAAAyB,eAAIoU,EAAA7W,UAAA,mBAAgB,KAApB,WACE,OAAO,IAAIoS,kBAAmBpB,0CAGhChQ,OAAAyB,eAAIoU,EAAA7W,UAAA,qBAAkB,KAAtB,WACE,OAAOyX,MAAAA,WAAWC,2CAGpB1W,OAAAyB,eAAIoU,EAAA7W,UAAA,qBAAkB,KAAtB,WACE,OAAOyX,MAAAA,WAAWE,2CAGbd,EAAA7W,UAAAqX,qBAAP,SAA4BtF,GAC1B,OAAO,IAAID,cAAed,SAASe,IAG9B8E,EAAA7W,UAAAoX,qBAAP,SAA4BjF,GAE1B,OAAO,IAAID,cAAelB,SAASmB,IAGrCnR,OAAAyB,eAAIoU,EAAA7W,UAAA,wBAAqB,KAAzB,WAEE,OAAO,IAAIgW,uDAGNa,EAAA7W,UAAA4X,OAAP,SAAcA,EAAatR,OAEnBuR,EAA0B,GAEhC,IAAK,IAAMC,KAAYF,EACnB,GAAIA,EAAOvW,eAAeyW,GAEtB,OAAQA,GACN,IAAK,WACHD,EAAShU,KAAKsS,SAASC,oBACvB,MACF,IAAK,OACHyB,EAAShU,KAAKsS,SAASE,kBACvB,MACF,IAAK,wBACHwB,EAAShU,KAAKsS,SAASG,6BACvB,MACF,IAAK,YACHuB,EAAShU,KAAKsS,SAASI,eAAejC,QAAQ,cAAesD,EAAOG,UAAUC,iBAC9E,MACF,IAAK,YACHH,EAAShU,KAAKsS,SAASI,eAAejC,QAAQ,cAAesD,EAAOK,UAAUD,iBAC9E,MACF,IAAK,UACHH,EAAShU,KAAKsS,SAASM,aAAanC,QAAQ,YAAasD,EAAOjF,QAAQL,eACxE,MACF,IAAK,UACHuF,EAAShU,KAAKsS,SAASO,aAAapC,QAAQ,YAAasD,EAAOvF,QAAQC,eACxE,MACF,IAAK,MACHuF,EAAShU,KAAKsS,SAASQ,QAAQrC,QAAQ,QAASsD,EAAOzF,IAAIH,gBAC3D,MACF,IAAK,MACH6F,EAAShU,KAAKsS,SAASS,QAAQtC,QAAQ,QAASsD,EAAO7F,IAAIC,gBAC3D,MACF,IAAK,gBACH6F,EAAShU,KAAK+T,EAAsB,cAAEnS,SACtC,MACF,IAAK,uBACHoS,EAAShU,KAAK+T,EAA6B,qBAAEnS,SAC7C,MACF,IAAK,uBACHoS,EAAShU,KAAK+T,EAA6B,qBAAEnS,SAMzD,OAAOoS,uBArJV3X,KAAAA,mDAuJD2W,EA9KA,GCAAqB,uBAAA,WAiBI,SAAAA,EAAoBC,EACXC,EACAC,GAFWvY,KAAAqY,iBAAAA,EACXrY,KAAAsY,iBAAAA,EACAtY,KAAAuY,kBAAAA,EA4Db,OAzDIH,EAAAlY,UAAAsY,wBAAA,SAAwBhS,EAAwB3F,EAC5C4F,OACMuF,EACFhM,KAAKqY,iBAAiB1M,YAAYnF,EAAgB,QAAY3F,EAC1Db,KAAKsY,iBAAiBnC,gBAAiB,GAAI1P,GAC7CT,EAAqB,CACvBI,WAAW,EACXqS,sBAAuBjS,EAAgB,QACvCH,8BAA+B,eACrBqS,EAAS1M,EAASC,MACxBjG,EAASI,UAAYsS,IAG7B,OAAO1S,GAGXoS,EAAAlY,UAAAyY,qBAAA,SAAqBnS,EAAwB3F,EACzC4F,OAEM2E,EAAY5E,EAAS4E,KACrBhJ,EAAgC,iBAATgJ,EAAoBpL,KAAK4Y,0BAA0BxN,GAAQ5E,EAAa,KAI/FrG,EAAeH,KAAKuY,kBAAkBpY,eAEtC6L,EAAqBhM,KAAKqY,iBAAiB1M,YAAYvJ,EAAOvB,EACpEb,KAAKsY,iBAAiBnC,gBAAiB,GAAI1P,GAErCnC,EAAe,CACjBQ,QAAQ,EACR+T,mBAAoBzW,EACpByC,2BAA4B,WAKlBP,EAAMQ,QADS,IAAjB3E,GAGkB6L,EAASC,QAIvC,OAAO3H,GAGX8T,EAAAlY,UAAA0Y,0BAAA,SAA0BxN,GAExB,OAAIA,EAAKhJ,iBAAiBf,MAGZ,oBADa,IAAO+J,EAAKhJ,MAAM0W,KAAK,OAAW,KACf,KAAO1N,EAAKC,MAAQ,IAI3D,wBA/DZjL,KAAAA,sDATQsL,wBAIAuH,0BAGAlT,oBAmETqY,EA/EA,GCAAW,cAAA,WAYI,SAAAA,EAAoBV,EAA4CC,GAA5CtY,KAAAqY,iBAAAA,EAA4CrY,KAAAsY,iBAAAA,EAkBpE,OAhBIS,EAAA7Y,UAAA8Y,yBAAA,SAAyBxS,EAAwB3F,EAC7C4F,OACMuF,EACFhM,KAAKqY,iBAAiB1M,YAAYnF,EAASlB,MAAM2T,oBAAqBpY,EAClEb,KAAKsY,iBAAiBnC,gBAAiB,GAAI1P,GAC7CrB,EAAmB,CACrBD,OAAO,EACP8T,oBAAqBzS,EAASlB,MAAM2T,oBACpCpT,aAAcW,EAASlB,MAAMK,QAC7BC,0BAA2B,eACjB8S,EAAS1M,EAASC,MACxB7G,EAAUD,MAAQuT,IAG1B,OAAOtT,uBAlBdhF,KAAAA,sDANQsL,wBAGAuH,sBAuBT8F,EA9BA,GCAAG,mBAAA,WAwBI,SAAAA,EAAYC,EACRC,EAAwDC,GAAArZ,KAAAqZ,cAAAA,EAL5DrZ,KAAA6P,SAAW,GAMP7P,KAAKmZ,kBAAoBA,EACzBnZ,KAAKoZ,uBAAyBA,EA4HtC,OAzHIF,EAAAhZ,UAAAoZ,qBAAA,SAAqBC,EAA8ClS,EAC/DmS,EAA2B/S,GAC3B,GAAI8S,aAAyBpJ,aAAc,CACvC,GAAIoJ,EAAcE,cAAgBC,eAAe3J,aAC7C,OAAO/P,KAAK2Z,kBAAkBJ,EAAelS,EAAeZ,GAEhE,GAAI8S,EAAcE,cAAgBC,eAAe9J,aAC7C,OAAO5P,KAAK4Z,uBAAuBL,EAAeC,EAAkBnS,EAAeZ,GAGvF,GAAI8S,EAAcE,cAAgBC,eAAexL,eAC7C,OAAOlO,KAAK6Z,oBAAoBN,EAAelS,EAAeZ,GAGtE,OAAO,MAGXyS,EAAAhZ,UAAA0Z,uBAAA,SAAuBpT,EAAwBgT,EAC3CnS,EAA8BZ,OACxBqT,EAAY,IAAIlK,aAAa,IACnC5P,KAAK+Z,oBAAoBvT,EAAUsT,EAAWrT,GAC9CzG,KAAKga,WAAWxT,EAAUsT,EAAWrT,GACjCY,aAAyBuI,cACzBvI,EAAc4S,WAAWzT,EAASM,IAAKgT,OAGrCI,EAAO,EAMb,OAJIV,GAAoBU,GAAsC,EAA3BA,EAAQC,UAAUhY,QACjDnC,KAAKoa,gCAAgCF,EAAQC,UAAWL,EAAWrT,GAGhEqT,GAGXZ,EAAAhZ,UAAAka,gCAAA,SAAgCD,EAA2B9S,EAA6BZ,GAAxF,IAAArD,EAAApD,KAE2B,EAAnBma,EAAUhY,QACVgY,EAAUvV,QAAQ,SAAAuG,OACRkP,EAAYjX,EAAKkW,qBAAqBnO,EAAS9D,GAAe,EAAMZ,GACxD,OAAd4T,GACAhT,EAAciT,WAAWnP,EAAQrE,IAAKuT,MAOtDnB,EAAAhZ,UAAAyZ,kBAAA,SAAkBnT,EAAwBa,EAA8BZ,OAG/D8T,EADCrP,EAAalL,KAAKmZ,kBAAkBnC,cAAcxQ,EAAUC,GAclE,OAXK8T,EADArP,GAAkC,EAApBA,EAAW/I,OACb,IAAI4N,aAAa,GAAI7E,EAAW,IAEjC,IAAI6E,aAAa,KAEvB5D,KAAO3F,EAASM,IAC1B9G,KAAK+Z,oBAAoBvT,EAAU+T,EAAW9T,GAC9CzG,KAAKga,WAAWxT,EAAU+T,EAAW9T,GACjCY,aAAyBuI,cACzBvI,EAAc4S,WAAWzT,EAASM,IAAKyT,GAGpCA,GAGXrB,EAAAhZ,UAAA2Z,oBAAA,SAAoBrT,EAAwBa,EAA8BZ,OAEhErE,EAAQoE,EAAS6J,cAAgB,GACjCnF,EAAalL,KAAKmZ,kBAAkBnC,cAAcxQ,EAAUC,GAE5D5F,EAAU,IAAIqN,eAAe9L,EAAO8I,GAU1C,OATArK,EAAQsL,KAAO3F,EAASM,IACxB9G,KAAK+Z,oBAAoBvT,EAAU3F,EAAS4F,GAC5CzG,KAAKga,WAAWxT,EAAU3F,EAAS4F,GACnCzG,KAAKwa,eAAehU,EAAU3F,EAAU4F,EAAOA,EAAK+F,qBAAqBC,YAAc,MAEnFpF,aAAyBuI,cACzBvI,EAAc4S,WAAWzT,EAASM,IAAKjG,GAGpCA,GAGHqY,EAAAhZ,UAAA8Z,WAAR,SAAmBxT,EACf3F,EAAuD4F,GACvD,GAAID,EAASlB,OAA4B,KAAnBkB,EAASlB,MAAc,KACnCmV,EAAQza,KAAKqZ,cAAcL,yBAAyBxS,EAAU3F,EAAS4F,GAC7E5F,EAAQ2O,WAAWiL,KAGnBvB,EAAAhZ,UAAA6Z,oBAAR,SAA4BvT,EACxB3F,EAAuD4F,GACvD,GAAID,EAAS4E,MAA0B,KAAlB5E,EAAS4E,KAAa,KACjC9G,EAAQtE,KAAKoZ,uBAAuBT,qBAAqBnS,EAAU3F,EAAS4F,GAClF5F,EAAQiO,YAAYxK,GAGxB,GAAIkC,EAASrC,SAAgC,KAArBqC,EAASrC,QAAgB,KACvCA,EACFnE,KAAKoZ,uBAAuBZ,wBAAwBhS,EAAU3F,EAAS4F,GAC3E5F,EAAQwO,eAAelL,KAIvB+U,EAAAhZ,UAAAsa,eAAR,SAAuBhU,EACnB3F,EAAyB6Z,GACzB,GAAIlU,EAAS8E,qBAAwD,KAAjC9E,EAAS8E,oBAA4B,KAC/DO,EAA6B,IAAIoH,mBAEjCjH,GAD2B,IAAIN,kBACHC,YAAYnF,EAAS8E,oBACjDzK,EACFgL,EAAOsK,gBACPuE,GAEJ7Z,EAAQmO,gBAAgBhD,EAASC,2BAhI5C7L,KAAAA,sDARQ2W,yBACAqB,8BACAW,iBA2ITG,EAvJA,GCAayB,eAAiB,o5GCA9BC,YAAA,WAKI,SAAAA,IADQ5a,KAAA6a,aAAoB,GA0BhC,OAtBI3Z,OAAAyB,eAAIiY,EAAA1a,UAAA,cAAW,KAAf,WACI,OAAOF,KAAK6a,8CAGhBD,EAAA1a,UAAA4a,mBAAA,SAAmBhU,EAAa4T,EAAiBK,GAC7C,QAD6C,IAAAA,IAAAA,GAAA,GACzCA,EAEA,IAAK,IAAMlZ,KAAK6Y,EACZ3N,QAAQiO,IAAI,cAAenZ,EAAG6Y,EAAW7Y,IACzC7B,KAAK8a,mBAAmBjZ,EAAG6Y,EAAW7Y,IAAI,GAG9C7B,KAAKyM,YAAY3F,IACjBiG,QAAQC,KAAK,oCAAqClG,GAEtD9G,KAAK6a,aAAa/T,GAAO4T,GAG7BE,EAAA1a,UAAA+a,gBAAA,SAAgBnU,UACL9G,KAAK6a,aAAa/T,wBAzBhC1G,KAAAA,mDA4BDwa,EA9BA,GCAAM,sBAAA,WA+NE,SAAAA,EACQ/B,EACA1M,EACA0O,EACkBC,GAHlBpb,KAAAmZ,kBAAAA,EACAnZ,KAAAyM,YAAAA,EACAzM,KAAAmb,kBAAAA,EACkBnb,KAAAob,SAAAA,EAZnBpb,KAAAqb,gBAA2C,GAK3Crb,KAAAsb,aAAc,EAQnBtb,KAAKub,UAAY,EA8KrB,OA3KSL,EAAAhb,UAAAsb,SAAP,WAAA,IAAApY,EAAApD,KAGE,GAFAA,KAAKyb,oBACLzb,KAAK0b,kBACD1b,KAAK0H,MAAQ1H,KAAK0H,KAAKjB,KAAM,KACzB3F,EAAMd,KAAK0H,KAAKjB,KAAKkV,oBAAoBC,YAC3C9a,GAAOA,IAAQd,KAAKub,YACtBvb,KAAKub,UAAYza,GAGjBd,KAAK0H,MAA6C,SAArC1H,KAAK0H,KAAKlB,SAASgK,eAClCxQ,KAAKmb,kBAAkB3a,oBAAoB8C,UACzC,SAAC3C,GACCyC,EAAKyY,gBAAgBlb,KAIvBX,KAAK0H,MAA6C,YAArC1H,KAAK0H,KAAKlB,SAASgK,gBAClCxQ,KAAKsb,aAAgBtb,KAAK0H,KAAa,SAAmBoU,YAGxD9b,KAAK+b,iBACP/b,KAAK+b,gBAAgBC,kBAAkBhc,OAMpCkb,EAAAhb,UAAA8b,kBAAP,SAAyBzS,GACvBvJ,KAAKqb,gBAAgBtX,KAAKwF,IAGrB2R,EAAAhb,UAAAub,kBAAP,WACMzb,KAAK0H,MAAQ1H,KAAK0H,KAAKlB,SAAS+J,QACC,kBAArCvQ,KAAK0H,KAAKlB,SAASgK,gBACjBxQ,KAAK0a,WAAa1a,KAAKyM,YAAYA,YAAYzM,KAAK0H,KAAKlB,SAASkU,YAC9D1a,KAAK0a,YAAc1a,KAAK0H,KAAKlB,SAASyV,oBACxCjc,KAAK0a,WAAWuB,kBAAoBjc,KAAK0H,KAAKlB,SAASyV,qBAKtDf,EAAAhb,UAAAwb,gBAAP,WACM1b,KAAK0H,MAAQ1H,KAAK0H,KAAKlB,SAAS+J,QAA+C,SAArCvQ,KAAK0H,KAAKlB,SAASgK,gBAC/DxQ,KAAK0a,WAAa1a,KAAKyM,YAAYA,YAAYzM,KAAK0H,KAAKlB,SAASkU,cAOtEQ,EAAAhb,UAAAgc,aAAA,SAAaxU,GACX,GAAoC,YAAhCA,EAAKlB,SAASgK,cAWlB,OAAO,MAVD2L,GAAsB,EAQ1B,OAP+Bjb,OAAO4L,KAAKpF,EAAKC,UAAUyU,MAAM,SAACC,OAC3DC,EAAY5U,EAAKC,SAAS0U,GAI9B,OAHIC,aAAqB/U,YACvB4U,EAAsBjb,OAAO4L,KAAKwP,EAAU3U,UAAUyU,MAAM,SAACna,GAAM,OAAAqa,EAAU3U,SAAS1F,GAAGpB,QAAQqD,UAE5FwD,EAAKC,SAAS0U,GAAGxb,QAAQqD,QAAUiY,KAO1CjB,EAAAhb,UAAAqc,SAAP,SAAgBC,GACbxc,KAAKub,UAAYiB,GAGZtB,EAAAhb,UAAAuc,gBAAP,WACOzc,KAAK0c,sBACR1c,KAAKuc,SAASvc,KAAKub,UAAY,GAC/BH,SAASuB,KAAKC,UAAY,IAItB1B,EAAAhb,UAAAwc,kBAAR,WACE,OAA0B,IAAnB1c,KAAKub,WAGNL,EAAAhb,UAAA2c,iBAAR,WACE,OAAO7c,KAAKub,YAAcvb,KAAK0H,KAAKlB,SAAoB,UAAErE,OAAS,GAG7D+Y,EAAAhb,UAAA4c,YAAR,WACO9c,KAAK6c,qBACR7c,KAAKuc,SAASvc,KAAKub,UAAY,GAC/BH,SAASuB,KAAKC,UAAY,IAGtB1B,EAAAhb,UAAA6c,YAAR,SAAoBC,GAClBhd,KAAKub,UAAYyB,EACjBhd,KAAKid,kBAEC/B,EAAAhb,UAAA+c,eAAR,WACMjd,KAAK0H,MAAQ1H,KAAK0H,KAAKjB,OACzBzG,KAAK0H,KAAKjB,KAAKkV,oBAAiC,YAAI3b,KAAKub,YAIrDL,EAAAhb,UAAAgd,UAAT,WACG,OAAOld,KAAK0H,KAAK7G,QAAQsc,UAAYnd,KAAK0H,KAAK7G,QAAQuc,OAGjDlC,EAAAhb,UAAA4X,OAAR,WACE,OAAO9X,KAAKqd,UAAUrd,KAAK0H,OAItBwT,EAAAhb,UAAA2b,gBAAP,SAAuBlb,GAAvB,IAAAyC,EAAApD,KAEQc,GAAeH,EAAM2c,MAAM,KAAK,GAChCC,EAAa5c,EAAM2c,MAAM,KAAK,GAAK,KAGnCE,EAAsCxd,KAAKqb,gBAAgBva,GAEjEd,KAAKuc,SAASzb,GAEd2c,WAAW,WAGTD,EAAanC,gBAAgBzW,QAAQ,SAAC8Y,GACpCA,EAAQpC,aAAc,EAEtBmC,WAAW,eACHtS,EAAe/H,EAAKgY,SAASuC,eAAeJ,GAClC,OAAZpS,GAAoBA,EAAQyS,QAC9BzS,EAAQyS,QACRzS,EAAQ0S,eAAe,CAAEC,SAAU,SAAUC,MAAO,aAErD,QAGJ,MAGE7C,EAAAhb,UAAA8d,cAAP,SAAqBtW,GAEnB1H,KAAK0H,KAAOA,GAGPwT,EAAAhb,UAAA+d,OAAP,SAAcC,KAKPhD,EAAAhb,UAAAie,kBAAP,SAAyBC,OACjBlR,EAAIkO,SAASuC,eAAeS,GAEV,UAApBlR,EAAEmR,MAAMC,QACRpR,EAAEmR,MAAMC,QAAU,OAElBpR,EAAEmR,MAAMC,QAAU,QAItBvR,QAAQiO,IAAI,SAAUoD,IAIflD,EAAAhb,UAAAmd,UAAR,SAAkB3V,OACXoQ,EAAcpQ,EAAK7G,QAAQiX,OAEjC,OAAIA,EAEK9X,KAAKmZ,kBAAkBrB,OAAOA,EAAQpQ,EAAKlB,UAG7C,wBAlYV+X,KAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAU,uiVA+LVC,OAAQ,CAAC,sBAAuBhE,6DAtMzB5D,yBAHA6D,mBAKAva,qDAwNNue,KAAAA,OAAMJ,KAAA,CAACK,OAAAA,wDAfPC,KAAAA,oBACAA,KAAAA,2BACAA,KAAAA,SA4LH5D,EAlZA,GCAA6D,uBAAA,WA8BE,SAAAA,EAAoB5F,EAA8CgC,GAA9Cnb,KAAAmZ,kBAAAA,EAA8CnZ,KAAAmb,kBAAAA,EA2CpE,OAzCE4D,EAAA7e,UAAAsb,SAAA,aAGAuD,EAAA7e,UAAA8e,WAAA,WACE,OAAQhf,KAAKyG,KAAK2W,OAASpd,KAAKyG,KAAKuY,YAGvC9d,OAAAyB,eAAIoc,EAAA7e,UAAA,aAAU,KAAd,WAGE,OADwBF,KAAKyG,KAAKwY,oBAAoBjf,KAAKyG,KAAKsC,SAAU,qCAI5EgW,EAAA7e,UAAAgf,gBAAA,SAAgBxX,OACNoQ,EAAcpQ,EAAK7G,QAAQiX,OAEjC,OAAIA,EAEO9X,KAAKmZ,kBAAkBrB,OAAOA,EAAQpQ,EAAKlB,UAG/C,IAGXuY,EAAA7e,UAAAQ,mBAAA,SAAmBye,GAAnB,IAAA/b,EAAApD,KAEQqK,EAAyBrK,KAAKyG,KAAKqE,uBAAuBqU,EAAUtV,KAAKC,UAAU,EAAGqV,EAAUtV,KAAKG,QAAQ,OAEnHoK,EAAAA,QAAU/J,EAAO,SAAC3C,GAEhB,GAAoC,SAAhCA,EAAKlB,SAASgK,cAA0B,KACpC4O,EAAoBhc,EAAKic,aAAa3X,GAC5CtE,EAAK+X,kBAAkBza,mBAAmB0e,EAAY,IAAMD,EAAU3Y,SAASM,SAKrFiY,EAAA7e,UAAAmf,aAAA,SAAa3X,GAEV,OADqC1H,KAAKyG,KAAKsC,SAAiB,SAC3CoR,UAAUnQ,QAAQtC,EAAKlB,+BA5DhD+X,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,iBACVC,SAAU,waAWVC,OAAQ,CAAC,2LAlBJ5H,yBAGA1W,mDAmBNye,KAAAA,SA6CHC,EAzEA,GCAAO,6BAAA,WAGA,SAAAA,KAiCA,OA/BSA,EAAApf,UAAAqf,0BAAP,SAAiC/Y,EAAyBgZ,EAAuBC,OAE3EC,EAAc,GACZC,EAAkBnZ,EAASkK,oBACjC,GAAIkP,EAAAA,QAAUD,EAAgBvd,OAAQ,KAChCyd,EAAiB,EACrBC,EAAAA,KAAOH,EAAgBvd,MAAO,SAAC4C,GAC7B8a,EAAAA,KAAOtZ,EAAS4J,QAAS,SAAC2P,GAEpBA,EAAOP,KAAmBxa,IACL,IAAnB6a,EACFH,GAA4BK,EAAON,GAEnCC,EAAcA,EAAc,KAAOK,EAAON,GAE5CI,cAMNC,EAAAA,KAAOtZ,EAAS4J,QAAS,SAAC2P,GACpBA,EAAOP,KAAmBG,EAAgBvd,QAC5Csd,EAAcK,EAAON,MAI3B,OAAOC,GAIXJ,EApCA,GCAAU,yBAAA,WAiBE,SAAAA,EAAoBC,GAAAjgB,KAAAigB,sBAAAA,EAJVjgB,KAAAkgB,YAAc,IAAIC,KAAAA,aA+D9B,OAvDEH,EAAA9f,UAAA0O,SADA,SACS1B,GAEe,iBAAlBA,EAAEkT,OAAOC,QAEPrgB,KAAKsgB,OAAWtgB,KAAKugB,cAAcvgB,KAAKsgB,MAAM9Z,SAASgK,cAAe,SACpExQ,KAAKugB,cAAcvgB,KAAKsgB,MAAM9Z,SAASgK,cAAe,aAE1DxQ,KAAKsgB,MAAMzf,QAAQ+N,SAAS5O,KAAKsgB,MAAM9Z,SAASkK,oBAAoBtO,OAEpEpC,KAAKsgB,MAAM9Z,SAA0B,gBAAIxG,KAAKsgB,MAAM9Z,SAASkK,oBAC7DxD,EAAEsT,kBACFxgB,KAAKkgB,YAAYO,KAAKzgB,KAAKsgB,UAMzBN,EAAA9f,UAAAqgB,cAAR,SAAsBG,EAAGzf,GACvB,OAAIyf,IAAMzf,GAMZC,OAAAyB,eACIqd,EAAA9f,UAAA,OAAI,KADR,SACSwH,GAEP,GAAIA,IACF1H,KAAKsgB,MAAQ5Y,EACT1H,KAAKsgB,MAAM9Z,SAASqK,wBAA0B8P,EAAAA,YAAc3gB,KAAKsgB,MAAM9Z,SAASkK,sBAAsB,KAClG4N,EAAe,CAAEsC,KAAM,GAAIC,MAAO,IACG,WAAtC7gB,KAAKsgB,MAAM9Z,SAASgK,eACkB,iBAAtCxQ,KAAKsgB,MAAM9Z,SAASgK,eACkB,kBAAtCxQ,KAAKsgB,MAAM9Z,SAASgK,eAEvB8N,EAAQsC,KAAO5gB,KAAKigB,sBAAsBV,0BACxCvf,KAAKsgB,MAAM9Z,SACX,QACA,SAEF8X,EAAQuC,MAAQ7gB,KAAKsgB,MAAM9Z,SAASkK,oBAAoBoQ,UAExD9gB,KAAKsgB,MAAM9Z,SAA4B,kBAAI8X,GAEjCqC,EAAAA,YAAc3gB,KAAKsgB,MAAM9Z,SAASkK,uBAE5C4N,EAAQsC,KAAO5gB,KAAKsgB,MAAM9Z,SAASkK,oBAAoBtO,MACvDkc,EAAQuC,MAAQ7gB,KAAKsgB,MAAM9Z,SAASkK,oBAAoBoQ,UAExD9gB,KAAKsgB,MAAM9Z,SAA4B,kBAAI8X,yDAhEpDyC,KAAAA,UAASvC,KAAA,CAAC,CACTC,SAAU,sDALHa,+DAUNR,KAAAA,2BACAkC,KAAAA,yBAOAC,KAAAA,aAAYzC,KAAA,CAAC,QAAS,CAAC,yBAyBvBM,KAAAA,SA+BHkB,EA5EA,GCAakB,MAAQ,onECArBC,OAAA,WAUI,SAAAA,EAAY/e,EAAeqO,GACvBzQ,KAAKoC,MAAQA,EACbpC,KAAKyQ,MAAQA,EAEbzQ,KAAKohB,UAAW,EAChBphB,KAAKqhB,aAAc,EACnBrhB,KAAKshB,UAAW,EAChBthB,KAAKmF,OAAQ,EAyBrB,OAtBIgc,EAAAjhB,UAAA2O,KAAA,WACI7O,KAAKmF,OAAQ,GAGjBgc,EAAAjhB,UAAAkL,KAAA,WACIpL,KAAKmF,OAAQ,GAGjBgc,EAAAjhB,UAAAiE,QAAA,WACInE,KAAKohB,UAAW,GAGpBD,EAAAjhB,UAAAoG,OAAA,WACItG,KAAKohB,UAAW,GAGpBD,EAAAjhB,UAAAqhB,gBAAA,WACI,MAAO,CACH9Q,MAAOzQ,KAAKyQ,MACZrO,MAAOpC,KAAKoC,QAGxB+e,EA1CA,GCAAK,WAAA,WAAA,SAAAA,KAw1BA,OAZWA,EAAAC,MAAP,SAAab,GAAb,IAAAxd,EAAApD,KAKI,OAAI4gB,EACOA,EAAKpM,QAAQ,oBAJV,SAACkM,GACX,OAAOtd,EAAKse,WAAWhB,IAAMA,IAKtB,IAl1BRc,EAAAE,WAAa,CAChelBz0B,EAx1BA,GCGA00B,WAAA,WAyBI,SAAAA,EAAY9lC,IAjBJpQ,KAAAm2C,mBAA6B,OAmBtB/lC,IACPA,EAAU,IAGdpQ,KAAKo2C,SAAWhmC,EAAQ2D,IAAI,SAACgM,OACnBle,EAAY,IAAIsf,OAAOpB,EAAO3d,MAAO2d,EAAOtP,OAIlD,OAHIsP,EAAOqB,UACPvf,EAAEsC,UAECtC,IAGX7B,KAAKq2C,YAuLb,OApNWH,EAAAI,YAAP,SAAmBC,EAAmBC,GAElC,GAAID,EAAGp0C,SAAWq0C,EAAGr0C,OACjB,OAAO,MAGLue,EAAmB61B,EAAGE,QAAQC,OAC9Bz1C,EAAmBu1C,EAAGC,QAAQC,OAEpC,OAAOh2B,EAAEtE,MAAM,SAACxL,EAAG3O,GACf,OAAO2O,IAAM3P,EAAEgB,MAwBvBf,OAAAyB,eAAIuzC,EAAAh2C,UAAA,UAAO,KAAX,WACI,OAAOF,KAAKo2C,0CAGhBF,EAAAh2C,UAAAy2C,kBAAA,SAAkBv0C,GACd,OAAOpC,KAAKoQ,QAAQwmC,OAAO,SAAC72B,GACxB,OAAOA,EAAO3d,QAAUA,KAMhClB,OAAAyB,eAAIuzC,EAAAh2C,UAAA,QAAK,KAAT,WACI,OAAOF,KAAK62C,UAAU9iC,IAAI,SAAC+iC,GACvB,OAAOA,EAAe10C,aAI9B,SAAUwO,GACNA,EAAI,MAAOA,EAAkC,GAAKA,EAElD5Q,KAAKoQ,QAAQxL,QAAQ,SAACmb,GAClBA,EAAOuB,UAAsC,EAA3B1Q,EAAE5G,QAAQ+V,EAAO3d,0CAM3ClB,OAAAyB,eAAIuzC,EAAAh2C,UAAA,YAAS,KAAb,WACI,OAAOF,KAAKoQ,QAAQwmC,OAAO,SAAC72B,GACxB,OAAOA,EAAOuB,4CAItB40B,EAAAh2C,UAAA62C,OAAA,SAAOh3B,EAAgBi3B,GACdA,GACDh3C,KAAKi3C,iBAETl3B,EAAOuB,UAAW,GAGtB40B,EAAAh2C,UAAAg3C,SAAA,SAASn3B,GACLA,EAAOuB,UAAW,GAGtB40B,EAAAh2C,UAAA+2C,eAAA,WACIj3C,KAAKoQ,QAAQxL,QAAQ,SAACmb,GAClBA,EAAOuB,UAAW,KAM1BpgB,OAAAyB,eAAIuzC,EAAAh2C,UAAA,WAAQ,KAAZ,WACI,OAAOF,KAAKoQ,QAAQwmC,OAAO,SAAC72B,GACxB,OAAOA,EAAO5a,yCAItB+wC,EAAAh2C,UAAA02C,OAAA,SAAOO,GAEiB,KAAhBA,EAAKC,OACLp3C,KAAKq3C,cAELr3C,KAAKoQ,QAAQxL,QAAQ,SAACmb,OACZu3B,EAAY91B,WAAWC,MAAM1B,EAAOtP,OAAO8mC,cAC3CC,EAAYh2B,WAAWC,MAAM01B,GAAMI,cACzCx3B,EAAO5a,OAAwB,EAAhBmyC,EAAEttC,QAAQwtC,KAIjCx3C,KAAKq2C,aAGTH,EAAAh2C,UAAAm3C,YAAA,WACIr3C,KAAKoQ,QAAQxL,QAAQ,SAACmb,GAClBA,EAAO5a,OAAQ,KAMvBjE,OAAAyB,eAAIuzC,EAAAh2C,UAAA,oBAAiB,KAArB,WACI,OAAOF,KAAKm2C,oDAGhBD,EAAAh2C,UAAAm2C,UAAA,eACUt2B,EAAiB/f,KAAKy3C,mBACxBz3C,KAAK03C,wBAA0B13C,KAAK23C,gBACxC33C,KAAK43C,gBAAgB73B,IAGzBm2B,EAAAh2C,UAAA03C,gBAAA,SAAgB73B,GACZ/f,KAAK63C,yBAEU,OAAX93B,IACAA,EAAOsB,aAAc,EACrBrhB,KAAKm2C,mBAAqBp2B,IAIlCm2B,EAAAh2C,UAAA43C,oBAAA,eACUC,EAAe/3C,KAAKg4C,SACpBhxC,EAAQhH,KAAKi4C,4BAA4BF,IAElC,EAAT/wC,GAAcA,EAAQ+wC,EAAa51C,OAAS,GAC5CnC,KAAK43C,gBAAgBG,EAAa/wC,EAAQ,KAIlDkvC,EAAAh2C,UAAAg4C,wBAAA,eACUH,EAAe/3C,KAAKg4C,SACpBhxC,EAAQhH,KAAKi4C,4BAA4BF,GAEnC,EAAR/wC,GACAhH,KAAK43C,gBAAgBG,EAAa/wC,EAAQ,KAI1CkvC,EAAAh2C,UAAA23C,uBAAR,WACmC,OAA3B73C,KAAKm4C,oBACLn4C,KAAKm4C,kBAAkB92B,aAAc,EACrCrhB,KAAKm2C,mBAAqB,OAI1BD,EAAAh2C,UAAA+3C,4BAAR,SAAoC7nC,GAChC,IAAK,IAAInO,EAAI,EAAGA,EAAImO,EAAQjO,OAAQF,IAChC,GAAImO,EAAQnO,GAAGof,YACX,OAAOpf,EAGf,OAAQ,GAGZi0C,EAAAh2C,UAAAk4C,oBAAA,WACI,OAAOp4C,KAAKi4C,4BAA4Bj4C,KAAKg4C,WAKjD9B,EAAAh2C,UAAAm4C,SAAA,WACI,OAAOr4C,KAAKoQ,QAAQkoC,KAAK,SAACv4B,GACtB,OAAOA,EAAO5a,SAItB+wC,EAAAh2C,UAAAq4C,YAAA,WACI,OAAOv4C,KAAKoQ,QAAQkoC,KAAK,SAACv4B,GACtB,OAAOA,EAAOuB,YAItB40B,EAAAh2C,UAAAu3C,iBAAA,WACI,OAAOz3C,KAAKoQ,QAAQkoC,KAAK,SAACv4B,GACtB,OAAOA,EAAO5a,OAAS4a,EAAOuB,YAI9B40B,EAAAh2C,UAAAy3C,cAAR,eACI,IAAqB,IAAAa,EAAAC,SAAAz4C,KAAKoQ,SAAOsoC,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,CAA5B,IAAMmf,EAAM24B,EAAAt2C,MACb,GAAI2d,EAAO5a,MACP,OAAO4a,uGAGf,OAAO,cAGHm2B,EAAAh2C,UAAAw3C,sBAAR,eACI,IAAqB,IAAAc,EAAAC,SAAAz4C,KAAKoQ,SAAOsoC,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,CAA5B,IAAMmf,EAAM24B,EAAAt2C,MACb,GAAI2d,EAAO5a,OAAS4a,EAAOuB,SACvB,OAAOvB,uGAGf,OAAO,cAIfm2B,EA9NA,GCgBayC,sBAA0C,CACnDC,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAAC,kBAC9BC,OAAO,GAGXD,gBAAA,WAAA,SAAAA,IAsFYh5C,KAAAk5C,KAAY,CAChBC,UAAW,EACXC,IAAK,EACLC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,GAAI,GACJC,KAAM,IAKDz5C,KAAA05C,YAAa,EACb15C,KAAAohB,UAAW,EACXphB,KAAA25C,eAAiB,UACjB35C,KAAA45C,mBAAqB,OACrB55C,KAAAg3C,UAAW,EACXh3C,KAAA65C,SAAW,EACX75C,KAAA85C,YAAc,mBACd95C,KAAA+5C,YAAc,GAEb/5C,KAAAg6C,OAA6B,IAAI75B,KAAAA,aACjCngB,KAAAi6C,OAA6B,IAAI95B,KAAAA,aACjCngB,KAAAshB,SAA8B,IAAInB,KAAAA,aAClCngB,KAAAk6C,WAAgC,IAAI/5B,KAAAA,aACpCngB,KAAAm6C,MAA2B,IAAIh6B,KAAAA,aAOjCngB,KAAAo6C,OAAqB,GAI7Bp6C,KAAAu4C,aAAc,EAGdv4C,KAAAq6C,eAAgB,EAChBr6C,KAAAs6C,iBAAmB,EACnBt6C,KAAAu6C,UAAW,EACXv6C,KAAAw6C,SAAU,EACVx6C,KAAAy6C,YAAa,EACbz6C,KAAA06C,QAAS,EACT16C,KAAA26C,gBAAkB,GAElB36C,KAAA46C,cAAe,EACf56C,KAAA66C,wBAAyB,EAOjB76C,KAAA86C,SAAW,SAACC,KACZ/6C,KAAAg7C,UAAY,aAwaxB,OAlaIhC,EAAA94C,UAAAsb,SAAA,WACIxb,KAAK26C,gBAAkB36C,KAAK+5C,aAGhCf,EAAA94C,UAAA+6C,gBAAA,WACIj7C,KAAKk7C,qBAGTlC,EAAA94C,UAAAi7C,YAAA,SAAYC,GAIR,GAHIA,EAAQ75C,eAAe,YACvBvB,KAAKq7C,kBAAkBD,EAAiB,QAAEE,iBAE1CF,EAAQ75C,eAAe,YAAa,KAC9Bg6C,EAAqBv7C,KAAKw7C,WAAWprC,QAAQjO,OAC7Cs5C,EAAwBL,EAAkB,SAAEM,aAClD17C,KAAKq6C,cAA8BoB,GAAdF,IAM7BvC,EAAA94C,UAAAy7C,cAAA,WACS37C,KAAK66C,wBACN76C,KAAK47C,gBAET57C,KAAK46C,cAAe,EACpB56C,KAAK66C,wBAAyB,GAGlC7B,EAAA94C,UAAA27C,eAAA,WACI77C,KAAK87C,eAKT9C,EAAA94C,UAAA67C,uBAAA,SAAuB79B,GACnBle,KAAK66C,wBAAyB,EACzB76C,KAAK46C,cACN56C,KAAKg8C,kBAIbhD,EAAA94C,UAAA+7C,uBAAA,WACIj8C,KAAKg7C,aAGThC,EAAA94C,UAAAg8C,yBAAA,SAAyBh+B,GACrBle,KAAKm8C,6BAA6Bj+B,IAKtC86B,EAAA94C,UAAAk8C,wBAAA,SAAwBr8B,GACpB/f,KAAKg3C,SACDh3C,KAAKq8C,mBAAmBt8B,GAAU/f,KAAKs8C,aAAav8B,IAG5Di5B,EAAA94C,UAAAq8C,gBAAA,SAAgB3+B,GACZ5d,KAAK47C,cAAch+B,IAKvBo7B,EAAA94C,UAAAs8C,oBAAA,WACIx8C,KAAK66C,wBAAyB,GAGlC7B,EAAA94C,UAAAu8C,oBAAA,SAAoBtF,GAApB,IAAA/zC,EAAApD,KACIyd,WAAW,WACW,EAAd05B,EAAKh1C,QACLiB,EAAK+2C,MAAM15B,KAAK02B,IAErB,KACHn3C,KAAKw7C,WAAW5E,OAAOO,IAG3B6B,EAAA94C,UAAAw8C,sBAAA,SAAsBx+B,GAClBle,KAAK28C,0BAA0Bz+B,IAKnC86B,EAAA94C,UAAA08C,sBAAA,SAAsB1+B,GAAtB,IAAA9a,EAAApD,KACSA,KAAK06C,QACN16C,KAAK68C,eAET78C,KAAKk7C,oBACLz9B,WAAW,WACPra,EAAKo4C,WAAW5E,OAAO14B,EAAMkC,OAAOhe,UAI5C42C,EAAA94C,UAAA48C,wBAAA,SAAwB5+B,GACpBle,KAAK+8C,4BAA4B7+B,IAKrC86B,EAAA94C,UAAA88C,sBAAA,SAAsB9+B,GAClBle,KAAK46C,cAAe,EACpB56C,KAAKi3C,iBACLj3C,KAAK47C,eAAc,IAKvB5C,EAAA94C,UAAA+8C,sBAAA,SAAsBl9B,GAClB/f,KAAK46C,cAAe,EACpB56C,KAAKk9C,eAAen9B,IAMxBi5B,EAAA94C,UAAAi9C,KAAA,WACIn9C,KAAK68C,gBAGT7D,EAAA94C,UAAAk9C,MAAA,WACIp9C,KAAK47C,iBAGT5C,EAAA94C,UAAAm9C,MAAA,WACIr9C,KAAKi3C,kBAGT+B,EAAA94C,UAAA62C,OAAA,SAAO30C,GAAP,IAAAgB,EAAApD,KACIA,KAAKw7C,WAAW7E,kBAAkBv0C,GAAOwC,QAAQ,SAACmb,GAC9C3c,EAAKk5C,aAAav8B,KAEtB/f,KAAKs9C,gBAKTtE,EAAA94C,UAAAq9C,WAAA,SAAWn7C,GACPpC,KAAKoC,MAAQA,GAGjB42C,EAAA94C,UAAAs9C,iBAAA,SAAiBC,GACbz9C,KAAK86C,SAAW2C,GAGpBzE,EAAA94C,UAAAw9C,kBAAA,SAAkBD,GACdz9C,KAAKg7C,UAAYyC,GAGrBzE,EAAA94C,UAAAy9C,iBAAA,SAAiBlD,GACbz6C,KAAKohB,SAAWq5B,GAKpBv5C,OAAAyB,eAAIq2C,EAAA94C,UAAA,QAAK,KAAT,WACI,OAA2B,IAAvBF,KAAKo6C,OAAOj4C,OACL,GAEAnC,KAAKg3C,SAAWh3C,KAAKo6C,OAASp6C,KAAKo6C,OAAO,QAIzD,SAAUxpC,GACN,GAAI,MAAOA,GAAyC,KAANA,EAC1CA,EAAI,QACD,GAAiB,iBAANA,EACdA,EAAI,CAACA,QACF,IAAKvP,MAAMgM,QAAQuD,GACtB,MAAM,IAAIgtC,UAAU,uCAGnB1H,WAAWI,YAAY1lC,EAAG5Q,KAAKo6C,UAChCp6C,KAAKw7C,WAAWp5C,MAAQwO,EACxB5Q,KAAKs9C,iDAILtE,EAAA94C,UAAAo9C,aAAR,WACIt9C,KAAKo6C,OAASp6C,KAAKw7C,WAAWp5C,MAE9BpC,KAAKu4C,YAAmC,EAArBv4C,KAAKo6C,OAAOj4C,OAC/BnC,KAAK26C,gBAAkB36C,KAAKu4C,YAAc,GAAKv4C,KAAK+5C,YACpD/5C,KAAKk7C,oBAELl7C,KAAK86C,SAAS96C,KAAKoC,QAKf42C,EAAA94C,UAAAm7C,kBAAR,SAA0BwC,OAClBjtC,EAECitC,IACDjtC,EAAI5Q,KAAKw7C,WAAWp5C,OAGxBpC,KAAKw7C,WAAa,IAAItF,WAAWl2C,KAAKoQ,SAEjCytC,IACD79C,KAAKw7C,WAAWp5C,MAAQwO,EACxB5Q,KAAKs9C,iBAMLtE,EAAA94C,UAAA87C,eAAR,WACSh8C,KAAKy6C,aACNz6C,KAAK06C,OAAS16C,KAAK47C,eAAc,GAAQ57C,KAAK68C,iBAI9C7D,EAAA94C,UAAA28C,aAAR,WACS78C,KAAK06C,SACN16C,KAAK87C,cACL97C,KAAK89C,iBACL99C,KAAK06C,QAAS,EACV16C,KAAKg3C,UAAYh3C,KAAKq6C,eACtBr6C,KAAK+9C,YAAYC,cAAcpgC,QAEnC5d,KAAKg6C,OAAOv5B,KAAK,QAIjBu4B,EAAA94C,UAAA07C,cAAR,SAAsBh+B,QAAA,IAAAA,IAAAA,GAAA,GACd5d,KAAK06C,SACL16C,KAAKi+C,mBACLj+C,KAAK06C,QAAS,EACV98B,GACA5d,KAAK4d,QAET5d,KAAKi6C,OAAOx5B,KAAK,QAMjBu4B,EAAA94C,UAAAo8C,aAAR,SAAqBv8B,GACZA,EAAOuB,WACRthB,KAAKw7C,WAAWzE,OAAOh3B,EAAQ/f,KAAKg3C,UACpCh3C,KAAKs9C,eACLt9C,KAAKshB,SAASb,KAAKV,EAAOwB,qBAU1By3B,EAAA94C,UAAAg9C,eAAR,SAAuBn9B,GAAvB,IAAA3c,EAAApD,KACQ+f,EAAOuB,WACPthB,KAAKw7C,WAAWtE,SAASn3B,GACzB/f,KAAKs9C,eACLt9C,KAAKk6C,WAAWz5B,KAAKV,EAAOwB,mBAC5B9D,WAAW,WACHra,EAAK4zC,WAEL5zC,EAAK06C,iBACL16C,EAAKo4C,WAAWnF,YACZjzC,EAAKs3C,QACLt3C,EAAK86C,SAASC,+BAO1BnF,EAAA94C,UAAA+2C,eAAR,eACUJ,EAA2B72C,KAAKw7C,WAAW3E,UAC1B,EAAnBA,EAAU10C,SACVnC,KAAKw7C,WAAWvE,iBAChBj3C,KAAKs9C,eAEoB,IAArBzG,EAAU10C,OACVnC,KAAKk6C,WAAWz5B,KAAKo2B,EAAU,GAAGt1B,mBAElCvhB,KAAKk6C,WAAWz5B,KAAKo2B,EAAU9iC,IAAI,SAACgM,GAChC,OAAOA,EAAOwB,uBAMtBy3B,EAAA94C,UAAAm8C,mBAAR,SAA2Bt8B,GACvBA,EAAOuB,SACHthB,KAAKk9C,eAAen9B,GAAU/f,KAAKs8C,aAAav8B,IAGhDi5B,EAAA94C,UAAAk+C,wBAAR,eACUr+B,EAAiB/f,KAAKw7C,WAAWrD,kBACxB,OAAXp4B,IACA/f,KAAKs8C,aAAav8B,GAClB/f,KAAK47C,eAAc,KAInB5C,EAAA94C,UAAAm+C,aAAR,eACUC,EAAqBt+C,KAAKw7C,WAAW3E,UAE3C,GAAiB,EAAbyH,EAAIn8C,OAAY,KACV4d,EAAiBu+B,EAAIA,EAAIn8C,OAAS,GACxCnC,KAAKk9C,eAAen9B,GACpB/f,KAAKu+C,uBAAuBx+B,EAAOtP,MAAQ,OAM3CuoC,EAAA94C,UAAA+9C,iBAAR,WACQj+C,KAAKg3C,UAAYh3C,KAAKq6C,cACtBr6C,KAAK+9C,YAAYC,cAAc57C,MAAQ,GAEvCpC,KAAKk+C,SAASD,oBAIdjF,EAAA94C,UAAAq+C,uBAAR,SAA+Bn8C,GACvBpC,KAAKq6C,gBACLr6C,KAAK+9C,YAAYC,cAAc57C,MAAQA,IAKvC42C,EAAA94C,UAAAi8C,6BAAR,SAAqCj+B,GAArC,IAAA9a,EAAApD,KACU8G,EAAMoX,EAAMsgC,MAEdx+C,KAAK06C,OACD5zC,IAAQ9G,KAAKk5C,KAAKI,KACjBxyC,IAAQ9G,KAAKk5C,KAAKM,IAAMt7B,EAAMugC,OAC/Bz+C,KAAK47C,eAAc,GACZ90C,IAAQ9G,KAAKk5C,KAAKE,IACzBp5C,KAAK47C,gBACE90C,IAAQ9G,KAAKk5C,KAAKG,MACzBr5C,KAAKo+C,0BACEt3C,IAAQ9G,KAAKk5C,KAAKM,IACzBx5C,KAAKw7C,WAAWtD,0BAChBl4C,KAAKk+C,SAASC,0BACTn+C,KAAKq6C,eACNn8B,EAAMwgC,kBAEH53C,IAAQ9G,KAAKk5C,KAAKO,OACzBz5C,KAAKw7C,WAAW1D,sBAChB93C,KAAKk+C,SAASC,0BACTn+C,KAAKq6C,eACNn8B,EAAMwgC,mBAIV53C,IAAQ9G,KAAKk5C,KAAKG,OAASvyC,IAAQ9G,KAAKk5C,KAAKK,OAC5CzyC,IAAQ9G,KAAKk5C,KAAKO,MAAQv7B,EAAMugC,SAQjChhC,WAAW,WAAQra,EAAKy5C,kBAM5B7D,EAAA94C,UAAA68C,4BAAR,SAAoC7+B,GACpBA,EAAMsgC,QAENx+C,KAAKk5C,KAAKC,WACdn5C,KAAKu4C,aAAev4C,KAAKq6C,eACgB,KAAzCr6C,KAAK+9C,YAAYC,cAAc57C,OAC/BpC,KAAKq+C,gBAKTrF,EAAA94C,UAAAy8C,0BAAR,SAAkCz+B,OACxBpX,EAAMoX,EAAMsgC,MAEd13C,IAAQ9G,KAAKk5C,KAAKI,KAAOxyC,IAAQ9G,KAAKk5C,KAAKE,KACxCtyC,IAAQ9G,KAAKk5C,KAAKM,IAAM1yC,IAAQ9G,KAAKk5C,KAAKO,MAC1C3yC,IAAQ9G,KAAKk5C,KAAKG,OACrBr5C,KAAKm8C,6BAA6Bj+B,IAM1C86B,EAAA94C,UAAA0d,MAAA,WACI5d,KAAKu6C,UAAW,EACZv6C,KAAKg3C,UAAYh3C,KAAKq6C,cACtBr6C,KAAK+9C,YAAYC,cAAcpgC,QAE/B5d,KAAK2+C,cAAcX,cAAcpgC,SAIzCo7B,EAAA94C,UAAA0+C,KAAA,WACI5+C,KAAKu6C,UAAW,EAChBv6C,KAAK2+C,cAAcX,cAAcY,QAGrC5F,EAAA94C,UAAA47C,YAAA,WACI97C,KAAK6+C,MAAQ7+C,KAAK2+C,cAAcX,cAAcc,aAGlD9F,EAAA94C,UAAA49C,eAAA,eACU5wC,EAAIlN,KAAK2+C,cAAcX,cAC7Bh+C,KAAK++C,KAAO7xC,EAAE8xC,WACdh/C,KAAKi/C,IAAM/xC,EAAEgyC,UAAYhyC,EAAEiyC,cAG/BnG,EAAA94C,UAAAg7C,kBAAA,WACI,GAAgC,oBAArBl7C,KAAK+9C,YAA6B,KACnC37C,EAAgBpC,KAAK+9C,YAAYC,cAAc57C,MACrDpC,KAAKs6C,iBAAoC,IAAjBl4C,EAAMD,OAC1B,EAAkC,GAA9BnC,KAAK26C,gBAAgBx4C,OAAc,EAAmB,GAAfC,EAAMD,6BAnjBhEoc,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,YACVC,SAAU,uyEA2EVC,OAAQ,CAACuC,OACTk+B,UAAW,CAACzG,uBACZ0G,cAAeC,KAAAA,kBAAkBpvC,0CAiBhC4O,KAAAA,0BAEAA,KAAAA,wBACAA,KAAAA,8BACAA,KAAAA,kCACAA,KAAAA,wBACAA,KAAAA,wBACAA,KAAAA,2BACAA,KAAAA,2BACAA,KAAAA,sBAEAkC,KAAAA,uBACAA,KAAAA,yBACAA,KAAAA,2BACAA,KAAAA,sBACAA,KAAAA,8BAGAu+B,KAAAA,UAAS/gC,KAAA,CAAC,+BACV+gC,KAAAA,UAAS/gC,KAAA,CAAC,iCACV+gC,KAAAA,UAAS/gC,KAAA,CAAC,kBAkcfw6B,EAtjBA,GCzBa93B,QAAQ,moCCArBs+B,wBAAA,WAgBA,SAAAA,IAoDcx/C,KAAAo9C,MAAQ,IAAIj9B,KAAAA,aACZngB,KAAAy/C,cAAgB,IAAIt/B,KAAAA,aACpBngB,KAAA0/C,kBAAoB,IAAIv/B,KAAAA,aACxBngB,KAAA2/C,kBAAoB,IAAIx/B,KAAAA,aACxBngB,KAAA4/C,oBAAsB,IAAIz/B,KAAAA,aAKpCngB,KAAA6/C,cAAgB,OAChB7/C,KAAA8/C,kBAAoB,SAiHxB,OA3GIN,EAAAt/C,UAAAsb,SAAA,WACIxb,KAAK+/C,gBAGTP,EAAAt/C,UAAAi7C,YAAA,SAAYC,GACJA,EAAQ75C,eAAe,eACvBvB,KAAK+/C,gBAIbP,EAAAt/C,UAAA+6C,gBAAA,WACIj7C,KAAKm+C,2BACAn+C,KAAKg3C,UAAYh3C,KAAKq6C,eACvBr6C,KAAK+9C,YAAYC,cAAcpgC,SAMvC4hC,EAAAt/C,UAAAs8C,oBAAA,SAAoBt+B,GAChBle,KAAK0/C,kBAAkBj/B,KAAK,OAGhC++B,EAAAt/C,UAAAu8C,oBAAA,SAAoBv+B,GAChBle,KAAK2/C,kBAAkBl/B,KAAKvC,EAAMkC,OAAOhe,QAG7Co9C,EAAAt/C,UAAAw8C,sBAAA,SAAsBx+B,GAClBle,KAAK4/C,oBAAoBn/B,KAAKvC,IAKlCshC,EAAAt/C,UAAA8/C,eAAA,SAAe9hC,GACXle,KAAKigD,mBAAmB/hC,IAG5BshC,EAAAt/C,UAAAggD,kBAAA,SAAkBngC,GACd/f,KAAKw7C,WAAW5D,gBAAgB73B,IAGpCy/B,EAAAt/C,UAAAigD,cAAA,SAAcpgC,GACV/f,KAAKy/C,cAAch/B,KAAKV,IAKpBy/B,EAAAt/C,UAAA6/C,aAAR,WACI//C,KAAKw7C,WAAWnE,cAChBr3C,KAAKw7C,WAAWnF,aAKpBmJ,EAAAt/C,UAAAkgD,eAAA,SAAergC,GACX,OAAIA,EAAOsB,YACA,CACHg/B,mBAAoBrgD,KAAK25C,eACzB2G,MAAStgD,KAAK45C,oBAGX,IAIf4F,EAAAt/C,UAAA+9C,iBAAA,WACQj+C,KAAKq6C,gBACLr6C,KAAK+9C,YAAYC,cAAc57C,MAAQ,KAI/Co9C,EAAAt/C,UAAAi+C,wBAAA,eAEUlnC,EAAOjX,KAAKugD,YAAYvC,cACxBwC,EAAavpC,EAAKkoC,aAElBsB,EAAYzgD,KAAKw7C,WAAWpD,sBAElC,IAAiB,EAAbqI,EAAgB,KAEVC,EADOzpC,EAAKtP,SAAS,GAAGA,SAAS84C,GACftB,aAElBwB,EAAUF,EAAYC,EACtBE,EAAaD,EAAUD,EAEvBG,EAAU5pC,EAAK2F,UACFikC,EAAUL,EAEzBI,EACA3pC,EAAK2F,UAAYgkC,EAAaJ,EACvBG,EAAUE,IACjB5pC,EAAK2F,UAAY+jC,KAKrBnB,EAAAt/C,UAAA+/C,mBAAR,SAA2B/yC,OACjB4zC,EAAM9gD,KAAKugD,YAAYvC,cACvB+C,EAA0B,IAAlBD,EAAIlkC,UACZokC,EAAWF,EAAI3B,aAAe2B,EAAIlkC,YAAckkC,EAAIG,aAEtDF,GAAS7zC,EAAEg0C,OAAS,EACpBh0C,EAAEwxC,iBACKsC,GAAuB,EAAX9zC,EAAEg0C,QACrBh0C,EAAEwxC,sCA5KbngC,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,kBACVC,SAAU,6jCAiCVC,OAAQ,CAACuC,SACTm+B,cAAeC,KAAAA,kBAAkBpvC,gDAMhC4O,KAAAA,8BACAA,KAAAA,kCACAA,KAAAA,oBACAA,KAAAA,wBACAA,KAAAA,2BACAA,KAAAA,0BACAA,KAAAA,mBACAA,KAAAA,qBACAA,KAAAA,qBAEAkC,KAAAA,8BACAA,KAAAA,kCACAA,KAAAA,kCACAA,KAAAA,oCACAA,KAAAA,4BAEAu+B,KAAAA,UAAS/gC,KAAA,CAAC,oCACV+gC,KAAAA,UAAS/gC,KAAA,CAAC,kBAoHfghC,EA/LA,GCAA2B,aAAA,WAOA,SAAAA,KAa2B,2BAb1BC,KAAAA,SAAQ5iC,KAAA,CAAC,CACN6iC,aAAc,CACVrI,gBACAwG,yBAEJ8B,QAAS,CACLtI,iBAEJuI,QAAS,CACLC,OAAAA,aACAC,MAAAA,iBAGmBN,EApB3B,GCoBAO,WAAA,WAeI,SAAAA,EACYC,EACAC,GADA5hD,KAAA2hD,KAAAA,EACA3hD,KAAA4hD,UAAAA,EAZJ5hD,KAAA6hD,aAAoB,KACpB7hD,KAAA8hD,qBAA4B,KAC5B9hD,KAAA+hD,cAA8B,KAC9B/hD,KAAAgiD,KAAwB,KAGxBhiD,KAAAiiD,QAAgC,IAAIC,KAAAA,gBAAgB,MACpDliD,KAAA0Y,OAA0B1Y,KAAKiiD,QAAQxhD,eACvCT,KAAAmiD,sBAAsC,KAuFlD,OAhFIT,EAAAxhD,UAAAkiD,YAAA,WACQpiD,KAAK+hD,eACL/hD,KAAKqiD,YAIbX,EAAAxhD,UAAAoiD,UAAA,SAAUC,EAAaC,GACnBxiD,KAAKwiD,QAAUA,MACTv0C,EAAMjO,KAAKyiD,kBAAkBF,GACnC,OAAOviD,KAAK0iD,eAAez0C,IAGvByzC,EAAAxhD,UAAAuiD,kBAAR,SAA0BF,GAA1B,IAAAn/C,EAAApD,KACI,OAAKuiD,GAIDviD,KAAK2iD,cAAgBJ,IACrBviD,KAAK2iD,YAAcJ,EACnBviD,KAAKmiD,sBAAwBniD,KAAKwiD,QAAQD,GACrCj/C,UAAU,SAAAxB,OACD8gD,EAAYx/C,EAAKw+C,UAAUiB,uBAAuB/gD,GACxDsB,EAAK6+C,QAAQrhD,KAAKgiD,MAIvB5iD,KAAK0Y,QAGRgpC,EAAAxhD,UAAAwiD,eAAR,SAAuBz0C,GACnB,OAAKjO,KAAKgiD,KAON/zC,IAAQjO,KAAKgiD,MACbhiD,KAAKqiD,WACEriD,KAAK0iD,eAAez0C,IAE3BjO,KAAK6hD,eAAiB7hD,KAAK8hD,qBACpB9hD,KAAK8hD,sBAEhB9hD,KAAK8hD,qBAAuB9hD,KAAK6hD,aAC1BiB,KAAAA,aAAaC,KAAK/iD,KAAK6hD,gBAdtB5zC,GACAjO,KAAKgjD,WAAW/0C,GAEpBjO,KAAK8hD,qBAAuB9hD,KAAK6hD,aAC1B7hD,KAAK6hD,eAaZH,EAAAxhD,UAAA8iD,WAAR,SAAmB/0C,OACT7K,EAAQpD,KACdA,KAAKgiD,KAAO/zC,EAEZjO,KAAK+hD,cAAgB9zC,EAAI3K,UAAU,CAC/B1C,KAAM,SAAUwB,GACZ,OAAOgB,EAAM6/C,mBAAmBh1C,EAAK7L,IACtCzB,MAAO,SAACuM,GAAa,MAAMA,MAI9Bw0C,EAAAxhD,UAAAmiD,SAAR,WACQriD,KAAK+hD,eACL/hD,KAAK+hD,cAAcmB,cAEnBljD,KAAKmiD,uBACLniD,KAAKmiD,sBAAsBe,cAG/BljD,KAAKmiD,sBAAwB,KAC7BniD,KAAK6hD,aAAe,KACpB7hD,KAAK8hD,qBAAuB,KAC5B9hD,KAAK+hD,cAAgB,KACrB/hD,KAAKgiD,KAAO,MAGRN,EAAAxhD,UAAA+iD,mBAAR,SAA2BE,EAAY/gD,GAC/B+gD,IAAUnjD,KAAKgiD,OACfhiD,KAAK6hD,aAAez/C,EACpBpC,KAAK2hD,KAAKyB,qCAjGrBC,KAAAA,KAAI7kC,KAAA,CAAC,CACF6B,KAAM,SACNijC,MAAM,+CAhBNC,KAAAA,yBASKC,gBAAAA,gBAyGT9B,EApGA,GCpBA+B,aAAA,WAIA,SAAAA,KAY2B,2BAZ1BrC,KAAAA,SAAQ5iC,KAAA,CAAC,CACN6iC,aAAc,CACVK,YAEJH,QAAS,CAAEC,OAAAA,cACXF,QAAS,CACLI,YAEJtC,UAAW,CACPxkC,iBAGmB6oC,EAhB3B,GCAAC,0BAAA,WAqCI,SAAAA,EAAoBC,GAAA3jD,KAAA2jD,SAAAA,EAZpB3jD,KAAA4jD,WAAY,EACZ5jD,KAAA6jD,WAAa,KAwDL7jD,KAAA8jD,gBAAkB,SAAC/I,KAM/B,OA5DI75C,OAAAyB,eACW+gD,EAAAxjD,UAAA,aAAU,KADrB,WAEI,OAAOF,KAAK+jD,iBAEhB,SAAsBnzC,GAClB5Q,KAAK+jD,YAAcnzC,mCAMvB8yC,EAAAxjD,UAAAsb,SAAA,aAGAkoC,EAAAxjD,UAAA+d,OAAA,SAAO+lC,GAAP,IAAA5gD,EAAApD,KACQA,KAAK0a,aACL1a,KAAK4jD,WAAY,EACjB5jD,KAAK0a,WAAWupC,WAAWD,GAAM1gD,UAAU,SAACoV,GAExCtV,EAAKygD,WAAanrC,EAAOwrC,MACzB9gD,EAAK0gD,gBAAgB1gD,EAAKygD,YAC1BzgD,EAAKwgD,WAAY,GAClB,SAACjjD,GACAyC,EAAKwgD,WAAY,MAMtBF,EAAAxjD,UAAAq9C,WAAP,SAAkBn7C,GACVA,IAAUpC,KAAK6jD,aACf7jD,KAAK6jD,WAAazhD,IAKnBshD,EAAAxjD,UAAAs9C,iBAAP,SAAwBC,GACpBz9C,KAAK8jD,gBAAkBrG,GAIpBiG,EAAAxjD,UAAAw9C,kBAAP,aAEAgG,EAAAxjD,UAAA46C,SAAA,SAAS58B,GACLle,KAAK8jD,gBAAgB5lC,EAAMzU,KAYxBi6C,EAAAxjD,UAAAikD,WAAP,WACInkD,KAAK6jD,WAAa,KAClB7jD,KAAK8jD,gBAAgB9jD,KAAK6jD,iCAhFjCtlC,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAU,gQAKV0gC,UAAW,CACP,CACIxG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAA2K,IAC9BzK,OAAO,IAEft6B,OAAQ,CAAC,2HAnBkCylC,KAAAA,iDA4B1CtlC,KAAAA,SA4DL4kC,EAxFA,GCAAW,uBAAA,WAUA,SAAAA,KAMsC,2BANrCjD,KAAAA,SAAQ5iC,KAAA,CAAC,CACN+iC,QAAS,CAACC,OAAAA,aAAcL,aAAcM,MAAAA,YAAa6C,sBAAAA,sBAAuBb,cAC1EnC,QAAS,CAACoC,2BACVrC,aAAc,CAACqC,2BACftE,UAAW,OAEuBiF,EAhBtC,GCOM74C,SAASC,QAUf84C,oBAAA,WAwFE,SAAAA,IAnBgBvkD,KAAAwkD,OAAS,KACTxkD,KAAAykD,WAAa,KACbzkD,KAAA0kD,aAAe,KACd1kD,KAAA2kD,mBAAqB,IAAIxkC,KAAAA,aACzBngB,KAAA4kD,aAAe,IAAIzkC,KAAAA,aAO7BngB,KAAA6kD,iBAAkB,EAClB7kD,KAAA8kD,gBAAiB,EACjB9kD,KAAA+kD,kBAAoB,EAGpB/kD,KAAAglD,YAA6Bx5C,SAAOw5C,cAwK7C,OAlKST,EAAArkD,UAAAsb,SAAP,WAAA,IAAApY,EAAApD,KACEA,KAAKilD,YAELnlC,EAAAA,KAAO9f,KAAKklD,cAAe,SAACt0C,EAAG3O,GAC7BmB,EAAK+hD,YAAc/hD,EAAKgiD,aAAaC,QAAQC,QAAQ,QAAQC,QACxB,IAAjC30C,EAAE5G,QAAQ5G,EAAK+hD,eACjB/hD,EAAK2hD,kBAAoB9iD,KAG7BjC,KAAKwlD,iBAAmBxlD,KAAKklD,cAAcllD,KAAK+kD,mBAChD/kD,KAAKylD,oBAGAlB,EAAArkD,UAAAwlD,KAAP,WACM1lD,KAAK8kD,gBACP9kD,KAAK+kD,oBACD/kD,KAAK+kD,kBAAoB,IAC3B/kD,KAAK+kD,kBAAoB,GAE3B/kD,KAAKwlD,iBAAmBxlD,KAAKklD,cAAcllD,KAAK+kD,oBAEhD/kD,KAAKolD,aAAeplD,KAAKolD,aAAaC,QAAQM,SAAS,EAAG,KAE5D3lD,KAAKylD,oBAGAlB,EAAArkD,UAAA0lD,mBAAP,WACE5lD,KAAK6kD,iBAAkB,EACvB7kD,KAAK8kD,gBAAiB,GAGjBP,EAAArkD,UAAA2lD,kBAAP,WACE7lD,KAAK8kD,gBAAiB,EACtB9kD,KAAK6kD,iBAAkB,GAGlBN,EAAArkD,UAAAU,KAAP,WACMZ,KAAK8kD,gBACP9kD,KAAK+kD,oBACD/kD,KAAK+kD,mBAAqB/kD,KAAKklD,cAAc/iD,SAC/CnC,KAAK+kD,kBAAoB/kD,KAAKklD,cAAc/iD,OAAS,GAEvDnC,KAAKwlD,iBAAmBxlD,KAAKklD,cAAcllD,KAAK+kD,sBAEhD/kD,KAAKolD,aAAeplD,KAAKolD,aAAaC,QAAQS,IAAI,EAAG,KAEvD9lD,KAAKylD,oBAGAlB,EAAArkD,UAAA6lD,UAAP,SAAiBC,OACTC,EAAiBD,EAAIE,KAAKlmD,KAAKolD,aAAaC,QAAQC,QAAQ,QAAS,QAC3EU,EAAMhmD,KAAKolD,aAAaC,QAAQS,IAAIG,EAAgB,SAC9CE,EAAcnmD,KAAKomD,wBAAwBJ,GACjDhmD,KAAK4kD,aAAankC,KAAK0lC,GACvBnmD,KAAKqmD,oBAIA9B,EAAArkD,UAAAomD,YAAP,SAAmBC,GACjBvmD,KAAKolD,aAAeplD,KAAKolD,aAAaC,QAAQkB,MAAMA,GACpDvmD,KAAK6kD,iBAAkB,EACvB7kD,KAAKylD,oBAGAlB,EAAArkD,UAAAsmD,WAAP,SAAkBjB,GAChBvlD,KAAKolD,aAAeplD,KAAKolD,aAAaC,QAAQE,KAAKA,GACnDvlD,KAAK8kD,gBAAiB,EACtB9kD,KAAKylD,oBAGAlB,EAAArkD,UAAAumD,YAAP,eACQC,EAAQ1mD,KAAKomD,wBAAwB56C,YAC3CxL,KAAK4kD,aAAankC,KAAKimC,GACvB1mD,KAAKqmD,oBAIA9B,EAAArkD,UAAAymD,cAAP,WACE3mD,KAAK4kD,aAAankC,KAAK,MACvBzgB,KAAKqmD,oBAIA9B,EAAArkD,UAAAmmD,iBAAP,WACErmD,KAAK2kD,mBAAmBlkC,MAAK,IAIrB8jC,EAAArkD,UAAA0mD,cAAV,WAKE,QAJMzB,EAAc35C,WAAS+5C,OAGvBsB,EAAQ,GACLtB,EAHOvlD,KAAKolD,aAAaC,QAAQM,SAAS,IAAK,KAAKJ,OAGpCA,GAAQJ,EAAaI,IAC5CsB,EAAM9iD,KAAKwhD,GAGbvlD,KAAKklD,cAAgB4B,EAAAA,MAAQD,EAAO,KAG5BtC,EAAArkD,UAAA+kD,UAAV,WAGEz5C,SAAOg5C,OAAOxkD,KAAKwkD,QAEnBxkD,KAAK0mD,MAAQl7C,WAAS85C,QAAQ,QAC9BtlD,KAAK+mD,aAAe/mD,KAAKglD,YAAYx5C,WAAS+6C,SAC9CvmD,KAAKmlD,YAAc35C,WAAS+5C,OAG5BvlD,KAAKgnD,SAAWx7C,SAAOy7C,eAAc,GAGjCjnD,KAAKknD,UACPlnD,KAAKolD,aAAqC,WAAtBplD,KAAK0kD,aAA4Bl5C,SAAOxL,KAAKknD,SAAUlnD,KAAKykD,YAC9Ej5C,SAAOxL,KAAKknD,UACdlnD,KAAKmnD,aAAennD,KAAKolD,aAAaC,QAAQC,QAAQ,SAEtDtlD,KAAKolD,aAAe55C,WAEtBxL,KAAK4mD,iBAGGrC,EAAArkD,UAAAulD,iBAAV,WACEzlD,KAAKonD,aAAe,GAKpB,QAJMC,EAAQ,GAAKrnD,KAAKolD,aAAaC,QAAQC,QAAQ,SAASU,OAC5D,EAAIx6C,SAAO87C,aAAaC,mBAAqB,EACzCC,EAAM,GAAKH,EAERplD,EAAIolD,EAAOplD,GAAKulD,EAAKvlD,GAAK,EAAG,KAC9B+jD,EAAMhmD,KAAKolD,aAAaC,QAAQC,QAAQ,SAASQ,IAAI7jD,EAAG,QAC9DjC,KAAKonD,aAAarjD,KAAKiiD,KAIjBzB,EAAArkD,UAAAkmD,wBAAV,SAAkCJ,GAChC,OAAQhmD,KAAK0kD,cACX,IAAK,KACH,OAAOsB,EAAIyB,SAEb,IAAK,SACH,OAAOzB,EAAIpwC,OAAO5V,KAAKykD,YAEzB,IAAK,SACH,OAAOuB,EAET,IAAK,OACH,OAAOA,EAAI0B,SAEb,IAAK,QACH,OAAO1B,EAAI2B,UAEb,IAAK,MACH,OAAO3B,EAAI4B,cAEb,IAAK,SACH,OAAO5B,EAAI6B,WAEb,QACE,OAAO7B,wBA1PdznC,KAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,cACVC,SAAU,isFA2DVC,OAAQ,CAAC,s6FAORG,KAAAA,sBACAA,KAAAA,0BACAA,KAAAA,4BACAA,KAAAA,kCACAkC,KAAAA,6BACAA,KAAAA,UAoLHujC,EA7PA,GCVM/4C,SAASC,QASfq8C,oBAAA,WAuDI,SAAAA,IATS9nD,KAAA+nD,YAAa,EACb/nD,KAAAykD,WAAa,UACbzkD,KAAAgoD,WAAY,EACZhoD,KAAA0kD,aAAe,KACd1kD,KAAAioD,aAAe,IAAI9nC,KAAAA,aACnBngB,KAAAkoD,mBAAqB,IAAI/nC,KAAAA,aACnCngB,KAAAmoD,WAAa,KAkGjB,OA5FIL,EAAA5nD,UAAAsb,SAAA,WACQxb,KAAKgoD,YACLhoD,KAAKmoD,WAAa,MAEtBnoD,KAAKooD,KAAOpoD,KAAKqoD,SAAW78C,SAAOxL,KAAKqoD,SAAUroD,KAAKykD,YAAcj5C,WAGjExL,KAAKqoD,SACLroD,KAAKooD,KAA6B,WAAtBpoD,KAAK0kD,aAA4Bl5C,SAAOxL,KAAKqoD,SAAUroD,KAAKykD,YACpEj5C,SAAOxL,KAAKqoD,UAEhBroD,KAAKooD,KAAO58C,YAIpBs8C,EAAA5nD,UAAAooD,aAAA,WACItoD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAA5nD,UAAAqoD,aAAA,WACIvoD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAA5nD,UAAAsoD,eAAA,WACIxoD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAA5nD,UAAAuoD,eAAA,WACIzoD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAA5nD,UAAAwoD,eAAA,WACI1oD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQS,IAAI,EAAG,MAGzCgC,EAAA5nD,UAAAyoD,eAAA,WACI3oD,KAAKooD,KAAOpoD,KAAKooD,KAAK/C,QAAQM,SAAS,EAAG,MAG9CmC,EAAA5nD,UAAA0oD,WAAA,eACUA,EAAa5oD,KAAKomD,wBAAwBpmD,KAAKooD,MACrDpoD,KAAKioD,aAAaxnC,KAAKmoC,GACvB5oD,KAAK6oD,oBAITf,EAAA5nD,UAAA4oD,UAAA,eACUF,EAAa5oD,KAAKomD,wBAAwB56C,YAChDxL,KAAKioD,aAAaxnC,KAAKmoC,GACvB5oD,KAAK6oD,oBAITf,EAAA5nD,UAAA6oD,UAAA,WACI/oD,KAAKioD,aAAaxnC,KAAK,MACvBzgB,KAAK6oD,oBAITf,EAAA5nD,UAAA2oD,iBAAA,WACI7oD,KAAKkoD,mBAAmBznC,MAAK,IAIvBqnC,EAAA5nD,UAAAkmD,wBAAV,SAAkCgC,GAC9B,OAAQpoD,KAAK0kD,cACT,IAAK,KACD,OAAO0D,EAAKX,SAEhB,IAAK,SACD,OAAOW,EAAKxyC,OAAO5V,KAAKykD,YAE5B,IAAK,SACD,OAAO2D,EAEX,IAAK,OACD,OAAOA,EAAKV,SAEhB,IAAK,QACD,OAAOU,EAAKT,UAEhB,IAAK,MACD,OAAOS,EAAKR,cAEhB,IAAK,SACD,OAAOQ,EAAKP,WAEhB,QACI,OAAOO,wBAlJtB7pC,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,cACVC,SAAU,wlEAsCVC,OAAQ,CAAC,uyEAKRG,KAAAA,0BACAA,KAAAA,0BACAA,KAAAA,yBACAA,KAAAA,4BACAA,KAAAA,4BACAkC,KAAAA,mCACAA,KAAAA,UAmGL8mC,EAtJA,GCDAkB,eAAA,WAmBI,SAAAA,IAFUhpD,KAAAipD,eAAiB,IAAI9oC,KAAAA,aAWnC,OANI6oC,EAAA9oD,UAAAsb,SAAA,aAGAwtC,EAAA9oD,UAAAgpD,WAAA,WACIlpD,KAAKipD,eAAexoC,MAAK,wBA1BhClC,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,eACVC,SAAU,6NAOVC,OAAQ,CAAC,qTACTwqC,gBAAiBC,KAAAA,wBAAwBC,OACzCC,WAAY,qFAMXtoC,KAAAA,UAWLgoC,EA5BA,yBCRA,SAAAO,KAMA,OAHIA,EAAArpD,UAAAoiD,UAAA,SAAU92C,EAAgBoK,GACtB,OAAOA,EAASpK,EAAOoK,OAAOA,GAAUpK,EAAOoK,OAAO,qCAJ7DytC,KAAAA,KAAI7kC,KAAA,CAAC,CAAC6B,KAAM,aAMbkpC,KCTMC,OAAS/9C,QAEfg+C,wBAAA,WA6DI,SAAAA,IAVSzpD,KAAA0pD,UAAW,EACX1pD,KAAA2pD,UAAW,EACX3pD,KAAA4pD,WAAY,EACZ5pD,KAAA6pD,MAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACtC7pD,KAAA8pD,aAAe,IAAI3pC,KAAAA,aACtBngB,KAAA+pD,gBAAiB,EACjB/pD,KAAAgqD,gBAAiB,EACxBhqD,KAAA86C,SAAgB,aAChB96C,KAAAg7C,UAAiB,aA2ErB,OAtEIyO,EAAAvpD,UAAAsb,SAAA,aAEAiuC,EAAAvpD,UAAA+pD,cAAA,SAAcC,OACJn3C,EAAM,IAAIlB,KACVs4C,EAAWp3C,EAAIq3C,QAAQr3C,EAAIs3C,UAAoB,EAARH,GAC7ClqD,KAAKoC,MAAQonD,OAAOW,GAAUv0C,UAElC6zC,EAAAvpD,UAAAkqD,QAAA,SAAQr4C,GAEA/R,KAAKoC,MADL2P,GAAiB,KAATA,EACKy3C,OAAOz3C,GAAM6D,SAEb7D,GAKrB03C,EAAAvpD,UAAAoqD,QAAA,SAAQlC,GAEApoD,KAAKoC,MADLgmD,GAAiB,KAATA,EACKoB,OAAOpB,GAAMxyC,SAEbwyC,GAKrBqB,EAAAvpD,UAAAqqD,iBAAA,SAAiBC,GACfxqD,KAAK+pD,eAAiBS,GAcxBf,EAAAvpD,UAAAuqD,iBAAA,SAAiBD,GACbxqD,KAAKgqD,eAAiBQ,GAG1BtpD,OAAAyB,eAAI8mD,EAAAvpD,UAAA,QAAK,KAAT,WACI,OAAOF,KAAK0qD,gBAGhB,SAAU1lD,GACNhF,KAAK0qD,WAAa1lD,EAClBhF,KAAK8pD,aAAarpC,KAAKzb,GACvBhF,KAAK86C,SAAS91C,GACdhF,KAAKg7C,6CAGTyO,EAAAvpD,UAAAs9C,iBAAA,SAAiBC,GACbz9C,KAAK86C,SAAW2C,GAGpBgM,EAAAvpD,UAAAw9C,kBAAA,SAAkBD,GACdz9C,KAAKg7C,UAAYyC,GAGrBgM,EAAAvpD,UAAAq9C,WAAA,SAAWn7C,GACHA,aAAiByP,KACjB7R,KAAKoC,MAAQonD,OAAOpnD,GAAOwT,SAE3B5V,KAAKoC,MAAQA,uBAnIxBmc,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,SAAU,i+EAsCVC,OAAQ,CAAC,0GACTygC,UAAW,CACP,CACIxG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAA0Q,IAC9BxQ,OAAO,kFAKdn6B,KAAAA,wBACAA,KAAAA,wBACAA,KAAAA,yBACAA,KAAAA,qBACAA,KAAAA,4BACAkC,KAAAA,UA+ELyoC,EAtIA,mCCOA,SAAAkB,KAmBA,2BAnBCvJ,KAAAA,SAAQ5iC,KAAA,CAAC,CACN+iC,QAAS,CAACC,OAAAA,aAAcC,MAAAA,aACxBJ,aAAc,CACVkD,oBACAuD,oBACAkB,eACAO,WACAE,yBAEJnI,QAAS,CACLiD,oBACAuD,oBACAkB,eACAO,WACAE,yBAEJrK,UAAW,OAGfuL,KCzBMn/C,SAASC,QAEFm/C,WAAa,CACtBC,MAAO,CACHC,UAAW,MAEfxsC,QAAS,CACLwsC,UAAW,KACXC,eAAgB,WAChBC,cAAe,KACfC,mBAAoB,cAI5BC,2BAAA,WAAA,SAAAA,IAiDWlrD,KAAAmrD,aAAe3/C,WAASoK,SACxB5V,KAAAmnD,aAAe37C,WAASoK,SACxB5V,KAAAorD,aAAc,EAEdprD,KAAAgqD,gBAAiB,EACfhqD,KAAA6pD,MAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAE1C7pD,KAAA2pD,UAAW,EACX3pD,KAAA4pD,WAAY,EACX5pD,KAAA8pD,aAAe,IAAI3pC,KAAAA,aACtBngB,KAAA86C,SAAgB,aAChB96C,KAAAg7C,UAAiB,aAqH5B,OApHWkQ,EAAAhrD,UAAAsb,SAAP,aAKO0vC,EAAAhrD,UAAAq9C,WAAP,SAAkBn7C,GACdpC,KAAKoC,MAAQA,GAGV8oD,EAAAhrD,UAAAs9C,iBAAP,SAAwBC,GACpBz9C,KAAK86C,SAAW2C,GAGbyN,EAAAhrD,UAAAw9C,kBAAP,SAAyBD,KAIlByN,EAAAhrD,UAAAmrD,aAAP,SAAoBruC,OACVotC,EAAU5+C,SAAOxL,KAAKmnD,cACtBmD,EAAUttC,EAChBhd,KAAKsrD,YAAYlB,EAASE,IAGvBY,EAAAhrD,UAAAqrD,aAAP,SAAoBvuC,OAEVotC,EAAU5+C,SAAOwR,EAAO5a,OACxBkoD,EAAUtqD,KAAKmrD,aACfK,EAAaxrD,KAAKsrD,YAAYlB,EAASE,GAExBttC,EAAO5a,MAC5BpC,KAAKoC,MAAQopD,GAIVN,EAAAhrD,UAAAuqD,iBAAP,SAAwBD,GACpBxqD,KAAKgqD,eAAiBQ,GAKnBU,EAAAhrD,UAAAurD,eAAP,eAEUrB,EAAU5+C,SAAOxL,KAAKmnD,cACtBuE,EAAclgD,WAASoK,OAAO,YACpC5V,KAAKsrD,YAAYlB,EAASsB,IAGvBR,EAAAhrD,UAAAyrD,WAAP,SAAkB3uC,OACV4uC,EAEAA,EADe,KAAf5rD,KAAKoC,OAAsC,oBAAfpC,KAAKoC,MACrBoJ,WAASoK,SAETpK,SAAOxL,KAAKoC,OAAOwT,aAE7Bi2C,EAAergD,SAAOogD,GAAW9F,IAAI9oC,EAAO5a,MAAO,SACnD0pD,EAAeF,EACrB5rD,KAAKsrD,YAAYO,EAAcC,IAG5BZ,EAAAhrD,UAAA6rD,gBAAP,SAAuB/uC,GACnBjQ,QAAQiO,IAAI,gBAAiBgC,IAI1BkuC,EAAAhrD,UAAA8rD,sBAAP,WACI,OAAIhsD,KAAK2pD,SACE,sBAEJ,uBAGJuB,EAAAhrD,UAAA+rD,sBAAP,WACI,OAAIjsD,KAAK2pD,UAAY3pD,KAAK4pD,UACf,uBAGY,IAAnB5pD,KAAK4pD,UACE,uBAGW,IAAlB5pD,KAAK2pD,SACE,sBAEJ,wBAGJuB,EAAAhrD,UAAAgsD,sBAAP,WACI,OAAIlsD,KAAK2pD,UAAY3pD,KAAK4pD,UACf,uBAGY,IAAnB5pD,KAAK4pD,UACE,sBAEJ,uBAGJsB,EAAAhrD,UAAAorD,YAAP,SAAmBlB,EAASE,OAEpB6B,EADE15C,EAAUjH,SAAO4+C,GAASx0C,OAAO,cAGnCu2C,EADAnsD,KAAK2pD,SACKn+C,SAAO8+C,GAAS10C,OAAO,YAEvB,eAERw2C,EAAc5gD,SAAOiH,EAAU,GAAK05C,EAAS,uBAC7CE,EAAiB7gD,SAAO4gD,GAAax2C,SAM3C,OALA5V,KAAKmnD,aAAekF,EACpBrsD,KAAKmrD,aAAekB,EACpBrsD,KAAKoC,MAAQiqD,EACbrsD,KAAK86C,SAAS96C,KAAKoC,OAEZiqD,uBA7Kd9tC,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,uBACVC,SAAU,u3CAiCVC,OAAQ,CAAC,mKACTygC,UAAW,CACP,CAAExG,QAAS0T,OAAAA,iBAAkBC,SAAU3B,YACvC,CAAEhS,QAAS4T,OAAAA,YAAaC,SAAUC,sBAAAA,mBAClC,CACI9T,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAAmS,IAC9BjS,OAAO,uCAYdn6B,KAAAA,0BACAA,KAAAA,wBACAA,KAAAA,yBACAA,KAAAA,4BACAkC,KAAAA,UAuHLkqC,EAjLA,sCCJA,SAAAyB,KA2BA,2BA3BCvL,KAAAA,SAAQ5iC,KAAA,CAAC,CACN+iC,QAAS,CACLC,OAAAA,aACAC,MAAAA,YACAmL,MAAAA,oBACAC,WAAAA,oBACAC,UAAAA,mBACAC,SAAAA,oBACAC,SAAAA,eACArC,qBAEAsC,OAAAA,iBAEJ5L,aAAc,CACV6J,4BAEJ5J,QAAS,CACLuL,WAAAA,oBACAC,UAAAA,mBACAC,SAAAA,oBACAC,SAAAA,eACA9B,4BAEJ9L,UAAW,OAIfuN,KC1CAO,SAGI,SAAA/rC,GAAY/Q,GACRpQ,KAAKyQ,MAAQL,EAAQK,MACrBzQ,KAAKoC,MAAQgO,EAAQhO,OCP7B+qD,qBAAA,WAUA,SAAAA,IAsBEntD,KAAAotD,iBAAwB,GAExBptD,KAAA8X,OAAc,GACd9X,KAAA8jD,gBAAkB,SAAC/I,KAiFrB,OA/EEoS,EAAAjtD,UAAAmtD,gBAAA,SAAgBnvC,GAAhB,IAAA9a,EAAApD,KAEEA,KAAKstD,QAAQpvC,GAAO5a,UAAU,SAAC8M,GAC7BhN,EAAKgqD,iBAAmBh9C,KAI5B+8C,EAAAjtD,UAAAq9C,WAAA,SAAWtvC,KAGXk/C,EAAAjtD,UAAAs9C,iBAAA,SAAiBC,GACfz9C,KAAK8jD,gBAAkBrG,GAIzB0P,EAAAjtD,UAAAw9C,kBAAA,SAAkBD,KAElB0P,EAAAjtD,UAAAi7C,YAAA,SAAYC,KAEZ+R,EAAAjtD,UAAAsb,SAAA,WAAA,IAAApY,EAAApD,KACMA,KAAKuQ,QACHvQ,KAAKuQ,OAAOD,eACdtQ,KAAKutD,sBAAsBvtD,KAAKuQ,OAAOD,eAAehN,UAAU,SAACyc,GAC/D3c,EAAKoqD,yBAA2BztC,KAQxCotC,EAAAjtD,UAAAotD,QAAA,SAAQG,GAAR,IAAArqD,EAAApD,KAqBE,OAnBAA,KAAK0tD,QAAU,IAAIxL,KAAAA,gBAA0B,IAEnBliD,KAAK0a,WAAWizC,cAAcF,GAEtCnqD,UAChB,SAAC8M,GAIC,QAFMw9C,EAA0B,IAAIvsD,MAE3BY,EAAI,EAAGA,EAAImO,EAAQjO,OAAQF,IAClC2rD,EAAc7pD,KAAK,IAAIod,SAAO/Q,EAAQnO,KAExCmB,EAAKsqD,QAAQ9sD,KAAKgtD,IAEpB,SAACjtD,GACCyC,EAAKsqD,QAAQ/sD,MAAMA,KAIhBX,KAAK0tD,QAAQjtD,gBAGtB0sD,EAAAjtD,UAAA2tD,cAAA,SAAc3vC,KACdivC,EAAAjtD,UAAAqtD,sBAAA,SAAsBnrD,GAAtB,IAAAgB,EAAApD,KAeE,OAbAA,KAAK8tD,cAAgB,IAAI5L,KAAAA,gBAAwB,MACxBliD,KAAK0a,WAAWqzC,qBAAqB3rD,GAE7CkB,UACf,SAACyc,GAEC3c,EAAK0qD,cAAcltD,KAAKmf,IAE1B,SAACpf,GACCyC,EAAK0qD,cAAcntD,MAAMA,KAItBX,KAAK8tD,cAAcrtD,gBAG5B0sD,EAAAjtD,UAAA8tD,aAAA,WACEhuD,KAAK0tD,QAAQ9sD,KAAK,IAAIS,4BAtGzBkd,KAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAU,uQAOV0gC,UAAW,CACT,CACExG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAAoU,IAC9BlU,OAAO,4CAMVn6B,KAAAA,wBACAA,KAAAA,sBACAA,KAAAA,SAqFHquC,EApHA,GCAAc,mBAAA,WAKE,SAAAA,KA2PF,OAvPSA,EAAA/tD,UAAAguD,kBAAP,SAAyBC,EAAoBC,OAErCC,EAAmBruD,KAAKsuD,mBAAmBH,EAAYC,GAC7D,GAAIG,EAAAA,QAAUF,GAAa,OAAOF,MAG5BK,EAAexuD,KAAKyuD,yBAAyBN,GACnD,OAAII,EAAAA,QAAUC,IAGdxuD,KAAK0uD,wCAAwCL,EAAUG,GAHjBL,GAQhCF,EAAA/tD,UAAAyuD,iBAAR,SAAyBC,EAAyBC,GAChD,IAAIN,EAAAA,QAAUK,KAAgBL,EAAAA,QAAUM,GAAxC,KACIC,EAAmB,GAMvB,OALAhvC,EAAAA,KAAO8uC,EAAa,SAACG,GACfA,EAAO1uC,OAASwuC,IAClBC,EAAcC,KAGXD,IAGDb,EAAA/tD,UAAA8uD,uBAAR,SAA+BD,EAAaE,GAC1C,IAAIV,EAAAA,QAAUQ,KAAWR,EAAAA,QAAUU,GAAnC,KACIC,EAAoB,GAOxB,OANApvC,EAAAA,KAAOivC,EAAOI,MAAO,SAACC,GAChBA,EAAK3+C,QAAUw+C,IACjBC,EAAYE,KAITF,IAGDjB,EAAA/tD,UAAAmvD,4CAAR,SACGN,EAAgBE,EAAmBK,GACpC,KAAIf,EAAAA,QAAUQ,IAAWR,EAAAA,QAAUU,IAAcV,EAAAA,QAAUe,IAA3D,KACMJ,EAAiBlvD,KAAKgvD,uBAAuBD,EAAQE,GAC3D,IAAIV,EAAAA,QAAUW,GAAd,KACIK,EAAuB,GAO3B,OANAzvC,EAAAA,KAAOovC,EAAUM,SAAU,SAAC9xC,GACtBA,EAAQjN,QAAU6+C,IACpBC,EAAe7xC,KAIZ6xC,KAGDtB,EAAA/tD,UAAAuvD,wBAAR,SAAgCV,EAAaW,GAC3C,IAAInB,EAAAA,QAAUQ,KAAWR,EAAAA,QAAUmB,GAAnC,CACA,GAAIruD,MAAMgM,QAAQ0hD,GAAS,CAEzB,QADIvoD,OAAQ,EACHvE,EAAI,EAAGA,EAAI8sD,EAAO5sD,SACpBosD,EAAAA,QAAUQ,EAAO9sD,MACpBuE,EAAWxG,KAAKyvD,wBAAwBV,EAAO9sD,GAAIytD,IAEhDnB,EAAAA,QAAU/nD,IAJkBvE,KAQnC,OAAOuE,EACF,GAAsB,iBAAXuoD,EAAX,CACL,GAAI/uD,KAAK2vD,uBAAuBZ,EAAQW,GACtC,OAAOX,EACF,GAAI/uD,KAAK4vD,4BAA4Bb,GAAS,KAC7Cc,EAAYd,EAAOI,OAASJ,EAAOS,UAAYT,EAAO50C,UAC5D,OAAOna,KAAKyvD,wBAAwBI,EAAUH,OAS5CzB,EAAA/tD,UAAA4vD,sCAAR,SAA8Cf,EAAaW,GACzD,IAAInB,EAAAA,QAAUQ,KAAWR,EAAAA,QAAUmB,GACnC,OAAO1vD,KAAK+vD,8BAA8BhB,EAAQA,EAAQW,IAIpDzB,EAAA/tD,UAAA6vD,8BAAR,SAAsCC,EAAaC,EAAaP,GAC9D,GAAIruD,MAAMgM,QAAQ4iD,GAAS,CAEzB,QADIC,OAAa,EACRjuD,EAAI,EAAGA,EAAIguD,EAAO9tD,SACpBosD,EAAAA,QAAU0B,EAAOhuD,MACpBiuD,EAAgBlwD,KAAK+vD,8BAA8BE,EAAQA,EAAOhuD,GAAIytD,IAEnEnB,EAAAA,QAAU2B,IAJkBjuD,KASnC,OAAOiuD,EACF,GAAsB,iBAAXD,EAAX,CACL,GAAIjwD,KAAK2vD,uBAAuBM,EAAQP,GACtC,OAAOM,EACF,GAAIhwD,KAAK4vD,4BAA4BK,GAAS,KAC7CJ,EAAYI,EAAOd,OAASc,EAAOT,UAAYS,EAAO91C,UAC5D,OAAOna,KAAK+vD,8BAA8BF,EAAUA,EAAUH,MAU5DzB,EAAA/tD,UAAA0vD,4BAAR,SAAoCK,GAClC,GAAsB,iBAAXA,EAAqB,KACxBE,EAAajvD,OAAO4L,KAAKmjD,GAC/B,GAAIG,EAAAA,SAAWD,EAAY,UACzBC,EAAAA,SAAWD,EAAY,aACvBC,EAAAA,SAAWD,EAAY,aACvB,OAAO,EAGX,OAAO,GAGDlC,EAAA/tD,UAAAyvD,uBAAR,SAA+BM,EAAgBxmD,GAC7C,OAAOwmD,EAAW,KAAMxmD,GAIlBwkD,EAAA/tD,UAAAuuD,yBAAR,SAAiCM,OACzBsB,EAAgC,GAEtC,OADArwD,KAAKswD,0BAA0BvB,EAAQsB,GAChCA,GAGDpC,EAAA/tD,UAAAowD,0BAAR,SAAkCC,EAAgBC,GAChD,IAAIjC,EAAAA,QAAUgC,GACd,GAAIlvD,MAAMgM,QAAQkjD,GAChB,IAAK,IAAItuD,EAAI,EAAGA,EAAIsuD,EAAUpuD,OAAQF,IAC/BssD,EAAAA,QAAUgC,EAAUtuD,KACvBjC,KAAKswD,0BAA0BC,EAAUtuD,GAAIuuD,QAG5C,GAAyB,iBAAdD,EAChB,GAAKhC,EAAAA,QAAUgC,EAAUE,YAElB,GAAIzwD,KAAK4vD,4BAA4BW,GAAY,KAChDV,EAAYU,EAAUpB,OAASoB,EAAUf,UAAYe,EAAUp2C,UACrEna,KAAKswD,0BAA0BT,EAAUW,SAHzCA,EAAazsD,KAAKwsD,IAQhBtC,EAAA/tD,UAAAwwD,sBAAR,SAA8BC,EAA2BC,GACvD,IAAK,IAAMC,KAAUD,EACfrC,EAAAA,QAAUoC,EAAkBE,MAC9BF,EAAkBE,GAAUD,EAAgBC,IAGhD,OAAOF,GAGD1C,EAAA/tD,UAAAwuD,wCAAR,SACGoC,EAA+BC,GADlC,IAAA3tD,EAAApD,KAcE,OAZA8f,EAAAA,KAAOixC,EAAmB,SAACC,OACnBC,EACJ7tD,EAAK8tD,oBAAoBF,EAAYP,UAAWK,GAE9CvC,EAAAA,QAAU0C,GACZlkD,QAAQpM,MAAM,gDAAiDqwD,EAAYP,YAE3EO,EAAc5tD,EAAKstD,sBAAsBM,EAAaC,UACtDD,EAAc5tD,EAAK+tD,uCAAuCH,IAC5B,aAG3BD,GAGD9C,EAAA/tD,UAAAkxD,sBAAR,SAA8BpjD,EAAmBiiD,OACzCoB,EAAgBrjD,EAAMhE,QAAQimD,IACb,IAAnBoB,GAEJrjD,EAAMvJ,OAAO4sD,EAAe,IAGtBpD,EAAA/tD,UAAAixD,uCAAR,SAA+CH,GAA/C,IAAA5tD,EAAApD,KAYE,OAXIqB,MAAMgM,QAAQ2jD,EAAYP,UAAUa,mBACtCxxC,EAAAA,KAAOkxC,EAAYP,UAAUa,iBAAkB,SAACC,OACxCC,EAA6BpuD,EAAK0sD,sCACtCkB,EAAaO,GAEf,GAAKlwD,MAAMgM,QAAQmkD,GAAnB,KACMhrD,EAAWpD,EAAKqsD,wBAAwB+B,EAAgBD,GAE9DnuD,EAAKguD,sBAAsBI,EAAgBhrD,MAGxCwqD,GAGD/C,EAAA/tD,UAAAgxD,oBAAR,SAA4BO,EAAoBX,GAC9C,GAAIvC,EAAAA,QAAUkD,EAAchrD,MAC1BsG,QAAQpM,MAAM,iDAAkD8wD,OADlE,CAIA,IAAIlD,EAAAA,QAAUuC,EAAsBW,EAAchrD,OAIlD,OAAK8nD,EAAAA,QAAUkD,EAAc/B,YAMxBnB,EAAAA,QAAUkD,EAAcrC,OAAUb,EAAAA,QAAUkD,EAAc/zC,SAO1D6wC,EAAAA,QAAUkD,EAAcrC,WAM7BriD,QAAQpM,MAAM,2CAA4C8wD,EAAchB,WAL/DzwD,KAAKgvD,uBACV8B,EAAsBW,EAAchrD,MACpCgrD,EAAcrC,MATTpvD,KAAKqvD,4CACVyB,EAAsBW,EAAchrD,MACpCgrD,EAAcrC,KACdqC,EAAc/zC,SATT1d,KAAKyvD,wBACVqB,EAAsBW,EAAchrD,MACpCgrD,EAAc/B,YANhB3iD,QAAQpM,MAAM,gDAAiD8wD,KAyB3DxD,EAAA/tD,UAAAouD,mBAAR,SAA2BH,EAAiBuD,GAA5C,IAAAtuD,EAAApD,KACQ2xD,EAA8BxD,EAAWwD,gBAE/C,IAAIpD,EAAAA,QAAUoD,GAAd,KAEMb,EAAgC,GAMtC,OAJAhxC,EAAAA,KAAO6xC,EAAiB,SAAClB,GACvBK,EAAsBL,EAAUmB,OAC9BxuD,EAAKurD,iBAAiB+C,EAAwBjB,EAAUoB,YAErDf,wBA3PV1wD,KAAAA,mDA6PD6tD,EAhQA,iCCOI,SAAA6D,EAAY1hD,GAAZ,IAAAhN,EAEIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAK22C,YAAc3pC,EAAQ2pC,aAAe,GAC1C32C,EAAKqW,YAAcC,eAAexL,iBAE1C,OATuC5G,UAAAA,EAAAA,GASvCwqD,GATuC3hD,gDCInC,SAAA4hD,EAAY3hD,GAAZ,IAAAhN,EAEIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAK22C,YAAc3pC,EAAQ2pC,aAAe,GAC1C32C,EAAK0Y,WAAa1L,EAAQ0L,aAAc,EACxC1Y,EAAK4uD,KAAO5hD,EAAQ4hD,MAAQ,GAC5B5uD,EAAKoN,cAAgB,WACrBpN,EAAKqW,YAAcC,eAAexL,iBAE1C,OAb2C5G,UAAAA,EAAAA,GAa3CyqD,GAb2CD,8CCKvC,SAAAG,EAAY7hD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,SACrBpN,EAAKgN,QAAUA,EAAQA,SAAW,GAClChN,EAAKqW,YAAcC,eAAexL,eAClC9K,EAAKsX,WAAatK,EAAQsK,YAAc,KAGhD,OAboCpT,UAAAA,EAAAA,GAapC2qD,GAboC9hD,2CCKhC,SAAA+hD,EAAY9hD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,YACrBpN,EAAKgN,QAAUA,EAAQA,SAAW,GAClChN,EAAKqW,YAAcC,eAAexL,iBAG1C,OAZsC5G,UAAAA,EAAAA,GAYtC4qD,GAZsC/hD,uCCGlC,SAAAgiD,EAAY/hD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YAHlBoD,EAAAumD,UAAW,EACXvmD,EAAAgvD,gBAAiB,EAGbhvD,EAAKoN,cAAgB,OACrBpN,EAAKqW,YAAcC,eAAexL,iBAE1C,OARkC5G,UAAAA,EAAAA,GAQlC6qD,GARkChiD,8CCI9B,SAAAkiD,EAAYjiD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,eACrBpN,EAAKgN,QAAUA,EAAQA,SAAW,GAClChN,EAAKqW,YAAcC,eAAexL,iBAG1C,OAXyC5G,UAAAA,EAAAA,GAWzC+qD,GAXyCJ,2CCCrC,SAAAK,EAAYliD,UACRhJ,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,KAEtB,OAL6CsH,UAAAA,EAAAA,GAK7CgrD,GAL6CniD,wCCOzC,SAAAoiD,EAAYniD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YAHlBoD,EAAA0Y,YAAa,EAIT1Y,EAAKoN,cAAgB,QACrBpN,EAAK+W,UAAY/J,EAAQ+J,WAAa,GACtC/W,EAAKqW,YAAcC,eAAe9J,eAE1C,OAVmCtI,UAAAA,EAAAA,GAUnCirD,GAVmCD,8CCG/B,SAAAE,EAAYpiD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,YACrBpN,EAAK+W,UAAY/J,EAAQ+J,WAAa,GACtC/W,EAAKqW,YAAcC,eAAe3J,eAE1C,OATuCzI,UAAAA,EAAAA,GASvCkrD,GATuCF,6CCEnC,SAAAG,EAAYriD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,WACrBpN,EAAKgN,QAAUA,EAAQA,SAAW,GAClChN,EAAKqW,YAAcC,eAAexL,iBAG1C,OAXsC5G,UAAAA,EAAAA,GAWtCmrD,GAXsCtiD,6CCIlC,SAAAuiD,EAAYtiD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YAJlBoD,EAAAumD,UAAW,EACXvmD,EAAAgvD,gBAAiB,EAIbhvD,EAAKoN,cAAgB,OACrBpN,EAAKsX,WAAatK,EAAQsK,WAC1BtX,EAAKqW,YAAcC,eAAexL,iBAE1C,OAVwC5G,UAAAA,EAAAA,GAUxCorD,GAVwCviD,4CCMpC,SAAAwiD,EAAYviD,GAAZ,IAAAhN,EACIgE,EAAAlF,KAAAlC,KAAMoQ,IAAQpQ,YACdoD,EAAKoN,cAAgB,SACrBpN,EAAKwvD,UAAYxiD,EAAQwiD,UACzBxvD,EAAKyvD,iBAAmBziD,EAAQyiD,iBAChCzvD,EAAKgN,QAAUA,EAAQA,QACvBhN,EAAK0vD,iBAAmB1iD,EAAQ0iD,iBAChC1vD,EAAK2vD,UAAY3iD,EAAQ0iD,iBACzB1vD,EAAKqW,YAAcC,eAAexL,iBAE1C,OAhBuC5G,UAAAA,EAAAA,GAgBvCqrD,GAhBuCxiD,8CCErC,SAAA6iD,EAAY1qD,GAAZ,IAAAlF,EACEgE,EAAAlF,KAAAlC,KAAMsI,IAAYtI,YAHpBoD,EAAA+T,kBAAmB,EAKjB/T,EAAK+T,iBAAoD,SAAjC7O,EAAY6O,mBAExC,OATyC7P,UAAAA,EAAAA,GASzC0rD,GATyC3qD,gDCIvC,SAAA4qD,EAAY3qD,GAAZ,IAAAlF,EACEgE,EAAAlF,KAAAlC,KAAMsI,IAAYtI,KACZqS,EAAW/J,EAAY+J,WAC7BjP,EAAKiP,KAAOA,IAEhB,OATwC/K,UAAAA,EAAAA,GASxC2rD,GATwC5qD,gDCItC,SAAA6qD,EAAY5qD,GAAZ,IAAAlF,EACEgE,EAAAlF,KAAAlC,KAAMsI,IAAYtI,KACZiS,EAAW3J,EAAY2J,WAC7B7O,EAAK6O,KAAOA,IAEhB,OATwC3K,UAAAA,EAAAA,GASxC4rD,GATwC7qD,iBCGxC8qD,gBAAA,WAKE,SAAAA,IAFAnzD,KAAAozD,mBAAoB,EAmHtB,OA/GED,EAAAjzD,UAAA6tD,qBAAA,SAAqB3rD,OACfixD,EAAgBrzD,KAAKszD,aAWzBD,GATAA,EAAgBA,EAAct/C,IAAI,SAAU9F,GAK1C,OAJe,IAAIkT,SAAO,CACxB1Q,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,aAMe3c,OAC5B,SAAA72B,GAAU,OAAAA,EAAO3d,QAAUA,QAGvBwP,EAA6B,IAAIswC,KAAAA,gBAAqB,IAO5D,OANKliD,KAAKozD,kBAGRxhD,EAAKjR,MAAM,IAAImV,MAAM,0BAFrBlE,EAAKhR,KAAKyyD,EAAc,IAKnBzhD,EAAKnR,gBAEd0yD,EAAAjzD,UAAA+jD,WAAA,SAAW1B,GACT,OAAOiR,KAAAA,GAAG,CAAEtP,MAAO,MAErBiP,EAAAjzD,UAAAuzD,UAAA,SAAUlR,GACR,OAAOiR,KAAAA,GAAG,CAAEtP,MAAO,MAErBiP,EAAAjzD,UAAAytD,cAAA,SAAcF,OACR4F,EAAgBrzD,KAAKszD,aAWzBD,GATAA,EAAgBA,EAAct/C,IAAI,SAAU9F,GAK1C,OAJe,IAAIkT,SAAO,CACxB1Q,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,aAMe3c,OAC5B,SAAA72B,GAAU,OAAsC,IAAtCA,EAAOtP,MAAMzG,QAAQyjD,SAG3B77C,EAA6B,IAAIswC,KAAAA,gBAAqB,IAO5D,OANKliD,KAAKozD,kBAGRxhD,EAAKjR,MAAM,IAAImV,MAAM,0BAFrBlE,EAAKhR,KAAKyyD,GAKLzhD,EAAKnR,gBAGd0yD,EAAAjzD,UAAAozD,WAAA,WACE,MAAO,CACL,CACEC,QAAS,uCACT9iD,MAAO,QAET,CACE8iD,QAAS,uCACT9iD,MAAO,kBAET,CACE8iD,QAAS,uCACT9iD,MAAO,cAET,CACE8iD,QAAS,uCACT9iD,MAAO,mBAET,CACE8iD,QAAS,uCACT9iD,MAAO,uBAET,CACE8iD,QAAS,uCACT9iD,MAAO,6CAET,CACE8iD,QAAS,uCACT9iD,MAAO,0BAET,CACE8iD,QAAS,uCACT9iD,MAAO,0BAET,CACE8iD,QAAS,uCACT9iD,MAAO,WAET,CACE8iD,QAAS,uCACT9iD,MAAO,SAET,CACE8iD,QAAS,uCACT9iD,MAAO,UAET,CACE8iD,QAAS,uCACT9iD,MAAO,aAMf0iD,EAtHA,GCDM3nD,SAASC,QAEfioD,+BAAA,WAIE,SAAAA,IADA1zD,KAAAyM,YAAmB,GA0LrB,OAtLEinD,EAAAxzD,UAAAyzD,mBAAA,SAAmBtzC,EAAcuzC,GAAjC,IAAAxwD,EAAApD,KACQ6zD,EAAgB,CACpB7P,KAAM,GACN8P,SAAU,SAAChtD,EAAaE,QAAA,IAAAA,IAAAA,EAAA,OAChB+sD,EAAYjtD,EAAIwW,MAAM,KAC5B,OAAuB,EAAnBy2C,EAAU5xD,OACLiB,EAAK4wD,cAAcD,EAAWF,EAAS7P,KAAKh9C,IAE9C6sD,EAAS7P,KAAKh9C,GAAOF,IAE9BmtD,cAAe,WACb,OAAOJ,EAAS7P,MAElBkQ,gBAAiB,SAACltD,GAChB,YADgB,IAAAA,IAAAA,EAAA,GACT6sD,EAAS7P,KAAKh9C,KAIzB,GAAI4Y,EAAAA,QAAUg0C,GAAa,KACnBO,EAAoB,GAC1Br0C,EAAAA,KAAO8zC,EAAY,SAACQ,GAClBD,EAAMpwD,KAAKX,EAAKixD,oBAAoBD,MAItCP,EAAS7P,KAAOsQ,EAAAA,OAASH,EAAO,qBAAqBI,eAGrDV,EAAS7P,KAAKjgD,KAAK/D,KAAKq0D,oBAAoBT,IAG9C5zD,KAAKw0D,UAAUn0C,EAAMwzC,IAIvBH,EAAAxzD,UAAAs0D,UAAA,SAAUn0C,EAAM4vC,GACdjwD,KAAKyM,YAAY4T,GAAQ4vC,GAG3ByD,EAAAxzD,UAAAu0D,UAAA,SAAUp0C,GACR,OAAOrgB,KAAKyM,YAAY4T,IAAS,MAGnCqzC,EAAAxzD,UAAA8zD,cAAA,SAAcnqD,EAAqBomD,OAE3ByE,EAAU,GAIhB,GAFA10D,KAAK20D,aAAa9qD,EAAMomD,EAAQyE,GAEX,EAAjBA,EAAQvyD,OACV,MAAO,CACLC,MAAOsyD,EAAQ,GACf5zC,UAAWtV,SAAOykD,EAAO2E,mBAAmBh/C,OAAO,QAMzD89C,EAAAxzD,UAAAy0D,aAAA,SAAa9qD,EAAMomD,EAAQyE,GAA3B,IAAAtxD,EAAApD,KACE,IAAI60D,EAAAA,MAAQ5E,GAIZ,GAAIpmD,EAAK1H,QAAU,EACZ0yD,EAAAA,MAAQ5E,EAAOpmD,EAAK,MACvB6qD,EAAQ3wD,KAAKksD,EAAOpmD,EAAK,SAF7B,KAOMirD,EAAUjrD,EAAKpF,OAAO,GACtBqC,EAAM+C,EAAK,GAEb+V,EAAAA,QAAUqwC,EAAOnpD,KAA8B,EAArBmpD,EAAOnpD,GAAK3E,OACxC2d,EAAAA,KAAOmwC,EAAOnpD,GAAM,SAACiuD,GACnB3xD,EAAKuxD,aAAaG,EAAQre,MAAM,GAAIse,EAAaL,KAGnD10D,KAAK20D,aAAaG,EAAQre,MAAM,GAAIwZ,EAAOnpD,GAAM4tD,KAI7ChB,EAAAxzD,UAAAm0D,oBAAR,SAA4BD,GAC1B,IAAIS,EAAAA,MAAQT,GAAZ,KAIMY,EAAqB,CACzBJ,kBAAmBR,EAAUQ,mBAmB/B,GAhBIR,EAAUa,UAAYb,EAAUa,SAAS9oD,OAC3C6oD,EAAcC,SAAWb,EAAUa,SAAS9oD,MAG1CioD,EAAUc,SAAWd,EAAUc,QAAQ/oD,OACzC6oD,EAAcE,QAAUd,EAAUc,QAAQ/oD,MAGxCioD,EAAU3tD,MAAQ2tD,EAAU3tD,KAAK0F,OACnC6oD,EAAcvuD,KAAO2tD,EAAU3tD,KAAK0F,MAGlCioD,EAAUe,eAAiBf,EAAUe,cAAchpD,OACrD6oD,EAAcG,cAAgBf,EAAUe,cAAchpD,MAGpDioD,EAAUgB,SAAU,KAChBA,EAAWhB,EAAUgB,SAC3BJ,EAAcI,SAAWA,EAASjpD,KAIpC,GAAIioD,EAAUiB,IAAK,KACXC,EAAoBt1D,KAAKu1D,cAAcnB,EAAUiB,KAGvDG,EAAAA,OAASR,EAAeM,GAG1B,OAAON,IAGDtB,EAAAxzD,UAAAq1D,cAAR,SAAsBF,GAAtB,IAAAjyD,EAAApD,KAEE,IAAKq1D,EACH,OAAO,SAGHI,EAAc,GACpB,GAAI71C,EAAAA,QAAUy1C,GAIZ,OAHAv1C,EAAAA,KAAOu1C,EAAK,SAACK,GACXtyD,EAAKuyD,aAAaF,EAAQryD,EAAKmyD,cAAcG,MAExCD,EACF,GAAIJ,EAAIO,aAAc,KACrBC,EAAa,GAWnB,OAVA/1C,EAAAA,KAAOu1C,EAAIO,aAAc,SAAC/E,GACxBztD,EAAKuyD,aAAaE,EAAOzyD,EAAKmyD,cAAc1E,MAI1C4E,EAAOJ,EAAI9B,QAAQpnD,OAASyT,EAAAA,QAAU61C,EAAOJ,EAAI9B,QAAQpnD,OAC3DspD,EAAOJ,EAAI9B,QAAQpnD,MAAMpI,KAAK8xD,GAE9BJ,EAAOJ,EAAI9B,QAAQpnD,MAAQ,CAAC0pD,GAEvBJ,EAOP,OALIJ,EAAIjzD,iBAAiBlB,OACvBu0D,EAAOJ,EAAI9B,QAAQpnD,MAAQkpD,EAAIjzD,MAAM+J,KAErCspD,EAAOJ,EAAI9B,QAAQpnD,MAAQkpD,EAAIjzD,MAE1BqzD,GAKH/B,EAAAxzD,UAAAy1D,aAAR,SAAqBG,EAAeC,GAClC,IAAK,IAAMjvD,KAAOivD,EAChB,GAAIC,EAAAA,IAAMF,EAAUhvD,GAAM,CAExB,IAAK8Y,EAAAA,QAAUk2C,EAAShvD,IAAO,KACvBmvD,EAAOH,EAAShvD,GACtBgvD,EAAShvD,GAAO,CAACmvD,GAIfr2C,EAAAA,QAAUm2C,EAAMjvD,IAClBzF,MAAMnB,UAAU6D,KAAKmyD,MAAMJ,EAAShvD,GAAMivD,EAAMjvD,IAEhDgvD,EAAShvD,GAAK/C,KAAKgyD,EAAMjvD,SAG3BgvD,EAAShvD,GAAOivD,EAAMjvD,GAG1B,OAAOgvD,uBAzLV11D,KAAAA,mDA6LDszD,EA7LA,GCCAyC,wBAAA,WAGE,SAAAA,KAkBF,OAfSA,EAAAj2D,UAAAk2D,SAAP,SAAgBC,EAAc5pD,OACtB6pD,EAAK,IAAI5C,+BACf4C,EAAG3C,mBAAmB,UAAWlnD,EAAwB,gBACnD8pD,EAAY,CAChBD,GAAIA,GAGAzqD,EAAS,IAAIoH,mBACbpS,EAA0B,IAAIqN,eAIpC,OAHiC,IAAIxC,kBACHC,YAAY0qD,EAAMx1D,EAASgL,EAAOsK,gBAAiBogD,GAErEtqD,2BAlBnB7L,KAAAA,mDAqBD+1D,EArBA,GCPAK,gBAAA,WA6BE,SAAAA,IAFAx2D,KAAAyM,YAAmB,GACnBzM,KAAAy2D,wBAAmD,IAAIN,wBAg1BzD,OA50BEK,EAAAt2D,UAAAw2D,oBAAA,SAAoBvI,EAAiB1nD,GACnC,GAAIA,EAAM,KACFgG,EAAchG,EAAK+F,qBAAqBC,YAC9CzM,KAAKyM,YAAcA,EAErB,OAAOzM,KAAK22D,oBAAoBxI,IAGlCqI,EAAAt2D,UAAA02D,iBAAA,SAAiBC,OACTrwD,EAAW,IAAIyrD,eAAe,CAAE7hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KAClEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS4J,QAAUymD,EAAeC,gBAAgBpC,QAAQ3gD,IAAI,SAAU9F,GACtE,MAAO,CACLwC,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,WAIM/sD,EAAS4J,QACtB3L,OAAO,EAAG,EAAG,CACnBgM,MAAO,GACPrO,MAAO,KAGToE,EAASgK,cAAgBqmD,EAAeC,gBAAgB/D,UACxDvsD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAalB,OALA72D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAm3D,kBAAA,SAAkBR,OACVrwD,EAAW,IAAIsrD,kBAAkB,CAAE/X,YAAa,GAAIxxC,KAAM,GAAIzB,IAAK,KACzEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,SACzBhK,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,YACtDvzC,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,aAAe,GAYrE,OALA/5C,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAo3D,iBAAA,SAAiBT,OACTrwD,EAAW,IAAIsrD,kBAAkB,CAAE/X,YAAa,GAAIxxC,KAAM,GAAIzB,IAAK,KACzEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,SACzBhK,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,aAAe,GACrEvzC,EAAS+J,OAASsmD,EAclB,OANA72D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CA,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzC72D,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAq3D,eAAA,SAAeV,GACb,GAA4B,sBAAxBA,EAAetuD,KACjB,OAAOvI,KAAKw3D,4BAA4BX,OAEpCrwD,EAAW,IAAI2rD,aAAa,CAAE5pD,KAAM,GAAIzB,IAAK,KACnDN,EAASgK,cAAgB,OACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASmjD,SAAWkN,EAAeC,gBAAwB,SAC3DtwD,EAAS4rD,iBAAiByE,EAAeC,gBAAgBW,UAczD,OALAz3D,KAAKg3D,eAPiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAIwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAs3D,4BAAA,SAA4BX,OACpBrwD,EAAW,IAAI2rD,aAAa,CAAE5pD,KAAM,GAAIzB,IAAK,KACnDN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASgK,cAAgB,OACzBhK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAAS4rD,iBAAiByE,EAAeC,gBAAgBW,UAczD,OAPAjxD,EAASmjD,UAAW,EAEpB3pD,KAAKg3D,eAPiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAIwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAw3D,mBAAA,SAAmBb,OACXrwD,EAAW,IAAIisD,iBAAiB,CAAEriD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KACpEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS+J,OAASsmD,EAClBrwD,EAAS4J,QAAUymD,EAAeC,gBAAgBpC,QAAQ3gD,IAAI,SAAC9F,GAC7D,MAAO,CACLwC,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,WAGf/sD,EAAS4J,QAAQ3L,OAAO,EAAG,GAE3B+B,EAASgK,cAAgBqmD,EAAeC,gBAAgB/D,UAWxD,OALA/yD,KAAKg3D,eALiB,CACpBvmD,MAAO,QACPhH,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAITgwD,EAAAt2D,UAAAy3D,wBAAA,SAAwBd,OAChBrwD,EAAW,IAAI6rD,oBAAoB,CAAEuF,WAAY,GAAIxnD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KACvFN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS4J,QAAUymD,EAAeC,gBAAgBpC,QAAQ3gD,IAAI,SAAU9F,GACtE,MAAO,CACLwC,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,WAGf/sD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAASkU,WAAa,IAAIy4C,gBAC1B3sD,EAAS+J,OAASsmD,EAalB,OALA72D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA23D,mBAAA,SAAmBhB,OACXrwD,EAAW,IAAIurD,sBAAsB,CACzCj2C,YAAY,EAAOk2C,KAAM,GACzBjY,YAAa,GAAIxxC,KAAM,GAAIzB,IAAK,KAElCN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,YACtDvzC,EAASsV,WAAa+6C,EAAe/6C,WACrCtV,EAASwrD,KAAO6E,EAAeC,gBAAgB9E,KAC/CxrD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,aAAe,GAarE,OALA/5C,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA43D,eAAA,SAAejB,OACPrwD,EAAW,IAAIsrD,kBAAkB,CAAE/X,YAAa,GAAIxxC,KAAM,GAAIzB,IAAK,KACzEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,OACzBhK,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,YACtDvzC,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASuzC,YAAc8c,EAAeC,gBAAgB/c,aAAe,GAYrE,OALA/5C,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA63D,qBAAA,SAAqBlB,OACbrwD,EAAW,IAAIksD,mBAAmB,CAAEnqD,KAAM,GAAIzB,IAAK,KACzDN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,OACzBhK,EAASkU,WAAa,OACtBlU,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAalB,OALA72D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA83D,eAAA,SAAenB,OACPrwD,EAAW,IAAIyrD,eAAe,CAAE7hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KAClEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAa,OAYtB,OALA1a,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA+3D,kBAAA,SAAkBpB,OACVrwD,EAAW,IAAIyrD,eAAe,CAAE7hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KAClEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAa,UAYtB,OALA1a,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAg4D,sBAAA,SAAsBrB,OACdrwD,EAAW,IAAIyrD,eAAe,CAAE7hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,KAClEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAam8C,EAAeC,gBAAgBp8C,YAAc,iBACnElU,EAASyV,kBAAoB,CAC3Bs3C,QAASsD,EAAeC,gBAAgBvD,SAa1C,OALAvzD,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAi4D,oBAAA,SAAoBtB,OACZrwD,EAAW,IAAIgsD,kBAAkB,CAAEr4C,UAAW,GAAI5R,KAAM,GAAIzB,IAAK,KAOvE,GANAN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAAS2T,UAAYna,KAAKo4D,0BAA0BvB,EAAe18C,WACnE3T,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GAGb,eAF5BrwD,EAAS+J,OAASsmD,GAECtuD,KAAsB,KACjC8vD,EAAYr4D,KAAKs4D,oBAAoBzB,GACrC0B,EAAS,GAAIA,EAAOx0D,KAAKs0D,GAC/B7xD,EAAS2T,UAAYo+C,EAcvB,OALAv4D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAs4D,gBAAA,SAAgB3B,OACRrwD,EAAW,IAAI+rD,cAAc,CAAEp4C,UAAW,GAAI5R,KAAM,GAAIzB,IAAK,KACnEN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAAS2T,UAAYna,KAAKo4D,0BAA0BvB,EAAe18C,WACnE3T,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAalB,OALA72D,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAu4D,eAAA,SAAe5B,GAAf,IAAAzzD,EAAApD,KACQwG,EAAW,IAAI+rD,cAAc,CAAEp4C,UAAW,GAAI5R,KAAM,GAAIzB,IAAK,KASnE,OARAN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAepmD,MAC9BjK,EAASgK,cAAgB,OACzBhK,EAASiT,YAAcC,eAAexJ,KACtC1J,EAAS2T,UAAY,GACrB08C,EAAerH,SAAS5qD,QAAQ,SAAAuG,GAC9B3E,EAAS2T,UAAUpW,KAAKX,EAAKs1D,kBAAkBvtD,MAE1C3E,GAGTgwD,EAAAt2D,UAAAy2D,oBAAA,SAAoBE,GAApB,IAAAzzD,EAAApD,KACQwG,EAAW,IAAI+rD,cAAc,CAAEp4C,UAAW,GAAI5R,KAAM,GAAIzB,IAAK,KAWnE,OAVAN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAepmD,MAC9BjK,EAASgK,cAAgB,OACzBhK,EAASiT,YAAcC,eAAe9J,aACtCpJ,EAAS+J,OAASsmD,EAClBrwD,EAAS2T,UAAY,GACrB08C,EAAe1H,MAAMvqD,QAAQ,SAAAuG,GAC3B3E,EAAS2T,UAAUpW,KAAKX,EAAKq1D,eAAettD,MAGvC3E,GAGTgwD,EAAAt2D,UAAAw4D,kBAAA,SAAkB7B,OACVrwD,EAAW,IAAI+rD,cAAc,CAAEp4C,UAAW,GAAI5R,KAAM,GAAIzB,IAAK,KAOnE,OANAN,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAepmD,MAC9BjK,EAASgK,cAAgB,UACzBhK,EAASiT,YAAcC,eAAexJ,KACtC1J,EAASsV,WAA2C,SAA9B+6C,EAAe/6C,WACrCtV,EAAS2T,UAAYna,KAAK24D,mBAAmB9B,EAAe18C,WACrD3T,GAGTgwD,EAAAt2D,UAAA04D,0BAAA,SAA0B/B,OAClBrwD,EAAW,IAAI0rD,iBAAiB,CACpC9hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,GAAI+xD,eAAgB,aAChDC,gBAAiB,eAInBtyD,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAa,kBActB,OANA1a,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA64D,4BAAA,SAA4BlC,OACpBrwD,EAAW,IAAI0rD,iBAAiB,CACpC9hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,GAAI+xD,eAAgB,aAChDC,gBAAiB,eAInBtyD,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAa,WAatB,OALA1a,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAA84D,mBAAA,SAAmBnC,OACXoC,EAAWj5D,KAAKw4D,gBAAgB3B,GAEtC,OADAoC,EAASzoD,cAAgB,YAClByoD,GAGTzC,EAAAt2D,UAAAg5D,4BAAA,SAA4BrC,OACpBrwD,EAAW,IAAI0rD,iBAAiB,CACpC9hD,QAAS,GAAI7H,KAAM,GAAIzB,IAAK,GAAI+xD,eAAgB,aAChDC,gBAAiB,eAInBtyD,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAASgK,cAAgBqmD,EAAetuD,KACxC/B,EAASgK,cAAgB,gBACzBhK,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAASkU,WAAa,WAatB,OALA1a,KAAKg3D,eANiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAGwBotD,EAAgBrwD,GAC9CxG,KAAKi3D,yBAAyBJ,EAAgBrwD,GAC9CxG,KAAKk3D,iBAAiBL,EAAgBrwD,GACtCxG,KAAKm3D,yBAAyBN,EAAgBrwD,GAC9CxG,KAAKo3D,sBAAsBP,EAAgBrwD,GACpCA,GAGTgwD,EAAAt2D,UAAAo4D,oBAAA,SAAoBzB,OAEZrwD,EAAW,IAAImsD,kBAAkB,CACrCpqD,KAAM,GAAIzB,IAAK,GAAI8rD,UAAW,GAAIC,iBAAkB,GACpDC,iBAAkB,GAAIriD,MAAO,GAAIsiD,UAAW,KAG9CvsD,EAASiK,MAAQomD,EAAepmD,MAChCjK,EAASM,IAAM+vD,EAAeptD,GAC9BjD,EAAS0E,WAAalL,KAAK+2D,cAAcF,GACzCrwD,EAAS+J,OAASsmD,EAClBrwD,EAAS4J,QAAUymD,EAAeC,gBAAgBjE,iBAAiB9+C,IAAI,SAAU9F,GAC/E,MAAO,CACLwC,MAAOxC,EAAIwC,MACXrO,MAAO6L,EAAIslD,WAUf,OADAvzD,KAAKg3D,eALiB,CACpBvmD,MAAO,QACPxF,SAAU,WACVxB,GAAI,OAEwBotD,EAAgBrwD,GACvCA,GAGTgwD,EAAAt2D,UAAAy4D,mBAAA,SAAmB5J,OACXoK,EAAgB,IAAI93D,MAE1B,OADArB,KAAKo5D,aAAarK,EAAQoK,GACnBA,GAGT3C,EAAAt2D,UAAAk5D,aAAA,SAAarK,EAAasK,GAIxB,GAHKh4D,MAAMgM,QAAQgsD,KACjBA,EAAa,IAEXh4D,MAAMgM,QAAQ0hD,GAEhB,IAAK,IAAM/2C,KAAY+2C,EACjBA,EAAOxtD,eAAeyW,IACxBhY,KAAKo5D,aAAarK,EAAO/2C,GAAWqhD,GAK1C,GAAItK,IAAW1tD,MAAMgM,QAAQ0hD,IAA6B,iBAAXA,EAC7C,GAAIA,EAAO+H,gBACgC,UAArC/H,EAAO+H,gBAAgB/D,WACY,cAArChE,EAAO+H,gBAAgB/D,UAEvBsG,EAAWt1D,KAAK/D,KAAKs5D,QAAQvK,EAAQA,EAAO+H,gBAAgB/D,YACd,cAArChE,EAAO+H,gBAAgB/D,WAEhCsG,EAAWt1D,KAAK/D,KAAKs5D,QAAQvK,EAAQA,EAAO+H,gBAAgB/D,iBAG9D,IAAK,IAAMlxD,KAAKktD,EACVA,EAAOxtD,eAAeM,IACxB7B,KAAKo5D,aAAarK,EAAOltD,GAAIw3D,IAQvC7C,EAAAt2D,UAAAk4D,0BAAA,SAA0BrJ,OAClBpnD,EAAW,GAEjB,OADA3H,KAAKo5D,aAAarK,EAAQpnD,GACnBA,GAIT6uD,EAAAt2D,UAAAo5D,QAAA,SAAQvK,EAAa6I,GAenB,OAdmB,uBAAfA,IACFA,EAAa7I,EAAOxmD,MAEjBwmD,EAAOtlD,KACVslD,EAAW,GAAI/uD,KAAKu5D,WAAW,MAG7BxK,EAAO+H,kBAC4B,IAApC/H,EAAO+H,gBAAgBpN,UACc,SAApCqF,EAAO+H,gBAAgBpN,WACzBqF,EAAS/uD,KAAKw5D,gDAAgDzK,GAC9D6I,EAAa,aAGPA,GACN,IAAK,SAEL,IAAK,gBAEL,IAAK,eACH,OAAO53D,KAAK42D,iBAAiB7H,GAC/B,IAAK,UACH,OAAO/uD,KAAKq3D,kBAAkBtI,GAChC,IAAK,SACH,OAAO/uD,KAAKs3D,iBAAiBvI,GAC/B,IAAK,oBACH,OAAO/uD,KAAKw3D,4BAA4BzI,GAC1C,IAAK,OACH,OAAO/uD,KAAKu3D,eAAexI,GAC7B,IAAK,gBACH,OAAO/uD,KAAK23D,wBAAwB5I,GACtC,IAAK,OACH,OAAO/uD,KAAKg4D,eAAejJ,GAC7B,IAAK,UACH,OAAO/uD,KAAKi4D,kBAAkBlJ,GAChC,IAAK,QACH,OAAO/uD,KAAKw4D,gBAAgBzJ,GAC9B,IAAK,YACH,OAAO/uD,KAAKg5D,mBAAmBjK,GACjC,IAAK,YACH,OAAO/uD,KAAKm4D,oBAAoBpJ,GAClC,IAAK,kBACH,OAAO/uD,KAAK44D,0BAA0B7J,GACxC,IAAK,OACH,OAAO/uD,KAAK83D,eAAe/I,GAC7B,IAAK,WAEL,IAAK,WACH,OAAO/uD,KAAK63D,mBAAmB9I,GACjC,IAAK,yBACH,OAAO/uD,KAAKk4D,sBAAsBnJ,GACpC,IAAK,oBACH,OAAO/uD,KAAKk5D,4BAA4BnK,GAC1C,IAAK,oBACH,OAAO/uD,KAAKw3D,4BAA4BzI,GAC1C,IAAK,oBACH,OAAO/uD,KAAK+4D,4BAA4BhK,GAC1C,IAAK,QAEL,IAAK,WACH,OAAO/uD,KAAK03D,mBAAmB3I,GACjC,IAAK,oBACH,OAAO/uD,KAAK+4D,4BAA4BhK,GAC1C,IAAK,OACH,OAAO/uD,KAAK+3D,qBAAqBhJ,GACnC,QAEE,OADAhiD,QAAQC,KAAK,0CAA4C4qD,GAClD53D,KAAK83D,eAAe/I,KAKjCyH,EAAAt2D,UAAAs5D,gDAAA,SAAgD3C,OACxC4C,EAAiB,CACvBlxD,KAAiB,eACjBkxD,EAAUhpD,MAAQomD,EAAepmD,MACjCgpD,EAAUhwD,GAAK,WAAaotD,EAAeptD,GAC3CgwD,EAAU3C,gBAAkB,GAC5B2C,EAAU3C,gBAAgBvD,QAAUsD,EAAeC,gBAAgBvD,QACnEkG,EAAU3C,gBAAgB/D,UAAY,YACtC0G,EAAUt/C,UAAY,GACtBs/C,EAAUvuD,WAAa,OAEjBwuD,EAAiBC,KAAK9O,MAAM8O,KAAKC,UAAU/C,IACjD6C,EAAUnxD,KAAO,2BACVmxD,EAAU5C,gBAAgBpN,gBAC1BgQ,EAAU5C,gBAAgB+C,iBACjCH,EAAU5C,gBAAgBgD,SAAW,YAE/BC,EAAiB,CACvBxxD,KAAiB,qBACjBwxD,EAAUtpD,MAAQ,WAAaipD,EAAUjpD,MACzCspD,EAAUtwD,GAAK,QAAUiwD,EAAUjwD,GACnCswD,EAAUjD,gBAAkB,GAC5BiD,EAAUjD,gBAAgBvD,QAAUsD,EAAeC,gBAAgBvD,QACnEwG,EAAUjD,gBAAgB/D,UAAY,OACtCgH,EAAUjD,gBAAgBgD,SAAW,kBAC/BE,EAAmB,OAAgBC,OAAO,GAC9CpD,EAAeC,gBAAgB+C,kBAQjC,OAPAE,EAAU7uD,WAAa8uD,EAAY9uD,WACnC6uD,EAAU3uD,KAAO4uD,EAAY5uD,KAG7BquD,EAAUt/C,UAAUpW,KAAK21D,GACzBD,EAAUt/C,UAAUpW,KAAKg2D,GAElBN,GAGTjD,EAAAt2D,UAAA82D,eAAA,SAAekD,EAAeC,EAAaC,GAEzC,IAAK,IAAMpiD,KAAYmiD,EACjBD,EAAS34D,eAAeyW,IAAaoiD,EAAY74D,eAAe24D,EAASliD,MAC3EoiD,EAAYF,EAASliD,IAAamiD,EAAOniD,KAK/Cw+C,EAAAt2D,UAAA62D,cAAA,SAAcF,OAEN3rD,EAAqC,GAEvC2rD,EAAe3rD,YAGjBkJ,EAAAA,QAAUyiD,EAAe3rD,WAAY,SAACkD,GACpC,OAAQA,EAAU7F,MAChB,IAAK,OACH2C,EAAWnH,KAAK,IAAIivD,oBAAoB5kD,IACxC,MACF,IAAK,gBACHlD,EAAWnH,KAAK,IAAIyE,4BAA4B4F,IAChD,MACF,IAAK,sBACHlD,EAAWnH,KAAK,IAAI2E,2BAA2B0F,IAC/C,MACF,QACElD,EAAWnH,KAAK,IAAIsE,gBAAgB+F,WAMtC0oD,EAAkBD,EAAeC,gBAEvC,OADsBA,EAAkBA,EAAgB/D,UAAY,IAElE,IAAK,SAEC+D,EAAgBzkD,KAAOykD,EAAgB7kD,MACzC/G,EAAWnH,KAAK,IAAIkvD,mBAAmB,CACrC1qD,KAAM,MACN8J,IAAKykD,EAAgBzkD,OAEvBnH,EAAWnH,KAAK,IAAImvD,mBAAmB,CACrC3qD,KAAM,MACN0J,IAAK6kD,EAAgB7kD,QAU7B,GAAuC,iBAA5B4kD,EAAe5rD,SAAuB,KAEzCA,EAAgB4rD,EAAe5rD,SAEf,wBAAlBA,EAAS1C,MAEX2C,EAAWnH,KAAK,IAAI2E,2BAA2B,CAC7CC,oBAAqBsC,EAAStC,oBAC9BC,yBAA0BqC,EAASrC,yBACnCL,KAAM0C,EAAS1C,KACf5C,QAASsF,EAAStF,WAKxB,OAAOuF,GAGTsrD,EAAAt2D,UAAAi3D,yBAAA,SAAyBN,EAAqBrwD,GAC5C,GAAIqwD,EAAewD,sBAAqE,EAA7CxD,EAAewD,qBAAqBl4D,OAAY,CACzFqE,EAASmK,oBAAmB,GACxBkmD,EAAe/lD,8BAAgCE,UACjDxK,EAASsK,4BACyC,SAA/C+lD,EAAe/lD,6BAElBtK,EAASsK,kCAELwpD,EAAYt6D,KAAKy2D,wBAAwBL,SAASS,EAAewD,qBACrEr6D,KAAKyM,aACPjG,EAASkK,oBAAsB4pD,EAC3BzD,EAAe0D,wBACjB/zD,EAAS6J,aAAeiqD,KAK9B9D,EAAAt2D,UAAAk3D,sBAAA,SAAsBP,EAAqBrwD,GAErCqwD,EAAeC,iBACmC,iBAA7CD,EAAeC,gBAAgB0D,YACtCh0D,EAAS8E,oBAAsBurD,EAAeC,gBAAgB0D,UAAUlvD,sBAK5EkrD,EAAAt2D,UAAAg3D,iBAAA,SAAiBL,EAAqBrwD,GAChCqwD,EAAevxD,QACjBkB,EAASlB,MAAQuxD,EAAevxD,QASpCkxD,EAAAt2D,UAAA+2D,yBAAA,SAAyBJ,EAAqBrwD,GAEtCqwD,EAAe1yD,UACnBqC,EAASrC,QAAU0yD,EAAe1yD,SAGE,iBAA3B0yD,EAAe1yD,UACxBqC,EAASrC,QAAU0yD,EAAe1yD,QAAQsU,uBAGtCo+C,EAAezrD,OACnB5E,EAAS4E,KAAOyrD,EAAezrD,MAEE,iBAAxByrD,EAAezrD,MAEpByrD,EAAezrD,KAAKyN,qBACtBrS,EAAS4E,KAAOyrD,EAAezrD,KAAKyN,qBAIlC29C,EAAAt2D,UAAAq5D,WAAR,SAAmBvlD,GAEjB,QADIymD,EAAI,IACDA,EAAEt4D,OAAS6R,GAAS,EAAJA,GAAO,KACtBX,EAAIqnD,KAAKC,SACfF,GAAMpnD,EAAI,GAAMqnD,KAAKE,MAAU,IAAJvnD,GACzBwnD,OAAOC,aAAaJ,KAAKE,MAAU,GAAJvnD,IAAe,GAAJA,EAAU,GAAK,KAE7D,MAAO,IAAMonD,GAEjBjE,EA52BA,GCAAuE,KAAA,WAgBE,SAAAA,EAAmBhM,EAAoBlnD,EAAiCmzD,GAArDh7D,KAAA+uD,OAAAA,EAAoB/uD,KAAA6H,YAAAA,EAAiC7H,KAAAg7D,gBAAAA,EAJjEh7D,KAAA2b,oBAA2B,GACzB3b,KAAAi7D,eAAsB,GAEvBj7D,KAAAk7D,aAAc,EAEpBl7D,KAAKm7D,sBAAwB,IAAIvgD,YAuOrC,OApOE1Z,OAAAyB,eAAIo4D,EAAA76D,UAAA,uBAAoB,KAAxB,WACE,OAAOF,KAAKm7D,uDAGdJ,EAAA76D,UAAAoK,iBAAA,SAAiB5C,EAAiBmC,EAAMuxD,GAAxC,IAAAh4D,EAAApD,KAEQ2H,EAAqBD,EAAKC,SAEhC,IAAK,IAAMb,KAAOa,EAEhB,GAAIA,EAASpG,eAAeuF,GAAM,KAE1ByC,EAAkB5B,EAASb,GAEjC,GAAIyC,aAAiBhC,UAAW,CAE9B,GAAIsC,IAASN,EAAMM,KAEjB,OADAuxD,EAAMr3D,KAAKwF,GACJ6xD,EAGTp7D,KAAKsK,iBAAiBf,EAAOM,EAAMuxD,QAC9B,GAAI7xD,aAAiBpC,UAE1B,GAAI0C,IAASN,EAAMM,KAEjB,OADAuxD,EAAMr3D,KAAKwF,GACJ6xD,OAEJ,GAAI7xD,aAAiB3B,UAAW,CAErC,GAAIiC,IAASN,EAAMM,KAEjB,OADAuxD,EAAMr3D,KAAKwF,GACJ6xD,EAGG,EAELzzD,SAAS/C,QAAQ,SAAAy2D,GACtBj4D,EAAKkH,iBAAiB+wD,EAAYxxD,EAAMuxD,MAMhD,OAAOA,GAGTL,EAAA76D,UAAA4K,uBAAA,SAAuB4kD,EAAoB4L,OACnCF,EAAQ,GAMd,OALIE,EACFt7D,KAAKu7D,yBAAyBv7D,KAAK+I,SAAUuyD,EAAcF,GAE3Dp7D,KAAKw7D,sBAAsBx7D,KAAK+I,SAAU2mD,EAAY0L,GAEjDA,GAGTL,EAAA76D,UAAAq7D,yBAAA,SAAyBxyD,EAAeuyD,EAAuBF,GAA/D,IAAAh4D,EAAApD,KAEE,GAAI+I,aAAoBxB,UAAW,KAC3Bk0D,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC1B3H,KAAKu7D,yBAAyBE,EAAY9zD,SAAS9F,GAAIy5D,EAAcF,GAIrEryD,aAAoBnB,WACL,EAELD,SAAS/C,QAAQ,SAAA8C,GAC3BtE,EAAKm4D,yBAAyB7zD,EAAM4zD,EAAcF,KAItD,GAAIryD,aAAoB5B,SAAU,KAC1BqC,EAA6BT,EAASvC,SAExCgD,EAAa+G,QAAU/G,EAAa+G,OAAOhI,MAAQiB,EAAa+G,OAAOhI,OAAS+yD,GAClFF,EAAMr3D,KAAKgF,KAKTgyD,EAAA76D,UAAAs7D,sBAAR,SAA8BzyD,EAAoB2mD,EAChDgM,GADF,IAAAt4D,EAAApD,KAME,GAJI+I,EAASvC,SAASM,MAAQ4oD,GAC5BgM,EAAQ33D,KAAKgF,GAGXA,aAAoBxB,UAAW,KAC3Bk0D,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC1B3H,KAAKw7D,sBAAsBC,EAAY9zD,SAAS9F,GAAI6tD,EAAYgM,GAIhE3yD,aAAoBnB,WACL,EAELD,SAAS/C,QAAQ,SAAA8C,GAC3BtE,EAAKo4D,sBAAsB9zD,EAAMgoD,EAAYgM,MAOnDx6D,OAAAyB,eAAIo4D,EAAA76D,UAAA,QAAK,KAAT,WAEE,OAAOF,KAAK+I,SAASlI,QAAQuc,uCAG/Blc,OAAAyB,eAAIo4D,EAAA76D,UAAA,aAAU,KAId,WACE,OAAOF,KAAKk7D,iBALd,SAAersD,GACb7O,KAAKk7D,YAAcrsD,mCAOrBksD,EAAA76D,UAAA+e,oBAAA,SAAoBvX,EAAiBi0D,GAArC,IAAAv4D,EAAApD,KAGQ2H,EAAqBD,EAAKC,SAEhC,IAAK,IAAMb,KAAOa,EAEhB,GAAIA,EAASpG,eAAeuF,GAAM,KAE1ByC,EAAkB5B,EAASb,GAEjC,GAAIyC,aAAiBhC,UAEnBvH,KAAKif,oBAAoB1V,EAAOoyD,QAC3B,GAAIpyD,aAAiBpC,SAAU,KAE9BqC,EAA6B,EAAoBhD,SAEvD,GAAIgD,EAAa1C,KAAiC,EAA1B0C,EAAa1C,IAAI3E,OAAY,KAE7Cy5D,EAAmCryD,EAAa,QAEjDqyD,EAAEx+C,OAAUw+C,EAAEx6C,WACbu6C,GACFA,EAAoB53D,KAAKwF,GAG3BqyD,EAAEC,uBAGD,GAAItyD,aAAiB3B,UAAW,KAC/B0F,EAAS,EAEXA,GAAaA,EAAU3F,UAAwC,EAA5B2F,EAAU3F,SAASxF,QAExDiS,EAAAA,QAAU9G,EAAU3F,SAAU,SAACm0D,GAC7B14D,EAAK6b,oBAAoB68C,EAAWH,MAO9C,OAAOA,GAGTZ,EAAA76D,UAAA67D,wCAAA,WACE/7D,KAAKg8D,yCAAyCh8D,KAAK+I,WAIrDgyD,EAAA76D,UAAA+7D,2BAAA,WACEj8D,KAAKk8D,4BAA4Bl8D,KAAK+I,WAGhCgyD,EAAA76D,UAAAg8D,4BAAR,SAAoCnzD,GAApC,IAAA3F,EAAApD,KAOE,GANI+I,EAASlI,SACNkI,EAAgB,QAAS5F,aAC3B4F,EAAgB,QAAS5F,cAI1B4F,aAAoBxB,UAAW,KAC3Bk0D,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC1B3H,KAAKk8D,4BAA4BT,EAAY9zD,SAAS9F,IAItDkH,aAAoBnB,WACL,EAELD,SAAS/C,QAAQ,SAAA8C,GAC3BtE,EAAK84D,4BAA4Bx0D,MAK/BqzD,EAAA76D,UAAA87D,yCAAR,SAAiDjzD,GAAjD,IAAA3F,EAAApD,KAWE,GAVI+I,EAASlI,UACNkI,EAAgB,QAAS7F,qBAC3B6F,EAAgB,QAAS7F,sBAGvB6F,EAAgB,QAAS9F,mBAC3B8F,EAAgB,QAAS9F,qBAI1B8F,aAAoBxB,UAAW,KAC3Bk0D,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC1B3H,KAAKg8D,yCAAyCP,EAAY9zD,SAAS9F,IAInEkH,aAAoBnB,WACL,EAELD,SAAS/C,QAAQ,SAAA8C,GAC3BtE,EAAK44D,yCAAyCt0D,MAItDqzD,EAxPA,GCAAoB,YAAA,WAuBI,SAAAA,EAAmBC,EACRC,EAAyCC,GADjCt8D,KAAAo8D,eAAAA,EACRp8D,KAAAq8D,gBAAAA,EAAyCr8D,KAAAs8D,wBAAAA,EAP7Ct8D,KAAAu8D,GAAU,CACbzI,SAAU,WACN,OAAO,KAsInB,OA9HIqI,EAAAj8D,UAAAs8D,WAAA,SAAWzN,EAAar0C,OACdjU,EAAa,IAAIs0D,KAAKhM,EAAQ/uD,KAAMA,KAAKq8D,iBAC/C,GAAI3hD,EACA,IAAK,IAAM5T,KAAO4T,EACVA,EAAWnZ,eAAeuF,IAC1BL,EAAK+F,qBAAqBsO,mBAAmBhU,EAAK4T,EAAW5T,IAAM,OAIzEN,EAAWxG,KAAKq8D,gBAAgB3F,oBAAoB3H,EAAQtoD,GAMlE,OALAA,EAAKsC,SAAW/I,KAAKy8D,WAAWj2D,EAAU,KAAM,KAAMC,GAEtDzG,KAAK8I,eAAerC,EAAKsC,UACzBtC,EAAKs1D,0CACLt1D,EAAKw1D,6BACEx1D,GAGX01D,EAAAj8D,UAAA4I,eAAA,SAAeC,GAEXiN,YAAYC,+BAAgC,EAC5CjW,KAAKs8D,wBAAwBxzD,eAAeC,GAG5CiN,YAAYC,+BAAgC,GAGhDkmD,EAAAj8D,UAAAu8D,WAAA,SAAWj2D,EACPk2D,EAAwBr1D,EAA8BZ,GAWtD,OATID,aAAoB8rD,eAChB9rD,aAAoBgsD,kBACbxyD,KAAK28D,gBAAgBn2D,EAAUk2D,EAAYr1D,EAAeZ,GAE1DzG,KAAK48D,gBAAgBp2D,EAAUk2D,EAAYr1D,EAAeZ,GAG9DzG,KAAK68D,eAAer2D,EAAUk2D,EAAYr1D,EAAeZ,IAKxE01D,EAAAj8D,UAAA28D,eAAA,SAAer2D,EACXk2D,EAAuBr1D,EAA8BZ,OAC/Cq2D,EAAe98D,KAAKo8D,eAAe9iD,qBAAqB9S,EAAUa,GAAe,EAAOZ,GAC9F,OAAO,IAAIU,SAASX,EAAUs2D,EAAc,KAAMr2D,EAC9Ci2D,EAAaA,EAAW7yD,KAAOmH,YAGvCmrD,EAAAj8D,UAAA08D,gBAAA,SAAgBp2D,EAA0Bk2D,EACtCr1D,EAA8BZ,OACxBq2D,EAAe98D,KAAKo8D,eAAe9iD,qBAAqB9S,EAAUa,GAAe,EAAOZ,GACxFq1D,EAAY,IAAIv0D,UAAUf,EAAUs2D,EAAc,KACpDr2D,EAAMi2D,EAAaA,EAAW7yD,KAAOmH,WAEzC,OADAhR,KAAK+8D,mBAAmBv2D,EAAUs1D,EAAYgB,GAAgBz1D,EAAgBZ,GACvEq1D,GAGXK,EAAAj8D,UAAAy8D,gBAAA,SAAgBn2D,EAA0Bk2D,EACtCr1D,EAA8BZ,GADlC,IAAArD,EAAApD,KAEU88D,EAAe98D,KAAKo8D,eAAe9iD,qBAAqB9S,EAAUa,GAAe,EAAOZ,GACxF6G,EAAY,IAAI1F,UAAUpB,EAAUs2D,EAAcz1D,EACpDrH,KAAMyG,EAAMi2D,EAAaA,EAAW7yD,KAAOmH,WAU/C,OATA1D,EAAUvF,gBAAkB/H,KAAKg9D,qBACjC1vD,EAAUpF,gBAAkBlI,KAAKi9D,qBAEjC3vD,EAAUnF,4BAA4B,SAACT,GAEnCsO,YAAYC,+BAAgC,EAC5C7S,EAAKk5D,wBAAwBlzD,wBAAwB1B,GACrDsO,YAAYC,+BAAgC,IAEzC3I,GAGX6uD,EAAAj8D,UAAA68D,mBAAA,SAAmBv2D,EAA0BkB,EACzCL,EAA8BZ,GADlC,IAAArD,EAAApD,KAMI,OAJAwG,EAAS2T,UAAUvV,QAAQ,SAAAuG,OACjB5B,EAAQnG,EAAKq5D,WAAWtxD,EAASzD,EAAML,EAAeZ,GAC5DiB,EAAKD,SAAS0D,EAAQrE,IAAKyC,KAExB7B,EAAKC,UAIhBw0D,EAAAj8D,UAAA88D,qBAAA,SAAqBx2D,EACjBkB,EAAiBw1D,GAED,OAAZA,GAAoBA,IAAYlsD,YAChCksD,EAAUl9D,UAERm9D,EACF,IAAI5K,cAAc,CACdzrD,IAAKY,EAAKmC,KAAO,IAAMnC,EAAKC,SAASxF,OACrCoG,KAAM,QAASgI,OAAQ/J,EAAS+J,OAAQE,MAAO,GAAI0J,UAAW3T,EAAS2T,YAG3E3T,EAASiT,cAAgBC,eAAexJ,OACxCitD,EAAc1jD,YAAcjT,EAASiT,iBAGnC2jD,EAAQF,EAAQN,gBAAgBO,EAAe,KAAM,KAAMz1D,EAAKjB,MAGtE,GAFAiB,EAAKC,SAAS5D,KAAKq5D,GAEf11D,EAAK7G,mBAAmBkP,aAAc,KAChCstD,EAAc31D,EAAY,QAChC21D,EAAYpjD,WAAWojD,EAAYxtD,SAAS1N,OAAQi7D,EAAMv8D,SAG9D,OAAOu8D,GAGXjB,EAAAj8D,UAAA+8D,qBAAA,SAAqBj2D,EAAeU,OAC1B41D,EAAe51D,EAAKC,SAASX,GAGnC,GADAU,EAAKC,SAASlD,OAAOuC,EAAO,IACP,OAAjBU,EAAK7G,SAAoB6G,EAAK7G,UAAYmQ,YACtCtJ,EAAK7G,mBAAmBkP,aAAc,KAChClP,EAAU6G,EAAY,QACtB61D,EAAuB18D,EAAQgP,SAAS7F,QAAQszD,EAAaz8D,SACvC,GAAxB08D,GACA18D,EAAQkG,SAASw2D,yBArIpCn9D,KAAAA,sDATQ8Y,0BACAs9C,uBAGA3tD,2BA+ITszD,EAzJA,GCGM3wD,SAASC,QAEf+xD,iBAAA,WAGI,SAAAA,KA2jBJ,OAvjBIA,EAAAt9D,UAAAu9D,wBAAA,SAAwB/1D,EAAgBg2D,GAAxC,IAAAt6D,EAAApD,KACUo7D,EAAQ,GAEd,IAAKp7D,KAAK29D,UAAUj2D,GAChB,OAAO0zD,EAGX,GAAI1zD,aAAgBP,UACfO,aAAgBH,WACiB,gBAA9BG,EAAKlB,SAAS+J,OAAOhI,KAQzB,OAPAuX,EAAAA,KAAO49C,EAAU,SAAChoD,GACVA,EAAK69C,SACL79C,EAAK69C,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,SAC3D6H,EAAMr3D,KAAK2R,KAIZ0lD,MAKLwC,EAAsB59D,KAAK69D,8BAA8Bn2D,GAa/D,OAZiC,EAA7Bk2D,EAAoBz7D,QACpB2d,EAAAA,KAAO49C,EAAU,SAACrI,GACVA,EAAI9B,SACJ8B,EAAI9B,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,SAC1DlyD,MAAMgM,QAAQgoD,EAAIO,eAClBxyD,EAAK06D,WAAWF,EACZx6D,EAAK26D,4BAA4B1I,KACrC+F,EAAMr3D,KAAKsxD,KAKhB+F,GAGXoC,EAAAt9D,UAAA29D,8BAAA,SAA8Bn2D,OACpB0zD,EAAQ,GAWd,OATI1zD,EAAKlB,SAAS+J,QAAU7I,EAAKlB,SAAS+J,OAAO4J,WAC7C2F,EAAAA,KAAOpY,EAAKlB,SAAS+J,OAAO4J,UAAW,SAAC3T,GAChCA,EAASswD,iBACTtwD,EAASswD,gBAAgBvD,SACzB6H,EAAMr3D,KAAKyC,EAASswD,gBAAgBvD,WAKzC6H,GAGXoC,EAAAt9D,UAAA69D,4BAAA,SAA4BC,OAClB5C,EAAQ,GASd,OAPI/5D,MAAMgM,QAAQ2wD,EAAoBpI,eAClC91C,EAAAA,KAAOk+C,EAAoBpI,aACvB,SAAC/E,GACGuK,EAAMr3D,KAAK8sD,EAAO0C,QAAQpnD,QAI/BivD,GAGXoC,EAAAt9D,UAAAy9D,UAAA,SAAUj2D,GACN,OAAOA,EAAKlB,SAAS+J,SACc,QAA9B7I,EAAKlB,SAAS+J,OAAOhI,MACY,aAA9Bb,EAAKlB,SAAS+J,OAAOhI,MACS,gBAA9Bb,EAAKlB,SAAS+J,OAAOhI,MACS,sBAA9Bb,EAAKlB,SAAS+J,OAAOhI,OAGjCi1D,EAAAt9D,UAAA49D,WAAA,SAAWG,EAA2BC,GAClC,OAA2B,IAAvBA,EAAY/7D,QAAyC,IAAzB87D,EAAc97D,QAGvC+7D,EAAY9hD,MAAM,SAACjR,GACtB,OAAyC,GAAlC8yD,EAAcj0D,QAAQmB,MAIrCqyD,EAAAt9D,UAAAi+D,sBAAA,SAAsBz2D,EAAgB2tD,GAClC,GAAI3tD,GAAqB,EAAb2tD,EAAIlzD,OAAY,KAClBi8D,EAAW/I,EAAI,GAGrB3tD,EAAK22D,aAAeD,GAEfp+D,KAAKqV,QAAQ+oD,EAASh8D,QAAUg8D,EAASh8D,MAAM+J,KAEhDnM,KAAKs+D,wBAAwB52D,EAAM02D,EAASh8D,MAAM+J,MAC1CnM,KAAKqV,QAAQ+oD,EAASh8D,QAC9BpC,KAAKs+D,wBAAwB52D,EAAM02D,EAASh8D,SAKxDo7D,EAAAt9D,UAAAq+D,2BAAA,SAA2B72D,EAAgB2tD,GACvC,GAAI3tD,GAAqB,EAAb2tD,EAAIlzD,OAAY,CACxBuF,EAAK22D,aAAehJ,MAEdmJ,EAAW,OACjB,IAAgB,IAAAC,EAAAhmB,SAAA4c,GAAGqJ,EAAAD,EAAA79D,QAAA89D,EAAAr8D,KAAAq8D,EAAAD,EAAA79D,OAAA,CAAd,IAAMkB,EAAC48D,EAAAt8D,MACRo8D,EAASz6D,KAAKjC,EAAEM,MAAM+J,2GAG1BnM,KAAKs+D,wBAAwB52D,EAAM82D,YAI3ChB,EAAAt9D,UAAAy+D,uBAAA,SAAuBj3D,EAAgB2tD,GACnC,GAAI3tD,GAAqB,EAAb2tD,EAAIlzD,OAAY,KACpBy8D,OAAU,EACV7E,OAAS,EAEP0B,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC+D,UAAlF8zD,EAAY9zD,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WACtE8E,EAAanD,EAAY9zD,SAAS9F,IAGiD,gBAAlF45D,EAAY9zD,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WACtEC,EAAY0B,EAAY9zD,SAAS9F,IAKzC7B,KAAK6+D,aAAaD,EAAYvJ,GAC9B3tD,EAAK22D,aAAeO,EAAWP,aAG/BtE,EAAUsE,aAAeO,EAAWP,aACpCr+D,KAAKs+D,wBAAwBvE,EAAW6E,EAAWP,aAAaS,eAIxEtB,EAAAt9D,UAAA6+D,qBAAA,SAAqBr3D,EAAgB2tD,GACjC,GAAI3tD,GAAqB,EAAb2tD,EAAIlzD,OAAY,KAClB25D,EAAS,EAGf,IAAK,IAAMj6D,KAFXi6D,EAAUuC,aAAehJ,EAAI,GAEbyG,EAAUn0D,SACtB3H,KAAK6+D,aAAa/C,EAAUn0D,SAAS9F,GAAIwzD,EAAI,GAAGO,gBAK5D4H,EAAAt9D,UAAA8+D,8BAAA,SAA8Bt3D,EAAgB2tD,GAC1C,GAAI3tD,GAAqB,EAAb2tD,EAAIlzD,OAAY,KAClBmL,EAAS,EACfA,EAAU+wD,aAAehJ,EAEzB,IAAK,IAAIpzD,EAAI,EAAGA,EAAIozD,EAAIlzD,OAAQF,IAAK,KAC3Bg9D,EAAc3xD,EAAUrG,kBAC9BjH,KAAK++D,qBAAqBE,EAAa,CAAC5J,EAAIpzD,QAKxDu7D,EAAAt9D,UAAA2+D,aAAA,SAAan3D,EAAgB2tD,GACzB,OAAQr1D,KAAKk/D,eAAex3D,IACxB,IAAK,UACD,GAAIA,aAAgBH,UAAW,KACrBu0D,EAAS,EAEf,IAAK,IAAMj6D,KAAKi6D,EAAUn0D,SACtB3H,KAAK6+D,aAAa/C,EAAUn0D,SAAS9F,GAAIwzD,GAE7C,MAEJ,GAAI3tD,aAAgBE,UAAW,CAE3B,QADM0F,EAAS,EACNrL,EAAI,EAAGA,EAAIqL,EAAU3F,SAASxF,OAAQF,IAC3CjC,KAAK6+D,aAAavxD,EAAU3F,SAAS1F,GAAIozD,GAE7C,MAEJ,MACJ,IAAK,aAEK8J,EAAen/D,KAAKy9D,wBAAwB/1D,EAAM2tD,GAGxDr1D,KAAKm+D,sBAAsBz2D,EAAMy3D,GACjC,MAEJ,IAAK,kBAEKC,EAAiBp/D,KAAKy9D,wBAAwB/1D,EAAM2tD,GAG1Dr1D,KAAKu+D,2BAA2B72D,EAAM03D,GACtC,MAGJ,IAAK,cAEKC,EAAar/D,KAAKy9D,wBAAwB/1D,EAAM2tD,GAGtDr1D,KAAK2+D,uBAAuBj3D,EAAM23D,GAClC,MAEJ,IAAK,YACKC,EAAWt/D,KAAKy9D,wBAAwB/1D,EAAM2tD,GAE9B,EAAlBiK,EAASn9D,QACTnC,KAAK++D,qBAAqBr3D,EAAM43D,GAGpC,MACJ,IAAK,qBACKC,EAAoBv/D,KAAKy9D,wBAAwB/1D,EAAM2tD,GAE9B,EAA3BkK,EAAkBp9D,QAClBnC,KAAKg/D,8BAA8Bt3D,EAAM63D,GAG7C,MACJ,QACIxyD,QAAQpM,MAAM,mBAAoB+G,KAK9C81D,EAAAt9D,UAAAo+D,wBAAA,SAAwB52D,EAAgBtF,GACpCsF,EAAK7G,QAAQ+N,SAASxM,GAKlBsF,EAAKlB,SAASqK,uBAAyBnJ,EAAK22D,eAAiBrtD,WAC7DtJ,EAAKlB,SAASmK,oBAAmB,IAIzC6sD,EAAAt9D,UAAAg/D,eAAA,SAAex3D,GACX,OAAI1H,KAAK29D,UAAUj2D,GACXA,aAAgBP,WACqC,kBAAnDO,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WACY,aAAnDrrD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WACc,iBAAnDrrD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WAC9B,cAGPrrD,aAAgBP,SACT,SAGPO,aAAgBH,WACc,gBAA9BG,EAAKlB,SAAS+J,OAAOhI,KACd,UAGPb,aAAgBE,WACc,aAA9BF,EAAKlB,SAAS+J,OAAOhI,MAC8B,cAAnDb,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,UAC9B,iBAGPrrD,aAAgBH,WACc,aAA9BG,EAAKlB,SAAS+J,OAAOhI,KACd,QAGJ,aAEJ,WAIXi1D,EAAAt9D,UAAAs/D,oBAAA,SAAoB93D,GAEhB,GAAI1H,KAAKqV,QAAQ3N,EAAK7G,QAAQuB,OAC1B,OAAIsF,EAAK22D,aAEE,CACHlyD,KAAMzE,EAAK22D,aAAalyD,KACxBszD,QAAQ,GAGT,KAIX,GAAI/3D,EAAK22D,eAAiBr+D,KAAK0/D,uBAAuBh4D,GAClD,OAAO,SAKL2tD,EAAW,CACb9B,QAAS7rD,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,QAC9CnxD,MAAOsF,EAAK7G,QAAQuB,OAcxB,MAVuD,SAAnDsF,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,YACrCsC,EAAIjzD,MAAQpC,KAAK2/D,wBAAwBj4D,EAAK7G,QAAQuB,QAGtDsF,EAAK22D,sBAEEhJ,EAAI9B,QACX8B,EAAIlpD,KAAOzE,EAAK22D,aAAalyD,MAG1BkpD,GAGXmI,EAAAt9D,UAAA0/D,qBAAA,SAAqBl4D,OACbk3D,EACA7E,EAEE0B,EAAW,EAEjB,IAAK,IAAM55D,KAAK45D,EAAY9zD,SAC+D,UAAlF8zD,EAAY9zD,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WACtE8E,EAAanD,EAAY9zD,SAAS9F,IAGiD,gBAAlF45D,EAAY9zD,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WACtEC,EAAY0B,EAAY9zD,SAAS9F,QAInCg+D,EAAe7/D,KAAK8/D,kBAAkBlB,GAI5C,GAHA7xD,QAAQiO,IAAI,eAAgB6kD,GAGF,EAAtBA,EAAa19D,OAEb,OADA09D,EAAa,GAAGf,YAAc9+D,KAAK2/D,wBAAwB5F,EAAUl5D,QAAQuB,OACtEy9D,EAAa,GACjB,GAA4B,IAAxBA,EAAa19D,SAAgBuF,EAAK22D,cAEpCr+D,KAAK+/D,cAAcr4D,EAAK22D,aAAaS,YAAa/E,EAAUl5D,QAAQuB,OAQ7E,OAAO,SAPO49D,EAAe,CACjB7zD,KAAMzE,EAAK22D,aAAalyD,MAG5B,OADA6zD,EAAQlB,YAAc9+D,KAAK2/D,wBAAwB5F,EAAUl5D,QAAQuB,OAC9D49D,GAMnBxC,EAAAt9D,UAAA+/D,yBAAA,SAAyBv4D,OACfs4D,EAAsB,GAEtBE,EAAgB,GAmCtB,OAhCI7+D,MAAMgM,QAAQ3F,EAAK22D,eACnBv+C,EAAAA,KAAOpY,EAAK22D,aAAc,SAAC3oD,GACvBwqD,EAAcn8D,KAAK2R,EAAKtT,MAAM+J,MAC1B9K,MAAMgM,QAAQ3F,EAAK7G,QAAQuB,OACvBsF,EAAK7G,QAAQuB,MAAM4H,QAAQ0L,EAAKtT,MAAM+J,MAAQ,GAC9C6zD,EAAQj8D,KAAK,CACToI,KAAMuJ,EAAKvJ,KACXszD,QAAQ,IAKhBO,EAAQj8D,KAAK,CACToI,KAAMuJ,EAAKvJ,KACXszD,QAAQ,MAOpBp+D,MAAMgM,QAAQ3F,EAAK7G,QAAQuB,QAC3B0d,EAAAA,KAAOpY,EAAK7G,QAAQuB,MAAO,SAACsT,GACpBwqD,EAAcl2D,QAAQ0L,GAAQ,GAC9BsqD,EAAQj8D,KAAK,CACTwvD,QAAS7rD,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,QAC9CnxD,MAAOsT,MAMhBsqD,GAGXxC,EAAAt9D,UAAAigE,gBAAA,SAAgBz4D,GAAhB,IAAAtE,EAAApD,KACUy7D,EAAW,EAEb2E,EAAkB,GAQtB,GAPAtgD,EAAAA,KAAO27C,EAAY9zD,SAAU,SAAC4B,OACpBy2D,EAAU58D,EAAK08D,kBAAkBv2D,GAClB,EAAjBy2D,EAAQ79D,SACRi+D,EAAkBA,EAAgB1yD,OAAOsyD,MAIlB,IAA3BI,EAAgBj+D,OAChB,OAAO,SAGLk+D,EAAoB,CACtBzK,aAAcwK,GAUlB,OAPI3E,EAAY4C,aACZgC,EAAal0D,KAAOsvD,EAAY4C,aAAalyD,KAG7Ck0D,EAAa9M,QAAUkI,EAAYj1D,SAAS+J,OAAOumD,gBAAgBvD,QAGhE8M,GAGX7C,EAAAt9D,UAAAogE,yBAAA,SAAyB54D,GAAzB,IAAAtE,EAAApD,KACUugE,EAAW,EAEbH,EAAkB,GAEhBI,EAA2B,GAyBjC,OAxBA1gD,EAAAA,KAAOygD,EAAY54D,SAAU,SAAC4B,OACpBy2D,EAAU58D,EAAK08D,kBAAkBv2D,GAClB,EAAjBy2D,EAAQ79D,SACRi+D,EAAkBA,EAAgB1yD,OAAOsyD,IAEzCz2D,EAAM80D,cAAgB90D,EAAM80D,aAAalyD,MACzCq0D,EAAyBz8D,KAAKwF,EAAM80D,aAAalyD,QAMrDo0D,EAAYlC,cAAgBh9D,MAAMgM,QAAQkzD,EAAYlC,eACtDv+C,EAAAA,KAAOygD,EAAYlC,aAAc,SAAChJ,GAC9B,GAAImL,EAAyBx2D,QAAQqrD,EAAIlpD,MAAQ,EAAG,KAC1Cs0D,EAAc,CAChBt0D,KAAMkpD,EAAIlpD,KACVszD,QAAQ,GAEZW,EAAgBr8D,KAAK08D,MAK7BL,EAAgBj+D,QAAU,EACnB,KAEJi+D,GAIX5C,EAAAt9D,UAAA4/D,kBAAA,SAAkBp4D,OACVs4D,EAAU,GAEd,OAAQhgE,KAAKk/D,eAAex3D,IACxB,IAAK,UACD,GAAIA,aAAgBH,UAAW,KACrBu0D,EAAS,EAEf,IAAK,IAAMj6D,KAAKi6D,EAAUn0D,SAAU,KAC1B+4D,EAAkB1gE,KAAK8/D,kBAAkBhE,EAAUn0D,SAAS9F,IAC9DR,MAAMgM,QAAQqzD,IAA6C,EAAzBA,EAAgBv+D,SAClD69D,EAAUA,EAAQtyD,OAAOgzD,IAGjC,MAEJ,GAAIh5D,aAAgBE,UAAW,CAE3B,QADM0F,EAAS,EACNrL,EAAI,EAAGA,EAAIqL,EAAU3F,SAASxF,OAAQF,IAAK,KAC1C0+D,EAAmB3gE,KAAK8/D,kBAAkBxyD,EAAU3F,SAAS1F,IAC/DZ,MAAMgM,QAAQszD,IAA+C,EAA1BA,EAAiBx+D,SACpD69D,EAAUA,EAAQtyD,OAAOizD,IAGjC,MAEJ,MACJ,IAAK,aACKC,EAAY5gE,KAAKw/D,oBAAoB93D,GACzB,OAAdk5D,GACAZ,EAAQj8D,KAAK68D,GAEjB,MAEJ,IAAK,kBACKxB,EAAiBp/D,KAAKigE,yBAAyBv4D,GAEjDrG,MAAMgM,QAAQ+xD,IAA2C,EAAxBA,EAAej9D,SAChD69D,EAAUA,EAAQtyD,OAAO0xD,IAE7B,MAEJ,IAAK,cACKC,EAAar/D,KAAK4/D,qBAAqBl4D,GAC1B,OAAf23D,GACAW,EAAQj8D,KAAKs7D,GAEjB,MAEJ,IAAK,YACKwB,EAAa7gE,KAAKmgE,gBAAgBz4D,GACpCm5D,GAA6B,OAAfA,GACdb,EAAQj8D,KAAK88D,GAEjB,MACJ,IAAK,qBACKC,EAAsB9gE,KAAKsgE,yBAAyB54D,GACtDrG,MAAMgM,QAAQyzD,IAAqD,EAA7BA,EAAoB3+D,SAC1D69D,EAAUA,EAAQtyD,OAAOozD,IAOrC,OAAOd,GAGXxC,EAAAt9D,UAAAw/D,uBAAA,SAAuBh4D,GACnB,QAAIA,EAAK22D,eACD32D,EAAK22D,aAAaj8D,OAASsF,EAAK22D,aAAaj8D,MAAM+J,KAE5CzE,EAAK7G,QAAQuB,QAAUsF,EAAK22D,aAAaj8D,MAAM+J,KAGH,SAAnDzE,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WAC7B/yD,KAAK+/D,cAAcr4D,EAAK7G,QAAQuB,MAAOsF,EAAK22D,aAAaj8D,OAE9DsF,EAAK7G,QAAQuB,QAAUsF,EAAK22D,aAAaj8D,QAKxDo7D,EAAAt9D,UAAA6/D,cAAA,SAAcgB,EAAOC,GACjB,OAAOx1D,SAAOu1D,GAAOE,OAAOD,IAGhCxD,EAAAt9D,UAAAmV,QAAA,SAAQjT,GACJ,MAAc,KAAVA,GACU,OAAVA,GACAA,IAAU4O,WASlBwsD,EAAAt9D,UAAAy/D,wBAAA,SAAwBuB,GACpB,GAAIlhE,KAAKqV,QAAQ6rD,GACb,OAAOlwD,cAIDhM,EADewG,SAAO01D,GAAUtrD,SACb9L,UAAU,EAAG,IAAI0K,QAAQ,IAAK,KACvD,OAAOxU,KAAKqV,QAAQrQ,GAAOgM,UAAYhM,GAKnDw4D,EA9jBA,8BCQI,SAAA2D,EAAoBt1D,GAAA7L,KAAA6L,OAAAA,EAyfxB,OAvfIs1D,EAAAjhE,UAAAkhE,oBAAA,SAAoB36D,GAChB,OAAOzG,KAAK6L,OAAOi0D,kBAAkBr5D,EAAKsC,WAU9Co4D,EAAAjhE,UAAAmhE,aAAA,SAAa56D,EAAYu5D,GACrBhgE,KAAK6L,OAAOgzD,aAAap4D,EAAKsC,SAAUi3D,IAc5CmB,EAAAjhE,UAAAohE,UAAA,SAAUj3D,EAAO21D,EAAUuB,GACvB,GAAIl3D,EAAO,gBACI3C,GACP,GAAIA,aAAgBP,SAChBgD,EAAKq3D,YAAY95D,EAAMs4D,GACnBt4D,EAAKlB,SAASqK,uBAAyBnJ,EAAK22D,eAAiBrtD,WAC7DtJ,EAAKlB,SAASmK,oBAAmB,QAGlC,GAAIjJ,EAAKlB,UAAYkB,EAAKlB,SAAS+J,QAA0C,UAAhC7I,EAAKlB,SAASgK,eAA6B+wD,EAAY,KACjGjC,EAAWmC,EAAAA,KAAOzB,EAAS,SAACn+D,GAC9B,OAAOA,EAAE0xD,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,SAAW1xD,EAAE+zD,eAE5E0J,IACI53D,EAAKA,OACLA,EAAKA,KAAmB,aAAI43D,GAGhCn1D,EAAKm3D,UAAU55D,EAAKkuD,aAAc0J,EAAS1J,eAE3C2L,GAAc75D,EAAKs4D,SACnB71D,EAAKm3D,UAAU55D,EAAKkuD,aAAcluD,EAAKs4D,QAAQpK,mBAIhD,GAAIluD,aAAgBH,WAA2C,gBAA9BG,EAAKlB,SAAS+J,OAAOhI,KACzD4B,EAAKu3D,mBAAmBh6D,EAAMs4D,OAC3B,CAAA,IAAIt4D,EAAKlB,WAAYkB,EAAKlB,SAAS+J,QAA0C,cAAhC7I,EAAKlB,SAASgK,eAAkC+wD,EAIhG,MAAM,IAAIzrD,MAAM,mBAHhB3L,EAAKw3D,wBAAwBj6D,EAAMs4D,GACnCt4D,EAAKA,KAAK7G,QAAQmC,sCA3B1B,IAAmB,IAAA4+D,EAAAnpB,SAAApuC,GAAKw3D,EAAAD,EAAAhhE,QAAAihE,EAAAx/D,KAAAw/D,EAAAD,EAAAhhE,OAAA,GAATihE,EAAAz/D,sHAmCvB++D,EAAAjhE,UAAAshE,YAAA,SAAY95D,EAAMs4D,GACd,GAAIt4D,EAAKlB,UAAYkB,EAAKlB,SAAS+J,SACA,QAA9B7I,EAAKlB,SAAS+J,OAAOhI,MACS,sBAA9Bb,EAAKlB,SAAS+J,OAAOhI,MAC4B,UAAlDb,EAAKlB,SAAS+J,OAAOumD,gBAAgBgD,WACc,kBAAnDpyD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WACc,aAAnDrrD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,WACc,iBAAnDrrD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,UAA8B,KAC7DsC,EAAMoM,EAAAA,KAAOzB,EAAS,SAACn+D,GACzB,OAAOA,EAAE0xD,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,UAE/D8B,IACIA,EAAIjzD,iBAAiBlB,OACrBwG,EAAK7G,QAAQ+N,SAASymD,EAAIjzD,MAAM+J,MAGhCzE,EAAK7G,QAAQ+N,SAASymD,EAAIjzD,OAF1BsF,EAAK7G,QAAQmC,yBAKjB0E,EAAmB,aAAI,CAAEo6D,QAASzM,EAAIlpD,KAAM/J,MAAOizD,EAAIjzD,YAExD,KACG2/D,EAAWltD,EAAAA,OAASmrD,EAAS,SAACn+D,GAChC,OAAOA,EAAE0xD,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,UAE/DwO,GAA8B,EAAlBA,EAAS5/D,SACrBuF,EAAK7G,QAAQ+N,SAAS5O,KAAKgiE,qBAAqBD,IAChDr6D,EAAK7G,QAAQmC,yBACb0E,EAAmB,aAAIq6D,KAKnCZ,EAAAjhE,UAAAwhE,mBAAA,SAAmBh6D,EAAMs4D,OACjBpB,EACA7E,EAGJ,IAAK,IAAMl4D,KAAK6F,EAAKC,SAC+D,UAA3ED,EAAKC,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WAC/D8E,EAAal3D,EAAKC,SAAS9F,IAGiD,gBAA3E6F,EAAKC,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WAC/DC,EAAYryD,EAAKC,SAAS9F,IAIlC7B,KAAKwhE,YAAY5C,EAAYoB,OAGvB3K,EAAMoM,EAAAA,KAAOzB,EAAS,SAACn+D,GACzB,OAAOA,EAAE0xD,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,UAG/D8B,IACA0E,EAAwB,aAAI,CAAE+H,QAASzM,EAAIlpD,KAAM/J,MAAOizD,EAAIyJ,aAC5D,EAAwBj+D,QAAQ+N,SAASymD,EAAIyJ,aAC7C,EAAwBj+D,QAAQmC,2BAIxCm+D,EAAAjhE,UAAA8hE,qBAAA,SAAqBD,WACXj0D,EAAS,OACf,IAAgB,IAAAm0D,EAAAxpB,SAAAspB,GAAQG,EAAAD,EAAArhE,QAAAshE,EAAA7/D,KAAA6/D,EAAAD,EAAArhE,OAAA,CAAnB,IAAMkB,EAACogE,EAAA9/D,MACR0L,EAAO/J,KAAKjC,EAAEM,MAAM+J,2GAExB,OAAO2B,GAGXqzD,EAAAjhE,UAAAyhE,wBAAA,SAAwBj6D,EAAMs4D,OACpBmC,EAAoBttD,EAAAA,OAASmrD,EAAS,SAACn+D,OACnCu5D,EAAQv5D,EAAE0xD,QAAQpnD,OAASzE,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,QAClE6O,GAAY,EAChB,GAAIhH,GAASv5D,EAAE+zD,aAAc,KACnBP,EAAMxzD,EAAE+zD,aAAa7hD,IAAI,SAAC2M,GAC5B,OAAOA,EAAE6yC,QAAQpnD,OAGfk2D,EAAkB36D,EAAKlB,SAAS2T,UAAUpG,IAAI,SAAC2M,GACjD,OAAOA,EAAEnQ,OAAOumD,gBAAgBvD,UAGpC6O,EAA2D,EAA9CE,EAAAA,aAAejN,EAAKgN,GAAiBlgE,OAEtD,OAAOi5D,GAASgH,IAEpB,GAA+B,EAA3BD,EAAkBhgE,OAAY,CAC9BuF,EAAKA,KAAmB,aAAIy6D,EAC5B,IAAK,IAAIlgE,EAAI,EAAGA,EAAIkgE,EAAkBhgE,OAAQF,IAC1CyF,EAAKA,KAAKT,0BAGZs7D,EAAS,GACXv7D,EAAQ,aACDuC,OACD5B,EAAWzG,OAAO4L,KAAKvD,EAAM5B,UAAUoM,IAAI,SAAUjN,GAAO,OAAOyC,EAAM5B,SAASb,KAClFu5D,EAAe8B,EAAkBn7D,GACvCu7D,EAAOx+D,KAAK,CAAEyC,SAAUkB,EAAKlB,SAAUovD,aAAcjuD,EAAUq4D,QAASK,IACxEr5D,SAJJ,IAAoB,IAAAwxC,EAAAC,SAAA/wC,EAAKA,KAAKC,UAAQ+wC,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,GAAtB83C,EAAAt2C,4GAMhBpC,KAAKshE,UAAUiB,EAAQJ,GAAmB,IAG9ChB,EAAAjhE,UAAAsiE,iBAAA,SAAiBrT,eAEPsT,EAAS,OACf,IAAmB,IAAAC,EAAAjqB,SAAA0W,GAAKwT,EAAAD,EAAA9hE,QAAA+hE,EAAAtgE,KAAAsgE,EAAAD,EAAA9hE,OAAA,CAAnB,IAAMwuD,EAAIuT,EAAAvgE,UACX,IAAsB,IAAAo2C,EAAAC,SAAA2W,EAAKA,MAAI1W,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,CAA1B,IAAM8c,EAAOg7B,EAAAt2C,MACdqgE,EAAO1+D,KAAK2Z,EAAQA,oNAG5B,MAPe,GAODhQ,OAAOwoD,MAAM,GAAIuM,IAGnCtB,EAAAjhE,UAAA0iE,eAAA,SAAev4D,WACL4uD,EAAW,OACjB,IAAmB,IAAA4J,EAAApqB,SAAApuC,GAAKy4D,EAAAD,EAAAjiE,QAAAkiE,EAAAzgE,KAAAygE,EAAAD,EAAAjiE,OAAA,CAAnB,IAAM8G,EAAIo7D,EAAA1gE,MACX62D,EAASl1D,KAAK,CAAEyC,SAAUkB,EAAKlB,SAAUovD,aAAc51D,KAAK+iE,SAASr7D,0GAEzE,OAAOuxD,GAGXkI,EAAAjhE,UAAA8iE,aAAA,SAAa3N,EAAK4N,GACd,GAAI5N,EAAI7uD,UAAY6uD,EAAI7uD,SAAS+J,QAA4D,UAAlD8kD,EAAI7uD,SAAS+J,OAAOumD,gBAAgB/D,UAAuB,KAC5Fx9C,EAAUV,EAAAA,OAAS7U,KAAKkjE,cAAc7N,EAAIO,cAAe,SAAC/zD,GAC5D,MAAmB,KAAZA,EAAEO,QAGP+gE,EAAgB5tD,EAAQxB,IAAI,SAAC2M,GAC/B,OAAOA,EAAE++C,SAEQ,EAAjBlqD,EAAQpT,QAAcghE,EAAc/mD,MAAMgnD,SAC1CH,EAAWl/D,KAAK,CACZoI,KAAMkpD,EAAI3tD,KAAK22D,aAAalyD,KAC5BszD,QAAQ,IAEY,EAAjBlqD,EAAQpT,SACXkzD,EAAI3tD,KAAK22D,aACT4E,EAAWl/D,KAAK,CACZoI,KAAMkpD,EAAI3tD,KAAK22D,aAAalyD,KAC5BypD,aAAcrgD,IAGlB0tD,EAAWl/D,KAAK,CACZwvD,QAAS8B,EAAI7uD,SAAS+J,OAAOumD,gBAAgBvD,QAC7CqC,aAAcrgD,OAOlC4rD,EAAAjhE,UAAAmjE,gBAAA,SAAgBjG,WACRkG,EAAU,OACd,IAAqB,IAAA9qB,EAAAC,SAAA2kB,EAAMxH,cAAYld,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,CAAlC,IAAMiwD,EAAMnY,EAAAt2C,MACTA,EAAa,GACbyuD,EAAOzuD,iBAAiBlB,OACxBkB,EAAQyuD,EAAOzuD,MAAM+J,KACd0kD,EAAOzuD,MACdA,EAAQyuD,EAAOzuD,MACRyuD,EAAO+E,cAA6C,EAA7B/E,EAAO+E,aAAazzD,SAClDmhE,EAAUtjE,KAAKqjE,gBAAgBjG,IAEnCkG,EAAQzS,EAAO0C,QAAQpnD,KAAO,IAAM/J,GAASA,uGAEjD,OAAOkhE,GAGXnC,EAAAjhE,UAAAqjE,cAAA,SAAc77D,EAAMtF,OACVkhE,EAAU,GAChB,IAAK,IAAMx8D,KAAO1E,EACd,GAAIA,EAAMb,eAAeuF,GAAM,KACrBq2D,EAAqBsE,EAAAA,KAAO/5D,EAAKlB,SAAS2T,UAAW,CAAErT,IAAKA,IAC5D4jD,EAAatoD,EAAM0E,GACrB4jD,aAAsBxpD,QACA,KAAfwpD,IACP4Y,EAAQnG,EAAc5sD,OAAOumD,gBAAgBvD,QAAU,IACjD7I,GAAcA,GAKhC,OAAO4Y,GAGXnC,EAAAjhE,UAAAsjE,uBAAA,SAAuB97D,EAAMu7D,OACnBQ,EAAgB,GACtB,GAAI/7D,EAAKA,KAAK22D,iBACV,IAAoB,IAAA7lB,EAAAC,SAAA/wC,EAAKA,KAAK22D,cAAY3lB,EAAAF,EAAA53C,QAAA83C,EAAAr2C,KAAAq2C,EAAAF,EAAA53C,OAAA,CAArC,IAAMw8D,EAAK1kB,EAAAt2C,MACZqhE,EAAc1/D,KAAK,CAAEoI,KAAMixD,EAAMjxD,KAAM/J,MAAOpC,KAAKqjE,gBAAgBjG,8GAGrEsG,EAAiB,OACvB,IAAoB,IAAAC,EAAAlrB,SAAA/wC,EAAKA,KAAK7G,QAAQuB,OAAKwhE,EAAAD,EAAA/iE,QAAAgjE,EAAAvhE,KAAAuhE,EAAAD,EAAA/iE,OAAA,CAAtC,IAAMwB,EAAKwhE,EAAAxhE,MACZshE,EAAe3/D,KAAK,CAAE3B,MAAOpC,KAAKujE,cAAc77D,EAAMtF,8HAEpDyhE,EAAU7jE,KAAK8jE,oBAAoBL,EAAeC,GAClDK,EAAS/jE,KAAK8jE,oBAAoBJ,EAAgBD,GAClDO,EAAet8D,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,QACtD0Q,EAAgB,GACpB,GAAqB,EAAjBJ,EAAQ1hE,OAAY,KACd+hE,EAAalkE,KAAKmkE,sBAAsBN,OAC9C,IAAgB,IAAAO,EAAA3rB,SAAAyrB,GAAUG,EAAAD,EAAAxjE,QAAAyjE,EAAAhiE,KAAAgiE,EAAAD,EAAAxjE,OAAA,CAArB,IAAMI,EAACqjE,EAAAjiE,MACR6gE,EAAWl/D,KAAK/C,wGAEA,EAAhB+iE,EAAO5hE,SACP8hE,EAAgBjkE,KAAKskE,kBAAkBP,EAAQC,SAGnDC,EAAgBjkE,KAAKskE,kBAAkBP,EAAQC,GAGnD,GAA2B,EAAvBC,EAAc9hE,WACd,IAAgB,IAAAoiE,EAAA9rB,SAAAwrB,GAAaO,EAAAD,EAAA3jE,QAAA4jE,EAAAniE,KAAAmiE,EAAAD,EAAA3jE,OAAA,CAAxB,IAAMU,EAACkjE,EAAApiE,MACR6gE,EAAWl/D,KAAKzC,0GAK5B6/D,EAAAjhE,UAAA4jE,oBAAA,SAAoBW,EAAOC,GAMvB,OALeD,EAAM7tB,OAAO,SAAU3oC,GAClC,OAAQy2D,EAAOpsB,KAAK,SAAUqsB,GAC1B,OAAOC,EAAAA,QAAU32D,EAAI7L,MAAOuiE,EAAKviE,YAM7C++D,EAAAjhE,UAAAokE,kBAAA,SAAkBtE,EAASgE,WACjBa,EAAa,OACnB,IAAkB,IAAAC,EAAArsB,SAAAunB,GAAO+E,EAAAD,EAAAlkE,QAAAmkE,EAAA1iE,KAAA0iE,EAAAD,EAAAlkE,OAAA,CAApB,IAAMy0D,EAAG0P,EAAA3iE,MACJi+D,EAAe,GAErB,IAAK,IAAIv5D,KAAOuuD,EAAIjzD,MAAO,KACnBmxD,EAAUzsD,EAAIwW,MAAM,KAAK,GACzBlb,EAAQ0E,EAAIwW,MAAM,KAAK,GAC3B+iD,EAAat8D,KAAK,CAAEwvD,QAASA,EAASnxD,MAAOA,IAEjDyiE,EAAW9gE,KAAK,CAAEwvD,QAASyQ,EAAcpO,aAAcyK,yGAG3D,OAAOwE,GAGX1D,EAAAjhE,UAAAikE,sBAAA,SAAsBnE,WACZkE,EAAa,OACnB,IAAgB,IAAAc,EAAAvsB,SAAAunB,GAAOiF,EAAAD,EAAApkE,QAAAqkE,EAAA5iE,KAAA4iE,EAAAD,EAAApkE,OAAA,CAAlB,IAAMI,EAACikE,EAAA7iE,MACR8hE,EAAWngE,KAAK,CAAEoI,KAAMnL,EAAEmL,KAAMszD,QAAQ,yGAE5C,OAAOyE,GAGX/C,EAAAjhE,UAAAglE,aAAA,SAAahE,GACT,OAAOA,EAASp3D,UAAU,EAAG,IAAI0K,QAAQ,IAAK,MAGlD2sD,EAAAjhE,UAAAilE,WAAA,SAAW9P,EAAK4N,GACZ,GAAI5N,EAAIx0D,SAAWw0D,EAAI7uD,SAAS+J,OAAQ,KAC9B60D,EAAW,CACb7R,QAAS8B,EAAI7uD,SAAS+J,OAAOumD,gBAAgBvD,QAC7CnxD,MAA0D,SAAlDizD,EAAI7uD,SAAS+J,OAAOumD,gBAAgB/D,WAAyB/yD,KAAKqV,QAAQggD,EAAIx0D,QAAQuB,OACnDizD,EAAIx0D,QAAQuB,MAAnDpC,KAAKklE,aAAa7P,EAAIx0D,QAAQuB,QAGtC,GAAsD,kBAAlDizD,EAAI7uD,SAAS+J,OAAOumD,gBAAgB/D,WACU,aAAlDsC,EAAI7uD,SAAS+J,OAAOumD,gBAAgB/D,WACc,iBAAlDsC,EAAI7uD,SAAS+J,OAAOumD,gBAAgB/D,UAA8B,KACxDsS,EAASrlE,KAAKslE,mBAAmBjQ,EAAI7uD,SAAS+J,OAAOumD,gBAAgBvD,QAAS8B,EAAIx0D,QAAQuB,OAChG,GAAIizD,EAAIgJ,aAAc,KACZkH,EAAgBlQ,EAAIgJ,aAAatqD,IAAI,SAAC2M,GACxC,MAAO,CAAEvU,KAAMuU,EAAEvU,KAAM/J,MAAO,CAAEmxD,QAAS7yC,EAAE6yC,QAAQpnD,KAAM/J,MAAOse,EAAEte,MAAM+J,SAEtEq5D,EAAgBH,EAAOtxD,IAAI,SAAC2M,GAC9B,MAAO,CAAEte,MAAOse,KAEdwjD,EAAalkE,KAAK8jE,oBAAoByB,EAAeC,GACrDzB,EAAS/jE,KAAK8jE,oBAAoB0B,EAAeD,GACvDvlE,KAAKylE,6BAA6BvB,EAAYjB,GAC9CjjE,KAAK0lE,yBAAyB3B,EAAQd,QAEtCjjE,KAAK0lE,yBAAyBL,EAAQpC,QAGtC5N,EAAIgJ,cAAgBhJ,EAAIgJ,aAAaj8D,OAASgjE,EAC9CplE,KAAK2lE,gBAAgBP,EAAU/P,EAAIgJ,aAAc4E,GACvB,KAAnBmC,EAAShjE,OAAmC,OAAnBgjE,EAAShjE,OACzC6gE,EAAWl/D,KAAKqhE,KAMhCjE,EAAAjhE,UAAA0lE,kBAAA,SAAkBl+D,EAAMu7D,OAChBrE,EACA7E,EAGJ,IAAK,IAAMl4D,KAAK6F,EAAKC,SAC+D,UAA3ED,EAAKC,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WAC/D8E,EAAal3D,EAAKC,SAAS9F,IAGiD,gBAA3E6F,EAAKC,SAAS9F,GAAgB2E,SAAS+J,OAAOumD,gBAAgBgD,WAC/DC,EAAYryD,EAAKC,SAAS9F,IAIlC,GAAI+8D,EAAY,CAEZ5+D,KAAKmlE,WAAWvG,EAAYqE,OAGtB4C,EAAqC,EAApB5C,EAAW9gE,OAAa8gE,EAAWA,EAAW9gE,OAAS,GAAK6O,UAC/E60D,IACEA,EAAetS,SAAWsS,EAAetS,UAAY7rD,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,SACvFqL,EAAWP,cAAgBwH,EAAe15D,OAASyyD,EAAWP,aAAayD,UAC5E/H,EAAUsE,cAAgBtE,EAAUl5D,QAAQuB,QAAU23D,EAAUsE,aAAaj8D,QAC7EyjE,EAAe/G,YAAc/E,EAAUl5D,QAAQuB,SAM/D++D,EAAAjhE,UAAAulE,6BAAA,SAA6B33D,EAAQm1D,OACjC,IAAoB,IAAA6C,EAAArtB,SAAA3qC,GAAMi4D,EAAAD,EAAAllE,QAAAmlE,EAAA1jE,KAAA0jE,EAAAD,EAAAllE,OAAA,CAArB,IAAMwB,EAAK2jE,EAAA3jE,MACZ6gE,EAAWl/D,KAAK,CAAEoI,KAAM/J,EAAM+J,KAAMszD,QAAQ,kHAIpD0B,EAAAjhE,UAAAwlE,yBAAA,SAAyB53D,EAAQm1D,OAC7B,IAAoB,IAAA+C,EAAAvtB,SAAA3qC,GAAMm4D,EAAAD,EAAAplE,QAAAqlE,EAAA5jE,KAAA4jE,EAAAD,EAAAplE,OAAA,CAArB,IAAMq4C,EAAKgtB,EAAA7jE,MACR62C,EAAM72C,iBAAiBlB,OACvB+hE,EAAWl/D,KAAKk1C,EAAM72C,OAEtB6gE,EAAWl/D,KAAKk1C,iHAK5BkoB,EAAAjhE,UAAAylE,gBAAA,SAAgBP,EAAU/G,EAAc4E,GAChCjjE,KAAKqV,QAAQ+vD,EAAShjE,QAAUi8D,EAAaj8D,MAC7C6gE,EAAWl/D,KAAK,CAAEoI,KAAMkyD,EAAayD,QAASrC,QAAQ,KAC9Cz/D,KAAKqV,QAAQ+vD,EAAShjE,QAAUi8D,EAAaj8D,OACrD6gE,EAAWl/D,KAAK,CAAEoI,KAAMkyD,EAAayD,QAAS1/D,MAAOgjE,EAAShjE,SAItE++D,EAAAjhE,UAAAmV,QAAA,SAAQjT,GACJ,MAAc,KAAVA,GACU,OAAVA,GACAA,IAAU4O,WASlBmwD,EAAAjhE,UAAA6iE,SAAA,SAASlhE,EAAG0G,OACF4R,EAAY,GAClB,GAAItY,EAAE8F,SAAU,CACZ,GAAI9F,EAAE8F,oBAAoBtG,MAEtB,OADiBrB,KAAK4iE,eAAe/gE,EAAE8F,UAG3C,GAAI9F,EAAE8F,oBAAoBzG,OACtB,IAAK,IAAM4F,KAAOjF,EAAE8F,SAChB,GAAI9F,EAAE8F,SAASpG,eAAeuF,GAC1B,OAAQjF,EAAE8F,SAASb,GAAKN,SAASgK,eAC7B,IAAK,WACK4+C,EAAOpvD,KAAK+iE,SAASlhE,EAAE8F,SAASb,IACtCqT,EAAUpW,KAAK,CAAEqrD,KAAMA,IACvB,MACJ,IAAK,cACK1xC,EAAU1d,KAAK+iE,SAASlhE,EAAE8F,SAASb,IACzCqT,EAAUpW,KAAK,CAAE2Z,QAASA,IAC1B,MACJ,IAAK,YACKwoD,EAAKlmE,KAAK+iE,SAASlhE,EAAE8F,SAASb,IACpCqT,EAAUpW,KAAK,CAAE2D,KAAM7F,EAAE8F,SAASb,GAAMN,SAAU3E,EAAE8F,SAASb,GAAKN,SAAUovD,aAAcsQ,IAC1F,MACJ,IAAK,gBACKC,EAAMnmE,KAAK4iE,eAAe/gE,EAAE8F,SAASb,GAAKa,UAChDwS,EAAUpW,KAAK,CAAE2D,KAAM7F,EAAE8F,SAASb,GAAMN,SAAU3E,EAAE8F,SAASb,GAAKN,SAAUovD,aAAcuQ,IAC1F,MACJ,QACIhsD,EAAUpW,KAAKlC,EAAE8F,SAASb,KASlD,OAAOqT,GAGXgnD,EAAAjhE,UAAAolE,mBAAA,SAAmB/R,EAASzlD,WAClBs4D,EAAiB,GACvB,GAAIt4D,GAAqB,OAAXA,MACV,IAAoB,IAAAu4D,EAAA5tB,SAAA3qC,GAAMw4D,EAAAD,EAAAzlE,QAAA0lE,EAAAjkE,KAAAikE,EAAAD,EAAAzlE,OAAA,CAArB,IACKy0D,EAAM,CACR9B,QAASA,EACTnxD,MAHQkkE,EAAAlkE,OAKZgkE,EAAeriE,KAAKsxD,wGAG5B,OAAO+Q,GAIXjF,EAAAjhE,UAAAqmE,MAAA,SAAM7+D,GACF,MAAsC,QAA9BA,EAAKlB,SAAS+J,OAAOhI,MACK,aAA9Bb,EAAKlB,SAAS+J,OAAOhI,MACS,gBAA9Bb,EAAKlB,SAAS+J,OAAOhI,MAG7B44D,EAAAjhE,UAAAgjE,cAAA,SAAc74D,WACJ44D,EAAa,OACnB,IAAmB,IAAAuD,EAAA/tB,SAAApuC,GAAKo8D,EAAAD,EAAA5lE,QAAA6lE,EAAApkE,KAAAokE,EAAAD,EAAA5lE,OAAA,CAAnB,IAAM8G,EAAI++D,EAAArkE,MACPpC,KAAKumE,MAAM7+D,KACPA,EAAKkuD,aAAiE,UAAnDluD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,UAExD/yD,KAAKgjE,aAAat7D,EAAMu7D,IAEjBv7D,EAAKkuD,aAAiE,cAAnDluD,EAAKlB,SAAS+J,OAAOumD,gBAAgB/D,UAC/D/yD,KAAKwjE,uBAAuB97D,EAAMu7D,GAC3Bv7D,aAAgBH,WAA0D,gBAA7C,EAAoBf,SAAS+J,OAAOhI,KACxEvI,KAAK4lE,kBAAkBl+D,EAAMu7D,GAE7BjjE,KAAKmlE,WAAWz9D,EAAMu7D,0GAIlC,OAAOA,uBA1fd7iE,KAAAA,sDAFQo9D,oBA8fT2D,kCClgBA,SAAAuF,IAEI1mE,KAAA2mE,eAAiB,GACT3mE,KAAAo1D,SAAW,GA0MvB,OAxMIsR,EAAAxmE,UAAAkhE,oBAAA,SAAoB36D,GAIhB,OAHAzG,KAAK2mE,eAAiB,GACtB3mE,KAAK4mE,kBAAkBngE,GACvBzG,KAAK6mE,4BAA4BpgE,EAAKsC,UAC/B/I,KAAK8mE,qBAAqB9mE,KAAK2mE,eAAgBlgE,IAG1DigE,EAAAxmE,UAAAmhE,aAAA,SAAa56D,EAAYu5D,GACrBv5D,EAAKw0D,eAAiB+E,EACtBhgE,KAAK2mE,eAAiB,GACtB3mE,KAAK6mE,4BAA4BpgE,EAAKsC,cAChCkyD,EAAiBj7D,KAAK+mE,mBAAmBtgE,GAC/CzG,KAAKgnE,gBAAgBhnE,KAAK2mE,eAAgB1L,IAGtCyL,EAAAxmE,UAAA0mE,kBAAR,SAA0BngE,GAClBA,EAAKkV,oBAAoBsrD,eACzBjnE,KAAKo1D,SAAW3uD,EAAKkV,oBAAoBsrD,eAIzCP,EAAAxmE,UAAA4mE,qBAAR,SAA6BI,EAAYzgE,OAGjC0gE,MAFEnH,EAAU,GACVoH,EAAiB,GAEjBnM,EAAiBj7D,KAAK+mE,mBAAmBtgE,cACpC4gE,OACDC,EAAkBD,EAAUxmE,QAAQuB,MACpCm2D,EAAS,GAQf,IAAK,IAAMgP,KAPPtM,GACAA,EAAelnD,IAAI,SAAU9F,GACzBsqD,EAAOtqD,EAAIslD,SAAWtlD,EAAIslD,UAKd+T,EAChB,GAAIA,EAAgB/lE,eAAegmE,GAAQ,KAEjCC,EAAaF,EAAgBC,GAAOF,EAAU7gE,SAASM,KAEvD2gE,EAAet9D,EAAKu9D,oBAAoBF,EAAYH,EAAU7gE,SAAS+J,QAEzEgoD,EAAOiP,KAAgBA,GAAuC,KAAzBC,EAAalU,SAElDyM,EAAQj8D,KAAK0jE,GAEjBL,EAAeI,GAAcA,EACI,KAA7BC,EAAaE,oBACNF,EAAaE,YAEE,KAAtBF,EAAat7D,aACNs7D,EAAat7D,kBA1BpC,IAAwB,IAAAy7D,EAAAnvB,SAAAyuB,GAAUW,EAAAD,EAAAhnE,QAAAinE,EAAAxlE,KAAAwlE,EAAAD,EAAAhnE,OAAA,GAAdinE,EAAAzlE,4GAkCpB,OADA+kE,EAAgBnnE,KAAK8nE,kBAAkBV,EAAgBnM,GAChDj7D,KAAK+nE,2BAA2BZ,EAAenH,IAIlD0G,EAAAxmE,UAAA6mE,mBAAR,SAA2BtgE,GACvB,GAAIA,EAAKw0D,gBAAkBx0D,EAAKw0D,eAAe1C,OAAQ,KAC/C0C,EAAiBx0D,EAAKw0D,eAAe1C,OAAOxkD,IAAI,SAAClS,GACjD,MAAO,CACH0xD,QAAS1xD,EAAE0xD,QAAQpnD,KACnBw7D,YAAa9lE,EAAE8lE,YACfK,UAAWnmE,EAAEsK,KACbszD,OAAQ59D,EAAE49D,OACVwI,WAAYpmE,EAAEqmE,UAAUD,cAIhC,OAAwBpzD,EAAAA,OAASomD,EAAgB,SAACsM,GAC9C,OAAqB,IAAjBA,EAAM9H,SAAmB8H,EAAMU,eAYvCvB,EAAAxmE,UAAA8mE,gBAAR,SAAwBt/D,EAAMuzD,GAC1Bj7D,KAAK6mE,4BAA4Bn/D,WAE3Bw/D,EAAalnE,KAAK2mE,mBACxB,IAAwB,IAAAwB,EAAA1vB,SAAAyuB,GAAUkB,EAAAD,EAAAvnE,QAAAwnE,EAAA/lE,KAAA+lE,EAAAD,EAAAvnE,OAAA,CAA7B,IAAMymE,EAASe,EAAAhmE,MAChBpC,KAAKqoE,oBAAoBhB,EAAWpM,0GAIpCyL,EAAAxmE,UAAA6nE,2BAAR,SAAmCZ,EAAenH,GAC9C,IAAK,IAAMuH,KAASJ,EACZA,EAAc5lE,eAAegmE,IAC7BvH,EAAQj8D,KAAK,CAAEoI,KAAMg7D,EAAcI,GAAQ9H,QAAQ,IAG3D,OAAOO,GAGH0G,EAAAxmE,UAAAwnE,oBAAR,SAA4BY,EAAcC,OAChChB,EAAQ,CACVhU,QAAS,GACThrD,KAAM,GACNigE,QAAS,GACTC,YAAa,IAYjB,OAVAlB,EAAMhU,QAAU+U,EAChBf,EAAMh/D,KAAOggE,EAAezR,gBAAgBlE,UAC5C2U,EAAMiB,QAAUxoE,KAAKo1D,SACrBmS,EAAMkB,YAAcF,EAAezR,gBAAgBhE,iBAG7B,KAAlByU,EAAMiB,gBACCjB,EAAMiB,QAGVjB,GAGHb,EAAAxmE,UAAA4nE,kBAAR,SAA0BV,EAAgBnM,OAChCyN,EAAe,GACrB,GAAItB,EACA,IAAK,IAAMG,KAAStM,EAChB,GAAIA,EAAe15D,eAAegmE,GAAQ,KAChCoB,EAAuB1N,EAAesM,GAAOhU,QAC7B6T,EAAeuB,KACfA,GAClBD,EAAa3kE,KAAKk3D,EAAesM,GAAOS,WAMxD,OAAOU,GAGHhC,EAAAxmE,UAAAmoE,oBAAR,SAA4B3gE,EAAM6wD,WAC1BvxD,EAAQ,EACZU,EAAmB,aAAI6wD,MACvB,IAAoB,IAAAqQ,EAAAnwB,SAAA8f,GAAMsQ,EAAAD,EAAAhoE,QAAAioE,EAAAxmE,KAAAwmE,EAAAD,EAAAhoE,OAAA,CAArB,IAAM2mE,EAAKsB,EAAAzmE,MACZsF,EAAKT,sBACC7E,EAAQ,GACdA,EAAMsF,EAAKlB,SAASM,KAAOygE,EAAMhU,YAC3BuV,EAAYphE,EAAKC,SAASX,GAChC8hE,EAAUjoE,QAAQ+N,SAASxM,GAC3B0mE,EAAwB,aAAI1mE,EAC5B0mE,EAAuB,YAAIvB,EAAMI,YAEjC3gE,2GAIA0/D,EAAAxmE,UAAA2mE,4BAAR,SAAoCkC,GAEhC,GAAIA,EAASphE,UACLohE,EAASphE,oBAAoBzG,OAC7B,IAAK,IAAM4F,KAAOiiE,EAASphE,SACvB,GAAIohE,EAASphE,SAASpG,eAAeuF,GACjC,OAAQiiE,EAASphE,SAASb,GAAKN,SAASgK,eACpC,IAAK,OAGL,IAAK,UAGL,IAAK,QACDxQ,KAAK6mE,4BAA4BkC,EAASphE,SAASb,IAEnD,MACJ,IAAK,YACD,GAAIiiE,EAASphE,SAET,IAAK,IAAMD,KAAQqhE,EAASphE,SAAU,KAC5BnB,EAAWuiE,EAASphE,SAASD,GAAMlB,SACrCA,EAAS+J,QAAmC,cAAzB/J,EAAS+J,OAAOhI,MACnCvI,KAAK2mE,eAAe5iE,KAAKglE,EAASphE,SAASD,2BA5LtFtH,KAAAA,aA6MDsmE,KCtMMl7D,SAASC,QAEfu9D,iBAAA,WAGI,SAAAA,EAAmBC,EAAyCC,GAAzClpE,KAAAipE,cAAAA,EAAyCjpE,KAAAkpE,WAAAA,EAmLhE,OAjLIF,EAAA9oE,UAAAmhE,aAAA,SAAa56D,EAAYu5D,GACrBhgE,KAAKmpE,aAAa1iE,EAAKsC,SAAUi3D,GAE7B3+D,MAAMgM,QAAQ2yD,EAAQzH,SACtBv4D,KAAKipE,cAAc5H,aAAa56D,EAAMu5D,GAEtC3+D,MAAMgM,QAAQ2yD,EAAQ3K,MACtBr1D,KAAKkpE,WAAW7H,aAAa56D,EAAMu5D,EAAQ3K,MAInD2T,EAAA9oE,UAAAipE,aAAA,SAAapgE,EAAoBi3D,GAE7B,GAAIA,IAAYhvD,WAAyB,OAAZgvD,EACzB,MAAM,IAAIlqD,MAAM,oBAGN9V,KAAKopE,kBAAkBrgE,GAE/BnE,QAAQ,SAAA8C,GACV,OAAQA,EAAKlB,SAAS+J,OAAOhI,MACzB,IAAK,oBACGy3D,EAA2B,oBAE3Bt4D,EAAK7G,QAAQ+N,SAASpD,SAAOw0D,EAA2B,mBAAGvY,UAC3D//C,EAAK22D,aAAe7yD,SAAOw0D,EAA2B,mBAAGvY,UAE7D,MACJ,IAAK,oBACD,GAAIpmD,MAAMgM,QAAQ2yD,EAA4B,qBAA6C,EAAvCA,EAA4B,mBAAE79D,OAAY,KACpFknE,EAAqBrJ,EAA4B,mBAAE,GAAG5K,SACxDiU,GAAiBA,EAAcl9D,OAC/BzE,EAAK7G,QAAQ+N,SAASy6D,EAAcl9D,MACpCzE,EAAK22D,aAAegL,EAAcl9D,MAG1C,MACJ,IAAK,oBACG6zD,EAAkB,UAAKA,EAAkB,SAAE7zD,OAC3CzE,EAAK7G,QAAQ+N,SAASoxD,EAAkB,SAAE7zD,MAC1CzE,EAAK22D,aAAe2B,EAAkB,SAAE7zD,UAS5D68D,EAAA9oE,UAAAkhE,oBAAA,SAAoB36D,OACVu5D,EAAUhgE,KAAKspE,oBAAoB7iE,EAAKsC,UAQ9C,OANA/I,KAAKupE,2BAA2B9iE,EAAMu5D,GAEtCA,EAAa,IAAIhgE,KAAKkpE,WAAW9H,oBAAoB36D,IAAS,GAE9Du5D,EAAgB,OAAIhgE,KAAKipE,cAAc7H,oBAAoB36D,IAAS,GAE7Du5D,GAGXgJ,EAAA9oE,UAAAopE,oBAAA,SAAoBvgE,OACVsB,EAAQrK,KAAKopE,kBAAkBrgE,GAC/Bi3D,EAAU,GA+BhB,OA7BA31D,EAAMzF,QAAQ,SAAA8C,GACV,GAA2B,OAAvBA,EAAK7G,QAAQuB,OACbsF,EAAK7G,QAAQuB,QAAU4O,WACA,KAAvBtJ,EAAK7G,QAAQuB,MACb,OAAQsF,EAAKlB,SAAS+J,OAAOhI,MACzB,IAAK,wBACKihE,EAAYh+D,SAAO9D,EAAK7G,QAAQuB,OACjCqnE,UAAU1gE,EAAStC,KAAKkV,oBAAoB8tD,WAAa,SAC9DzJ,EAA2B,kBAAIwJ,EAAU5zD,OAAO,uBAChD,MACJ,IAAK,oBACD,GAAIlO,EAAK7G,QAAQuB,OAAgC,KAAvBsF,EAAK7G,QAAQuB,MAAc,KAC3Cg9C,EAAY,GAClBA,EAAUr7C,KAAK,CACXqxD,SAAU1tD,EAAK7G,QAAQuB,MACvBsnE,cAAe,yCAEnB1J,EAA4B,mBAAI5gB,EAEpC,MACJ,IAAK,oBACD4gB,EAAkB,SAAIt4D,EAAK7G,QAAQuB,SAQ5C49D,GAGXgJ,EAAA9oE,UAAAkpE,kBAAA,SAAkBrgE,OACR2yD,EAA2B,GAEjC,OADA17D,KAAK2pE,mBAAmB5gE,EAAU2yD,GAC3BA,GAGXsN,EAAA9oE,UAAAqpE,2BAAA,SAA2B9iE,EAAYu5D,GAC/Bv5D,EAAKkV,oBAAoBiuD,aACzB5pE,KAAK6pE,sBAAsB7J,EAASv5D,EAAKkV,oBAAoBiuD,aAG7DnjE,EAAKkV,oBAAoBmuD,WACzB9pE,KAAK+pE,oBAAoB/J,EAASv5D,EAAKkV,oBAAoBmuD,WAG3DrjE,EAAKkV,oBAAoBquD,mBACzBhqE,KAAKiqE,4BAA4BjK,EAASv5D,EAAKkV,oBAAoBquD,mBAGnEvjE,EAAKkV,oBAAoBuuD,UACzBlqE,KAAKmqE,mBAAmBnK,EAASv5D,EAAKkV,oBAAoBuuD,UAG1DzjE,EAAKkV,oBAAoByuD,eACzBpqE,KAAKqqE,wBAAwBrK,EAASv5D,EAAKkV,oBAAoByuD,gBAIvEpB,EAAA9oE,UAAA2pE,sBAAA,SAAsB7J,EAAS4J,GAC3B5J,EAAiB,QAAI4J,GAGzBZ,EAAA9oE,UAAA6pE,oBAAA,SAAoB/J,EAAS8J,GACzB9J,EAAe,MAAI8J,GAGvBd,EAAA9oE,UAAA+pE,4BAAA,SAA4BjK,EAASgK,GACjChK,EAAuB,cAAIgK,GAG/BhB,EAAA9oE,UAAAiqE,mBAAA,SAAmBnK,EAASkK,GACxBlK,EAAc,KAAIkK,GAGtBlB,EAAA9oE,UAAAmqE,wBAAA,SAAwBrK,EAASoK,GAC7BpK,EAAc,KAAIoK,GAGdpB,EAAA9oE,UAAAypE,mBAAR,SAA2B5gE,EAAoBiF,GAA/C,IAAA5K,EAAApD,KAKI,GAJIA,KAAKsqE,iBAAiBvhE,IACtBiF,EAAMjK,KAAKgF,GAGXA,aAAoBxB,UAAW,KACzBG,EAAI,EAEV,IAAK,IAAM7F,KAAK6F,EAAKC,SACbD,EAAKC,SAAS9F,aAAc0E,UAC5BvG,KAAK2pE,mBAAmBjiE,EAAKC,SAAS9F,GAAImM,GAKlDjF,aAAoBnB,YACdF,EAAI,GACLC,SAAS/C,QAAQ,SAAA2E,GAClBnG,EAAKumE,mBAAmBpgE,EAAOyE,MAKnCg7D,EAAA9oE,UAAAoqE,iBAAR,SAAyB5iE,GACrB,SAAIA,EAAKlB,SAAS+J,QACiB,sBAA9B7I,EAAKlB,SAAS+J,OAAOhI,MACY,sBAA9Bb,EAAKlB,SAAS+J,OAAOhI,MACS,sBAA9Bb,EAAKlB,SAAS+J,OAAOhI,2BAjLpCnI,KAAAA,sDANQsmE,yBADAvF,mBA6LT6H,EAtLA,GCbAuB,qBAAA,WAQI,SAAAA,KAwFJ,OAtFIA,EAAArqE,UAAAkhE,oBAAA,SAAoB36D,GAChB,OAAOzG,KAAKspE,oBAAoB7iE,EAAKsC,WAGzCwhE,EAAArqE,UAAAopE,oBAAA,SAAoBvgE,OACVsB,EAAQrK,KAAKwqE,wBAAwBzhE,GACrCi3D,EAAU,GAqBhB,OApBA31D,EAAMzF,QAAQ,SAAA8C,GACiB,OAAvBA,EAAK7G,QAAQuB,OACbsF,EAAK7G,QAAQuB,QAAU4O,WACA,KAAvBtJ,EAAK7G,QAAQuB,OACbsF,EAAK22D,eAAiB32D,EAAK7G,QAAQuB,SAEwB,IAAvDsF,EAAKlB,SAAS+J,OAAOumD,gBAAgB2T,cACrCzK,EAAQj8D,KAAK,CACT2mE,cAAehjE,EAAKlB,SAAS+J,OAAOumD,gBAAgB4T,cACpDtoE,MAAOsF,EAAK7G,QAAQuB,QAGxB49D,EAAQj8D,KAAK,CACT2mE,cAAehjE,EAAKlB,SAAS+J,OAAOumD,gBAAgB4T,cACpDC,eAAgBjjE,EAAK7G,QAAQuB,WAMtC49D,GAGXuK,EAAArqE,UAAAmhE,aAAA,SAAa56D,EAAYu5D,GACrBhgE,KAAKmpE,aAAa1iE,EAAKsC,SAAUi3D,IAGrCuK,EAAArqE,UAAAipE,aAAA,SAAapgE,EAAoBi3D,GAC7B,IAAK3+D,MAAMgM,QAAQ2yD,GACf,MAAM,IAAIlqD,MAAM,mCAGN9V,KAAKwqE,wBAAwBzhE,GAErCnE,QAAQ,SAAA8C,GACVs4D,EAAQp7D,QAAQ,SAAAuG,GACRA,EAAQu/D,cAAcv+D,OAClBzE,EAAKlB,SAAS+J,OAAOumD,gBAAgB4T,gBACrCv/D,EAAQ/I,MAAM+J,MACdzE,EAAK7G,QAAQ+N,SAASzD,EAAQ/I,MAAM+J,MACpCzE,EAAK22D,aAAelzD,EAAQ/I,MAAM+J,OAElCzE,EAAK7G,QAAQ+N,SAASzD,EAAQ/I,OAC9BsF,EAAK22D,aAAelzD,EAAQ/I,aAOhDmoE,EAAArqE,UAAAsqE,wBAAA,SAAwBzhE,OACd2yD,EAA2B,GAEjC,OADA17D,KAAK4qE,0BAA0B7hE,EAAU2yD,GAClCA,GAGH6O,EAAArqE,UAAA0qE,0BAAR,SAAkC7hE,EAAoBiF,GAAtD,IAAA5K,EAAApD,KAMI,GALI+I,EAASvC,SAAS+J,QACgB,oBAAlCxH,EAASvC,SAAS+J,OAAOhI,MACzByF,EAAMjK,KAAKgF,GAGXA,aAAoBxB,UAAW,KACzBG,EAAI,EAEV,IAAK,IAAM7F,KAAK6F,EAAKC,SACbD,EAAKC,SAAS9F,aAAc0E,UAC5BvG,KAAK4qE,0BAA0BljE,EAAKC,SAAS9F,GAAImM,GAKzDjF,aAAoBnB,YACdF,EAAI,GACLC,SAAS/C,QAAQ,SAAA2E,GAClBnG,EAAKwnE,0BAA0BrhE,EAAOyE,0BAtFrD5N,KAAAA,mDA0FDmqE,EAhGA,GCAAM,sBAAA,WAsDI,SAAAA,EAAoBlnB,GAAA3jD,KAAA2jD,SAAAA,EA1BX3jD,KAAA+5C,YAAc,YAEvB/5C,KAAA8qE,MAAQ,GACR9qE,KAAAoC,MAAQ,GACRpC,KAAA+qE,SAAU,EACV/qE,KAAAytD,WAAa,GACbztD,KAAA85C,YAAc,iBACJ95C,KAAAqC,KAA0B,IAAI8d,KAAAA,aAExCngB,KAAAgrE,WAAa,GA+HLhrE,KAAA8jD,gBAAkB,SAACmnB,KAC/B,OA3HI/pE,OAAAyB,eACWkoE,EAAA3qE,UAAA,aAAU,KADrB,WAEI,OAAOF,KAAK+jD,iBAEhB,SAAsBnzC,GAClB5Q,KAAK+jD,YAAcnzC,EACf5Q,KAAK+jD,aAAe/jD,KAAK+jD,YAAYmnB,uBACrClrE,KAAKmrE,oEAObN,EAAA3qE,UAAAsb,SAAA,aAIAqvD,EAAA3qE,UAAAirE,iCAAA,WAAA,IAAA/nE,EAAApD,KACIA,KAAK+jD,YAAYmnB,sBAAsB5nE,UAAU,SAACo4D,GACzB,EAAjBA,EAAQv5D,QACRiB,EAAK0nE,MAAQpP,EACbt4D,EAAK02C,YAAc,GAEnB12C,EAAKgoE,qBAAqBhoE,EAAKioE,QAAQjpE,MAAOs5D,KAE9Ct4D,EAAK02C,YAAc,YACnB12C,EAAK0nE,MAAQ,OAKlBD,EAAA3qE,UAAAi6C,MAAP,SAAa/3C,GACTpC,KAAKsrE,OAAOlpE,IAEhByoE,EAAA3qE,UAAAorE,OAAA,SAAOlpE,GAAP,IAAAgB,EAAApD,KACQA,KAAK0a,aACL1a,KAAKytD,WAAarrD,EAClBpC,KAAK85C,YAAc,mBACnB95C,KAAK0a,WAAWizC,cAAcvrD,GACzBkB,UAAU,SAACoV,GACR,GAAoB,EAAhBA,EAAOvW,OAAY,KAEbuL,EADW69D,EAAAA,IAAMnoE,EAAKhB,MAAOopE,EAAAA,OACX99D,OAAOgL,GAC/BtV,EAAK0nE,MAAQW,EAAAA,OAAS/9D,EAAQ,SAElCtK,EAAK02C,YAAc,IACpB,SAACn5C,GACAyC,EAAK02C,YAAc,cAKnC+wB,EAAA3qE,UAAAkrE,qBAAA,SAAqBhpE,EAAOs5D,GAA5B,IAAAt4D,EAAApD,KACQo7D,GAAQ,EACZt7C,EAAAA,KAAO47C,EAAS,SAAChmD,GACTA,EAAKtT,QAAUA,IACfqb,WAAW,WACPra,EAAKioE,QAAQt0B,OAAO30C,GACpBgB,EAAKioE,QAAQjpE,MAAQA,IAEzBg5D,GAAQ,KAGXA,GAED39C,WAAW,WACPra,EAAKioE,QAAQt0B,OAAO,IACpB3zC,EAAKioE,QAAQjpE,MAAQ,MAKjCyoE,EAAA3qE,UAAAwrE,UAAA,SAAUje,GACN,OAAsD,GAA9CA,EAAWtrD,OAASnC,KAAKytD,WAAWtrD,QACvCsrD,EAAWtrD,OAASnC,KAAKytD,WAAWtrD,QAAU,GAAoB,KAAfsrD,KAAwC,IAAjBztD,KAAK+qE,SAIjFF,EAAA3qE,UAAAq9C,WAAP,SAAkBn7C,GAAlB,IAAAgB,EAAApD,KACQoC,GAAmB,KAAVA,GACLpC,KAAK0a,aACL1a,KAAK+qE,SAAU,EACf/qE,KAAK0a,WAAWqzC,qBAAqB3rD,GAAOkB,UAAU,SAACoV,GACnDtV,EAAK0nE,MAAQ,CAACpyD,GACd+E,WAAW,WACPra,EAAKioE,QAAQt0B,OAAOr+B,EAAOtW,OAC3BgB,EAAKioE,QAAQjpE,MAAQsW,EAAOtW,QAEhCgB,EAAK2nE,SAAU,GAChB,SAACpqE,GACAyC,EAAK2nE,SAAU,MAOxBF,EAAA3qE,UAAAs9C,iBAAP,SAAwBC,GACpBz9C,KAAK8jD,gBAAkBrG,GAIpBotB,EAAA3qE,UAAAw9C,kBAAP,aAEAmtB,EAAA3qE,UAAA46C,SAAA,SAAS58B,GACLle,KAAK8jD,gBAAgB5lC,EAAMzU,KAK/BohE,EAAA3qE,UAAAyrE,QAAA,SAAQztD,GACJnR,QAAQiO,IAAI,WACZhb,KAAK8jD,gBAAgB,KAEzB+mB,EAAA3qE,UAAAohB,SAAA,SAASpD,GACLle,KAAK8jD,gBAAgB5lC,EAAM9b,4BAtJlCmc,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVC,SAAU,8VASV0gC,UAAW,CACP,CACIxG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAA8xB,IAC9B5xB,OAAO,iDAvB6DmL,KAAAA,kDA4B3EtlC,KAAAA,2BACAA,KAAAA,oBAMAkC,KAAAA,wBAGAu+B,KAAAA,UAAS/gC,KAAA,CAACw6B,qCAIVl6B,KAAAA,SA2HL+rD,EArKA,GCAAe,mBAAA,WAQA,SAAAA,KAMkC,2BANjCxqB,KAAAA,SAAQ5iC,KAAA,CAAC,CACN+iC,QAAS,CAACC,OAAAA,aAAcL,aAAcM,MAAAA,aACtCH,QAAS,CAACupB,uBACVxpB,aAAc,CAACwpB,uBACfzrB,UAAW,OAEmBwsB,EAdlC,GCKMpgE,SAASC,QAEfogE,8BAAA,WAuCE,SAAAA,IANA7rE,KAAA8rE,kBAAmB,EACnB9rE,KAAA+rE,qBAAsB,EACtB/rE,KAAAgsE,0BAA2B,EAC3BhsE,KAAAisE,oBAAqB,EACrBjsE,KAAAksE,aAA2B,GAC3BlsE,KAAA0mD,MAAQ,GA2EV,OAvEEmlB,EAAA3rE,UAAAsb,SAAA,aAGAqwD,EAAA3rE,UAAAi7C,YAAA,WAAA,IAAA/3C,EAAApD,KACEA,KAAK0H,KAAK7G,QAAQwC,aAAaC,UAAU,SAACsN,GACxCxN,EAAK+oE,sBACCzkE,EAAOtE,EAAKsE,KAClB,GAAIA,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,UACc,yCAAjD7rD,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,SACW,yCAAjD7rD,EAAKlB,SAAS+J,OAAOumD,gBAAgBvD,WAEnCnwD,EAAK0oE,iBAAkB,CAC1B1oE,EAAK2oE,qBAAsB,EAC3B3oE,EAAK0oE,kBAAmB,MACpBpxD,OAAU,EACVhT,EAAKjB,MAAQiB,EAAKjB,KAAK+F,qBAAqBC,cAC9CiO,EAAahT,EAAKjB,KAAK+F,qBAAqBC,YAAY2/D,oCAEpDC,EAAe3kE,EAAKjB,KAAK+F,qBAAqBC,YAAY6/D,aAAangE,KAC7E,GAAIuO,GAAc2xD,EAAc,KACxBE,EAAY/gE,SAAOoF,GAAG00C,QAAQ,QAAQQ,IAAI,EAAG,OAAOlwC,OAAO,cAC3D42D,EAAUhhE,SAAOoF,GAAG67D,MAAM,QAAQ9mB,SAAS,EAAG,OAAO/vC,OAAO,cAClExS,EAAKsjD,MAAQl7C,SAAOoF,GAAGgF,OAAO,cAO9B,QALM82D,EAAQ,GAIRC,EAHe,CAAC,uCAAwC,uCAC5D,uCAAwC,uCAAwC,uCAChF,uCAAwC,uCAAwC,wCAC3C7zD,OAC9B7W,EAAI,EAAGA,GAAK,EAAGA,IACtByqE,EAAM3oE,KAAK,CACTgO,KAAMvG,SAAOoF,GAAG00C,QAAQ,QAAQQ,IAAI7jD,EAAG,OAAO2T,OAAO,cACrDs0C,MAAO,IAGXxvC,EAAWkyD,mBAAmB,CAC5BL,UAAWA,EACXC,QAASA,EACTK,MAAO,EACPC,cAAeT,EACfU,YAAaJ,IACZrpE,UAAU,SAAC0gD,GACZ5gD,EAAK6oE,oBAAqB,EAC1B7oE,EAAK2oE,qBAAsB,EAC3BW,EAAM34D,IAAI,SAACi5D,EAAahmE,GACtBgmE,EAAY9iB,MAAQlG,EAAKh9C,KAAWgK,UAAYgzC,EAAKh9C,GAAOkjD,MAAM+iB,UAAY,IAEhF7pE,EAAK8oE,aAAeQ,GACnB,SAAC/rE,GACFyC,EAAK2oE,qBAAsB,EAC3B3oE,EAAK4oE,0BAA2B,EAChC5oE,EAAK0oE,kBAAmB,EACxB/+D,QAAQpM,MAAMA,UAGhByC,EAAK0oE,kBAAmB,EACxB1oE,EAAK4oE,0BAA2B,MAO1CH,EAAA3rE,UAAAisE,gBAAA,WACEnsE,KAAK+rE,qBAAsB,EAC3B/rE,KAAKisE,oBAAqB,EAC1BjsE,KAAKgsE,0BAA2B,EAChChsE,KAAK8rE,kBAAmB,EACxB9rE,KAAKksE,aAAe,GACpBlsE,KAAK0mD,MAAQ,wBA/GhBnoC,KAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,wBACVC,SAAU,k+BA2BVC,OAAQ,CAAC,+fAGRG,KAAAA,SAiFH+sD,EAjHA,GCPAqB,uBAAA,WAYI,SAAAA,KA+GJ,OA9GWA,EAAAhtE,UAAA6tD,qBAAP,SAA4B3rD,KAGrB8qE,EAAAhtE,UAAAytD,cAAP,SAAqBF,KAGdyf,EAAAhtE,UAAA+jD,WAAP,SAAkBD,KAGXkpB,EAAAhtE,UAAAuzD,UAAP,SAAiBlR,KAIV2qB,EAAAhtE,UAAAitE,+BAAP,SAAuCC,EAAoBre,GAA3D,IACQt+C,EADRrN,EAAApD,KAoCI,OAlCI+uD,EAAOI,OACP/6C,EAAAA,QAAU26C,EAAOI,MAAO,SAACC,OACjB9X,EAAIl0C,EAAK+pE,+BAA+BC,EAAYhe,GACtD9X,IAAK7mC,EAAQ6mC,KAGnByX,EAAOS,UACPp7C,EAAAA,QAAU26C,EAAOS,SAAU,SAAC9xC,OAClB45B,EAAIl0C,EAAK+pE,+BAA+BC,EAAY1vD,GACtD45B,IAAK7mC,EAAQ6mC,KAIrByX,EAAO50C,WACP/F,EAAAA,QAAU26C,EAAO50C,UAAW,SAAC3T,GACxB,GAAIA,EAAS2T,UAAW,KACfm9B,EAAIl0C,EAAK+pE,+BAA+BC,EAAY5mE,GACtD8wC,IAAK7mC,EAAQ6mC,QAEb9wC,EAASswD,gBAAgBpC,QAC7BtgD,EAAAA,QAAU5N,EAASswD,gBAAgBpC,QAAS,SAAC2Y,GACrCA,EAAO9Z,UAAY6Z,IACnB38D,EAAQ48D,EAAO58D,SAGhBjK,EAASswD,gBAAgBjE,kBAChCz+C,EAAAA,QAAU5N,EAASswD,gBAAgBjE,iBAAkB,SAAC0U,GAC9CA,EAAMhU,UAAY6Z,IAAc38D,EAAQ82D,EAAM92D,WAO3DA,GAKJy8D,EAAAhtE,UAAAotE,UAAP,SAAiB5lE,OACT6lE,GAAW,EAIf,OAHI7lE,EAAK22D,eACLkP,GAAW,GAERA,GAGJL,EAAAhtE,UAAAstE,kBAAP,SAAyB9lE,EAAW6lE,GAApC,IAAAnqE,EAAApD,KACUytE,EAAYF,GAAY,GAC9B,GAAoC,SAAhC7lE,EAAKlB,SAASgK,cACd4D,EAAAA,QAAU1M,EAAKC,SAAU,SAACmhE,GACtB1lE,EAAKoqE,kBAAkB1E,EAAW2E,SAEnC,CAAA,GAAoC,YAAhC/lE,EAAKlB,SAASgK,cAShB,OAAOxQ,KAAKstE,UAAU5lE,GAR3B0M,EAAAA,QAAU1M,EAAKC,SAAU,SAACmhE,GACmB,UAArCA,EAAUtiE,SAASgK,cACpB4D,EAAAA,QAAU00D,EAAUnhE,SAAU,SAAC4B,OACrBmkE,EAAMtqE,EAAKoqE,kBAAkBjkE,EAAOkkE,GACtCC,GAAOD,EAAU1pE,KAAK2pE,KAEtBtqE,EAAKkqE,UAAUxE,IAAc2E,EAAU1pE,MAAK,KAI/D,OAAuB,EAAnB0pE,EAAUtrE,QAIX+qE,EAAAhtE,UAAAytE,OAAP,SAAc3oE,GACV,QAAI6M,KAAKg5C,MAAM7lD,IAMZkoE,EAAAhtE,UAAA0tE,YAAP,SAAmBC,OACTntD,EAAI,IAAI7O,KAAKg8D,GAGbtoB,EAAO7kC,EAAEotD,cACTvnB,EAHS,CAAC,MAAO,MAAO,MAAO,MAAO,MAC5B,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAErC7lC,EAAEqtD,YACjBh8D,EAAO2O,EAAE2pC,UACT2jB,EAAOttD,EAAEutD,WACTh8D,EAAMyO,EAAEwtD,aACFxtD,EAAEytD,aAQd,OALa,IAATH,GAAsB,IAAR/7D,EACPF,EAAO,IAAMw0C,EAAQ,IAAMhB,EAE3BxzC,EAAO,IAAMw0C,EAAQ,IAAMhB,EAAO,IAAMyoB,EAAO,IAAM/7D,GALjD+7D,EAAO,GAAK,KAAO,MAK6C,8BA7GtF5tE,KAAAA,mDAkHD8sE,EA3HA,GCAAkB,yBAAA,WA4II,SAAAA,EAAoBC,EACD5hE,GADCzM,KAAAquE,uBAAAA,EACDruE,KAAAyM,YAAAA,EA+BvB,OAjDIvL,OAAAyB,eAAayrE,EAAAluE,UAAA,OAAI,KAAjB,SAAkB6I,GACd/I,KAAK+I,SAAWA,mCAGpB7H,OAAAyB,eAAoByrE,EAAAluE,UAAA,SAAM,KAA1B,SAA2B6uD,GACvB/uD,KAAKsuE,QAAUvf,mCAGnB7tD,OAAAyB,eAAoByrE,EAAAluE,UAAA,YAAS,KAA7B,SAA8BquE,GAC1BvuE,KAAKuuE,IAAMA,mCAEdrtE,OAAAyB,eAAayrE,EAAAluE,UAAA,OAAI,KAAjB,SAAkBuG,GACdzG,KAAK+I,SAAWtC,EAAKsC,SACrB/I,KAAKsuE,QAAU7nE,EAAKsoD,OACpBhiD,QAAQiO,IAAIhb,KAAK+I,2CAOfqlE,EAAAluE,UAAAsb,SAAP,WACQxb,KAAK+I,UAAY/I,KAAK+I,SAASvC,SAAS+J,QACI,SAAzCvQ,KAAK+I,SAASvC,SAASgK,cACtBxQ,KAAKwuE,eACLxuE,KAAKyM,YAAYA,YAAYzM,KAAK+I,SAASvC,SAASkU,YACjD1a,KAAK+I,UAAY/I,KAAK+I,SAASvC,SAAS+J,QACH,kBAAzCvQ,KAAK+I,SAASvC,SAASgK,cACtBxQ,KAAKyuE,iBACLzuE,KAAKyM,YAAYA,YAAYzM,KAAK+I,SAASvC,SAASkU,YAEpD1a,KAAK0uE,iBAAmB1uE,KAAKquE,wBAIlCD,EAAAluE,UAAAstE,kBAAP,SAAyB9lE,GAErB,OADkB1H,KAAKquE,uBAAuBb,kBAAkB9lE,IAI7D0mE,EAAAluE,UAAAyuE,iBAAP,SAAwBjnE,GAEpB,OADiB1H,KAAKquE,uBAAuBf,UAAU5lE,IAIpD0mE,EAAAluE,UAAA0uE,cAAP,SAAqBC,GACjB,OAAoC,IAAhCA,EAAc7kE,QAAQ,0BAhKjCuU,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,SAAU,8mJAqGVC,OAAQ,CAAC,mUA5GJuuD,8BAEAtyD,oDAmHJkE,KAAAA,+BACAA,KAAAA,oBACAA,KAAAA,sBAIAA,KAAAA,yBAIAA,KAAAA,oBAGCA,KAAAA,SAsCNsvD,EA5KA,GCAAU,4BAAA,WAuBI,SAAAA,EAAoBC,GAAA/uE,KAAA+uE,WAAAA,EAIxB,OAXI7tE,OAAAyB,eAAoBmsE,EAAA5uE,UAAA,OAAI,KAAxB,SAAyBuG,GACrBzG,KAAKgvE,MAAQvoE,mCAEjBvF,OAAAyB,eAAoBmsE,EAAA5uE,UAAA,YAAS,KAA7B,SAA8BquE,GAC1BvuE,KAAKivE,KAAOV,mCAKhBO,EAAA5uE,UAAAsb,SAAA,iCArBH+C,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAU,6FAIVC,OAAQ,CAAC,2HAPJqqD,kDAaJlqD,KAAAA,yBAGAA,KAAAA,SAQLgwD,EA3BA,GCAAI,yBAAA,WA0BI,SAAAA,IAJOlvE,KAAA6jD,WAAkB,GAiD3B,OA3DE3iD,OAAAyB,eAAoBusE,EAAAhvE,UAAA,SAAM,KAA1B,SAA2B6uD,GACzB/uD,KAAKsuE,QAAUvf,mCAEjB7tD,OAAAyB,eAAoBusE,EAAAhvE,UAAA,QAAK,KAAzB,SAA0BkC,GACxBpC,KAAKo6C,OAASh4C,mCAEhBlB,OAAAyB,eAAoBusE,EAAAhvE,UAAA,aAAU,KAA9B,SAA+Bwa,GAC7B1a,KAAK+jD,YAAcrpC,mCASrBw0D,EAAAhvE,UAAAsb,SAAA,WACExb,KAAKu9C,WAAWv9C,KAAKo6C,SAEhB80B,EAAAhvE,UAAAivE,OAAP,SAAc/sE,GACZ,OAAqB,KAAjBA,EAAMD,SAAyC,IAAxBC,EAAM4H,QAAQ,OAAuC,IAAxB5H,EAAM4H,QAAQ,MAQjEklE,EAAAhvE,UAAAq9C,WAAP,SAAkB3sC,EAAQw+D,GAA1B,IAAAhsE,EAAApD,KACE,GAAI4Q,IAAM5Q,KAAK6jD,WACX,GAAI7jD,KAAKmvE,OAAOv+D,GAAI,CAClB,GAAKw+D,EAII,OAAOpvE,KAAK+jD,YAAYopB,+BAA+Bv8D,EAAG5Q,KAAKsuE,aAHhEtpE,EACNhF,KAAK+jD,YAAYopB,+BAA+Bv8D,EAAG5Q,KAAKsuE,SAC7CtuE,KAAK6jD,WAAZ7+C,EAAyBA,EAAIuyC,cAA0C3mC,OAExE,GAAIgP,EAAAA,QAAUhP,GAAI,KACjBy+D,EAAM,GACZj7D,EAAAA,QAAUxD,EAAG,SAAC0+D,GACZD,EAAItrE,KAAKX,EAAKm6C,WAAW+xB,GAAI,MAE/BtvE,KAAK6jD,WAAawrB,OACb,GAAIrvE,KAAK2tE,OAAO/8D,GAAI,CACvB,GAAKw+D,EACD,OAAQpvE,KAAK+jD,YAAY6pB,YAAYh9D,GADpB5Q,KAAK6jD,WAAa7jD,KAAK+jD,YAAY6pB,YAAYh9D,OAGjE,CACH,GAAKw+D,EACH,OAAOx+D,EADY5Q,KAAK6jD,WAAajzC,IAQ1Cs+D,EAAAhvE,UAAAytE,OAAP,SAAc4B,GACZ,OAAOvvE,KAAK+jD,YAAY4pB,OAAO4B,KAASC,EAAAA,SAAWD,wBAhExDhxD,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVE,OAAQ,CAAC,4HACTD,SAAU,8GAKTI,KAAAA,qBAGAA,KAAAA,0BAGAA,KAAAA,SAqDHowD,EAvEF,GCOMO,KAAO,6CAgCT,SAAAC,EAAoBC,GAAA3vE,KAAA2vE,iBAAAA,EAbb3vE,KAAA6jD,WAAa,KAWZ7jD,KAAA4vE,kBAAgCH,KAChCzvE,KAAA6vE,iBAAqCJ,KAoD/C,OA9DEvuE,OAAAyB,eACW+sE,EAAAxvE,UAAA,aAAU,KADrB,WAEI,OAAOF,KAAK+jD,iBAEhB,SAAsBnzC,GAClB5Q,KAAK+jD,YAAcnzC,mCAQvB1P,OAAAyB,eAAI+sE,EAAAxvE,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK6jD,gBAId,SAAUjzC,GACJA,IAAM5Q,KAAK6jD,aACb7jD,KAAK6jD,WAAajzC,oCAKf8+D,EAAAxvE,UAAAq9C,WAAP,SAAkB3sC,GACZA,IAAM5Q,KAAK6jD,aACX7jD,KAAK6jD,WAAajzC,IAKjB8+D,EAAAxvE,UAAAs9C,iBAAP,SAAwBC,GACtBz9C,KAAK6vE,iBAAmBpyB,GAInBiyB,EAAAxvE,UAAAw9C,kBAAP,SAAyBD,GACvBz9C,KAAK4vE,kBAAoBnyB,GAGpBiyB,EAAAxvE,UAAA4vE,OAAP,WACE9vE,KAAK4vE,qBAGAF,EAAAxvE,UAAA46C,SAAP,SAAgB58B,yBAhEnBK,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,eACVE,OAAQ,CAAC,IACTD,SAAU,qLAIV0gC,UAAW,CACT,CACExG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAA22B,IAC9Bz2B,OAAO,iDAfNi0B,0DAoBJpuD,KAAAA,0BAGAA,KAAAA,SA8DH4wD,KCpFID,OAAO,8CAiCT,SAAAM,IAbO/vE,KAAA6jD,WAAa,KAWZ7jD,KAAA4vE,kBAAgCH,OAChCzvE,KAAA6vE,iBAAqCJ,OA2C/C,OArDEvuE,OAAAyB,eACWotE,EAAA7vE,UAAA,aAAU,KADrB,WAEI,OAAOF,KAAK+jD,iBAEhB,SAAsBnzC,GAClB5Q,KAAK+jD,YAAcnzC,mCAQvB1P,OAAAyB,eAAIotE,EAAA7vE,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK6jD,gBAId,SAAUjzC,GACJA,IAAM5Q,KAAK6jD,aACb7jD,KAAK6jD,WAAajzC,oCAKfm/D,EAAA7vE,UAAAq9C,WAAP,SAAkB3sC,GAAlB,IAAAxN,EAAApD,KACM4Q,IAAM5Q,KAAK6jD,aACT7jD,KAAK+jD,YACP/jD,KAAK+jD,YAAYgK,qBAAqBn9C,GAAGtN,UAAU,SAACoqE,GAClDtqE,EAAKygD,WAAa6pB,EAAIj9D,QAGxBzQ,KAAK6jD,WAAajzC,IAMjBm/D,EAAA7vE,UAAAs9C,iBAAP,SAAwBC,GACtBz9C,KAAK6vE,iBAAmBpyB,GAInBsyB,EAAA7vE,UAAAw9C,kBAAP,SAAyBD,GACvBz9C,KAAK4vE,kBAAoBnyB,GAGpBsyB,EAAA7vE,UAAA4vE,OAAP,WACE9vE,KAAK4vE,qBAGAG,EAAA7vE,UAAA46C,SAAP,SAAgB58B,yBAvEnBK,KAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,gBACVE,OAAQ,GACRD,SAAU,uEAKV0gC,UAAW,CACT,CACExG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAAg3B,IAC9B92B,OAAO,8EAKVn6B,KAAAA,0BAGAA,KAAAA,SAqDHixD,KCjFFC,sBAAA,WAWA,SAAAA,KAuBoC,2BAvBnC5uB,KAAAA,SAAQ5iC,KAAA,CAAC,CACN6iC,aAAc,CACV+sB,yBACAU,4BACAI,yBACAQ,qBACAK,uBAEJxuB,QAAS,CACLE,MAAAA,YACAmL,MAAAA,oBACApL,OAAAA,aACAyuB,KAAAA,WACAxsB,cAEJrE,UAAW,CACP8tB,wBAEJ5rB,QAAS,CACLwtB,4BACAmB,KAAAA,gBAG4BD,EAlCpC,GCAAE,yBAAA,WAMA,SAAAA,IAwBSlwE,KAAAo6C,OAAqB,GAkDpBp6C,KAAA86C,SAAW,SAAEmwB,KACbjrE,KAAAg7C,UAAY,aAEtB,OAnDSk1B,EAAAhwE,UAAAsb,SAAP,aAEO00D,EAAAhwE,UAAA+6C,gBAAP,aAEOi1B,EAAAhwE,UAAAq9C,WAAP,SAAkBn7C,GAChBpC,KAAKoC,MAAQA,GAGR8tE,EAAAhwE,UAAAs9C,iBAAP,SAAwBC,GACtBz9C,KAAK86C,SAAW2C,GAGXyyB,EAAAhwE,UAAAw9C,kBAAP,SAAyBD,GACvBz9C,KAAKg7C,UAAYyC,GAGnBv8C,OAAAyB,eAAIutE,EAAAhwE,UAAA,QAAK,KAAT,WACE,OAA2B,IAAvBF,KAAKo6C,OAAOj4C,OACL,GAEAnC,KAAKo6C,QAAUp6C,KAAKo6C,OAAO,QAIxC,SAAUxpC,GACR,GAAI,MAAOA,GAAyC,KAANA,EAC1CA,EAAI,QACD,GAAiB,iBAANA,EACdA,EAAI,CAACA,QACF,IAAKvP,MAAMgM,QAAQuD,GACtB,MAAM,IAAIgtC,UAAU,wEAInBsyB,EAAAhwE,UAAAiwE,UAAP,SAAiBpwD,EAAQ7B,GAAzB,IAAA9a,EAAApD,KACMke,EAAMkC,OAAOgwD,QACfpwE,KAAKo6C,OAAOr2C,KAAKgc,EAAO3d,OAExBpC,KAAKoQ,QAAQxL,QAAQ,SAAC/C,GAChBA,EAAEO,QAAU2d,EAAO3d,OACrBgB,EAAKg3C,OAAO31C,OAAO5C,EAAG,KAK5B7B,KAAK86C,SAAS96C,KAAKoC,4BAvEtBmc,KAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,WACVC,SAAU,gQAMV0gC,UAAW,CACT,CACIxG,QAASC,MAAAA,kBACTC,YAAaC,KAAAA,WAAW,WAAM,OAAAm3B,IAC9Bj3B,OAAO,IAEbt6B,OAAQ,CAAC,qGAQRG,KAAAA,SAuDHoxD,EAnFA,GCAAG,eAAA,WAMA,SAAAA,KAS8B,2BAT7BjvB,KAAAA,SAAQ5iC,KAAA,CAAC,CACN6iC,aAAc,CACV6uB,0BAEJ5uB,QAAS,CACL4uB,0BAEJ3uB,QAAS,CAACC,OAAAA,aAAcC,MAAAA,iBAEE4uB,EAf9B,GCAAC,gBAAA,WAuCA,SAAAA,KAkDA,2BAlDClvB,KAAAA,SAAQ5iC,KAAA,CAAC,CACN+iC,QAAS,CAACC,OAAAA,aACNoL,MAAAA,oBACA2jB,SAAAA,eACApvB,aACAwJ,qBACAihB,mBACAvnB,uBACA2rB,sBACAK,eACAG,SAAAA,cACAC,SAAAA,cACAC,SAAAA,cACA/jB,wBACAlJ,cAEJpC,aAAc,CACVnmC,sBACAiyC,qBACA0e,8BACA7rD,yBACAjB,wBAEJqgC,UAAW,CACPuxB,MAAAA,YACAz3D,mBACA7Y,kBACA0W,kBACAqB,uBACAW,cACArN,iBACAuH,mBACAqM,6BACA2uC,mBACAkO,YACA3F,gBACAz/C,kBACAlO,wBACA20D,iBACA2D,gBACA6H,iBACAuB,qBACA7D,kBACA3mE,kBAEJuhD,QAAS,CAACpmC,sBAAuBiyC,qBAC7BpuC,uBAAwB4rC,qBAAsBqlB,sBAAwBrjB,6BAI9E2jB,EAzFA,GCCAM,KAME,SAAAA,GAAY9pE,EAAa1E,GACvBpC,KAAK8G,IAAMA,EACX9G,KAAKoC,MAAQA,kBCRb24D,KAAA,EACA8V,KAAA,EACAC,QAAA,EACAC,OAAA,EACAC,SAAA","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject, OnChanges, SimpleChanges\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode, GroupNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  template: `<!--CONTAINERS-->\n<div *ngIf=\"node.question.renderingType === 'form'\">\n  <div class=\"dropdown dropdown-tabs forms-dropdown\">\n    <a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\">\n      <i class=\"fa fa-angle-double-down\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-menu-right forms-dropdown-menu\" role=\"menu\" aria-labelledby=\"dropdownMenu\">\n      <li *ngFor=\"let question of node.question.questions; let i = index;\" (click)=\"clickTab(i)\">\n        {{question.label}}\n      </li>\n    </ul>\n  </div>\n  <mat-tab-group (selectedIndexChange)='tabSelected($event)' [selectedIndex]='activeTab'>\n    <mat-tab [label]='question.label' *ngFor=\"let question of node.question.questions; let i = index;\">\n        <div (swipeLeft)='loadNextTab()' (swipeRight)='loadPreviousTab()'>\n          <form-renderer [node]=\"node.children[question.key]\" [parentComponent]=\"this\" [parentGroup]=\"node.control\"></form-renderer>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div style=\"text-align: center;\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadPreviousTab()\" [ngClass]=\"{disabled: isCurrentTabFirst()}\">&lt;&lt;</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"loadNextTab()\" [ngClass]=\"{disabled: isCurrentTabLast()}\">\n      &gt;&gt;</button>\n  </div>\n</div>\n<div *ngIf=\"node.question.renderingType === 'page'\">\n  <!--<h2>{{node.question.label}}</h2>-->\n  <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n    [parentGroup]=\"parentGroup\"></form-renderer>\n</div>\n<div *ngIf=\"node.question.renderingType === 'section' && checkSection(node)\"> \n  <div class=\"panel  panel-primary\">\n    <div class=\"panel-heading\">\n      <button type=\"button\" class=\"btn btn-primary pull-right\" (click)=\"isCollapsed = !isCollapsed\">\n        {{isCollapsed ? 'Show' : 'Hide'}}\n      </button> {{node.question.label}}\n    </div>\n    <div class=\"panel-body\" [collapse]=\"isCollapsed\">\n      <form-renderer *ngFor=\"let question of node.question.questions\" [parentComponent]=\"this\" [node]=\"node.children[question.key]\"\n        [parentGroup]=\"parentGroup\"></form-renderer>\n    </div>\n  </div>\n</div>\n\n<!-- MESSAGES -->\n<div *ngIf=\"node.control && node.control.alert && node.control.alert !== ''\" class=\"alert alert-warning\">\n  <a class=\"close\" data-dismiss=\"alert\">&times;</a> {{node.control.alert}}\n</div>\n\n<!--CONTROLS-->\n\n<div *ngIf=\"node.question.controlType === 0\" class=\"form-group\" [formGroup]=\"parentGroup\" [hidden]=\"node.control.hidden\"\n  [ngClass]=\"{disabled: node.control.disabled}\">\n  <!--LEAF CONTROL-->\n  <div class=\"question-area\">\n    <a class=\"form-tooltip pull-right\" (click)=\"toggleInformation(node.question.extras.id)\" data-placement=\"right\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      <i class=\"glyphicon glyphicon-question-sign\" aria-hidden=\"true\"></i>\n    </a>\n\n    <label *ngIf=\"node.question.label\" [style.color]=\"hasErrors()? 'red' :''\" class=\"control-label\" [attr.for]=\"node.question.key\">\n      {{node.question.required === true ? '*':''}} {{node.question.label}}\n    </label>\n    <div [ngSwitch]=\"node.question.renderingType\">\n      <select class=\"form-control\" *ngSwitchCase=\"'select'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n        <option *ngFor=\"let o of node.question.options\" [ngValue]=\"o.value\">{{o.label}}\n        </option>\n      </select>\n      <remote-file-upload *ngSwitchCase=\"'file'\" [dataSource]=\"dataSource\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"\n        (fileChanged)=\"upload($event)\">\n      </remote-file-upload>\n      <textarea [placeholder]=\"node.question.placeholder\" [rows]=\"node.question.rows\" class=\"form-control\" *ngSwitchCase=\"'textarea'\"\n        [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\">\n      </textarea>\n      <remote-select *ngSwitchCase=\"'remote-select'\" [placeholder]=\"node.question.placeholder\" tabindex=\"0\" [dataSource]=\"dataSource\"\n        [componentID]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\"></remote-select>\n  <!--  \n      <date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" tabindex=\"0\" [weeks]='node.question.extras.questionOptions.weeksList'\n        (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\"></date-time-picker>\n  -->\n\n      <ngx-date-time-picker *ngSwitchCase=\"'date'\" [showTime]=\"node.question.showTime\" [id]=\"node.question.key + 'id'\" \n            [formControlName]=\"node.question.key\" [weeks]='node.question.extras.questionOptions.weeksList'\n            (onDateChange)=\"onDateChanged(node)\" [showWeeks]=\"node.question.showWeeksAdder\" ></ngx-date-time-picker>\n      <ng-select *ngSwitchCase=\"'multi-select'\" [style.height]=\"'auto'\"  [style.overflow-x]=\"'hidden'\" tabindex=\"0\" [formControlName]=\"node.question.key\"\n        [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"true\">\n      </ng-select>\n      <ng-select *ngSwitchCase=\"'single-select'\" [style.height]='auto' tabindex=\"0\" [formControlName]=\"node.question.key\"\n      [id]=\"node.question.key + 'id'\" [options]=\"node.question.options\" [multiple]=\"false\">\n      </ng-select>\n      <input class=\"form-control\" *ngSwitchCase=\"'number'\" [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"'number'\" [id]=\"node.question.key + 'id' \" [step]=\"'any'\" [min]=\"node.question.extras.questionOptions.min\"\n        [max]=\"node.question.extras.questionOptions.max\">\n      <input class=\"form-control\" *ngSwitchDefault [formControlName]=\"node.question.key \" [attr.placeholder]=\"node.question.placeholder \"\n        [type]=\"node.question.renderingType\" [id]=\"node.question.key + 'id' \">\n\n      <div *ngSwitchCase=\"'radio'\">\n        <div *ngFor=\"let o of node.question.options\">\n          <label class=\"form-control no-border\">\n            <input type=\"radio\" [formControlName]=\"node.question.key\" [id]=\"node.question.key + 'id'\" [value]=\"o.value\"> {{ o.label }}\n          </label>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'checkbox'\">\n        <checkbox [id]=\"node.question.key + 'id'\" [formControlName]=\"node.question.key\" [options]=\"node.question.options\"></checkbox>\n      </div>\n\n      <div *ngIf=\"node.question.enableHistoricalValue && node.question.historicalDisplay\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-xs-9\">\n              <span class=\"text-warning\">Previous Value: </span>\n              <strong>{{node.question.historicalDisplay?.text}}</strong>\n              <span *ngIf=\"node.question.showHistoricalValueDate\">\n                <span> | </span>\n                <strong class=\"text-primary\">{{node.question.historicalDisplay?._date}}</strong>\n              </span>\n\n            </div>\n            <button type=\"button\" [node]=\"node\" [name]=\"'historyValue'\" class=\"btn btn-primary btn-small col-xs-3\">Use Value\n            </button>\n          </div>\n        </div>\n      </div>\n      <appointments-overview [node]=\"node\"></appointments-overview>\n      <div *ngIf=\"hasErrors() \">\n        <p *ngFor=\"let e of errors() \">\n          <span class=\"text-danger \">{{e}}</span>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"question-info col-md-12 col-lg-12 col-sm-12\" id=\"{{node.question.extras.id}}\" *ngIf=\"node.question && node.question.extras.questionInfo  && node.question.extras.questionInfo !== ''  && node.question.extras.questionInfo !== ' '\">\n      {{node.question.extras.questionInfo}}\n    </div>\n\n  </div>\n</div>\n<div *ngIf=\"node.question.controlType === 1\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n\n  <!--ARRAY CONTROL-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div class='well' style=\"padding: 2px; \" *ngSwitchCase=\" 'repeating' \">\n      <h4 style=\"margin: 2px; font-weight: bold;\">{{node.question.label}}</h4>\n      <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:2px;\" />\n      <div [ngSwitch]=\"node.question.extras.type\">\n        <div *ngSwitchCase=\"'testOrder'\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <div>{{child.orderNumber}}</div>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n\n        <div *ngSwitchCase=\"'obsGroup'\" style=\"margin-bottom:20px;\">\n          <div *ngFor=\"let child of node.children; let i=index \">\n            <form-renderer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n            \" [parentGroup]=\"child.control \"></form-renderer>\n            <button type=\"button \" class='btn btn-sm btn-danger' (click)=\"node.removeAt(i) \">Remove</button>\n            <br/>\n            <hr style=\"margin-left:-2px; margin-right:-2px; margin-bottom:4px; margin-top:8px; border-width:1px;\" />\n          </div>\n        </div>\n      </div>\n      <button type=\"button \" class='btn btn-primary' (click)=\"node.createChildNode() \">Add</button>\n    </div>\n  </div>\n\n</div>\n<div *ngIf=\"node.question.controlType === 2\" [hidden]=\"node.control.hidden\" [ngClass]=\"{disabled: node.control.disabled}\">\n\n  <!--GROUP-->\n  <div [ngSwitch]=\"node.question.renderingType \">\n    <div *ngSwitchCase=\" 'group' \">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n    <div *ngSwitchCase=\" 'field-set' \" style=\"border: 1px solid #eeeeee; padding: 2px; margin: 2px;\">\n      <form-renderer *ngFor=\"let question of node.question.questions \" [parentComponent]=\"this\" [node]=\"node.children[question.key]\n            \" [parentGroup]=\"node.control \"></form-renderer>\n    </div>\n  </div>\n\n</div>\n`,\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n  checkSection(node: NodeBase) {\n    if (node.question.renderingType === 'section') {\n      let groupChildrenHidden = false;\n      let allSectionControlsHidden = Object.keys(node.children).every((k) => {\n        let innerNode = node.children[k];\n        if (innerNode instanceof GroupNode) {\n          groupChildrenHidden = Object.keys(innerNode.children).every((i) => innerNode.children[i].control.hidden)\n        }\n        return node.children[k].control.hidden || groupChildrenHidden;\n      });\n      return !allSectionControlsHidden;\n    }\n    return true;\n  }\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    template: `<div *ngIf=\"showErrors()\" class=\"container\">\n<ul class=\"list-group\">\n  <li class=\"list-group-item list-group-item-warning\" *ngFor=\"let errorNode of errorNodes\" (click)=announceErrorField(errorNode)>\n    <div class=\"error\" *ngIf=\"errorNode.control.valid == false\">\n      <h4>{{errorNode.question.label}}</h4>\n      <span class=\"text-danger\"> {{getControlError(errorNode)}}</span>\n    </div>\n  </li>\n</ul>\n</div>\n`,\n    styles: [`ul{list-style:none}.list-group-item{padding:2px 15px;cursor:pointer}ul li:hover{background-color:#fff}h4{margin-top:7px;margin-bottom:7px}`]\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    template: `<div\n    #selection\n    [attr.tabindex]=\"disabled ? null : 0\"\n    [ngClass]=\"{'open': isOpen, 'focus': hasFocus, 'below': isBelow, 'disabled': disabled}\"\n    (click)=\"onSelectContainerClick($event)\"\n    (focus)=\"onSelectContainerFocus()\"\n    (keydown)=\"onSelectContainerKeydown($event)\"\n    (window:click)=\"onWindowClick()\"\n    (window:resize)=\"onWindowResize()\">\n\n    <div class=\"single\"\n        *ngIf=\"!multiple\">\n        <div class=\"value\"\n            *ngIf=\"optionList.hasSelected()\">\n            {{optionList.selection[0].label}}\n        </div>\n        <div class=\"placeholder\"\n            *ngIf=\"!optionList.hasSelected()\">\n            {{placeholderView}}\n        </div>\n        <div class=\"clear\"\n            *ngIf=\"allowClear\"\n            (click)=\"onClearSelectionClick($event)\">\n            &#x2715;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"isOpen\">\n            &#x25B2;\n        </div>\n        <div class=\"toggle\"\n            *ngIf=\"!isOpen\">\n            &#x25BC;\n        </div>\n    </div>\n\n    <div class=\"multiple\"\n        *ngIf=\"multiple\">\n        <div class=\"option\"\n            *ngFor=\"let option of optionList.selection\">\n            <span class=\"deselect-option\"\n                (click)=onDeselectOptionClick(option)>\n                &#x2715;\n            </span>\n            {{option.label}}\n        </div>\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            tabindex=\"-1\"\n            [placeholder]=\"placeholderView\"\n            [ngStyle]=\"{'width.px': filterInputWidth}\"\n            (input)=\"onMultipleFilterInput($event)\"\n            (keydown)=\"onMultipleFilterKeydown($event)\"/>\n    </div>\n\n</div>\n<select-dropdown\n    *ngIf=\"isOpen\"\n    #dropdown\n    [multiple]=\"multiple\"\n    [optionList]=\"optionList\"\n    [notFoundMsg]=\"notFoundMsg\"\n    [highlightColor]=\"highlightColor\"\n    [highlightTextColor]=\"highlightTextColor\"\n    [filterEnabled]=\"filterEnabled\"\n    [width]=\"width\"\n    [top]=\"top\"\n    [left]=\"left\"\n    (close)=\"onDropdownClose($event)\"\n    (optionClicked)=\"onDropdownOptionClicked($event)\"\n    (singleFilterClick)=\"onSingleFilterClick()\"\n    (singleFilterInput)=\"onSingleFilterInput($event)\"\n    (singleFilterKeydown)=\"onSingleFilterKeydown($event)\">\n</select-dropdown>\n`,\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    template: `<div\n    [ngStyle]=\"{'top.px': top, 'left.px': left, 'width.px': width}\">\n\n    <div class=\"filter\"\n        *ngIf=\"!multiple\">\n        <input\n            *ngIf=\"filterEnabled\"\n            #filterInput\n            (click)=\"onSingleFilterClick($event)\"\n            (input)=\"onSingleFilterInput($event)\"\n            (keydown)=\"onSingleFilterKeydown($event)\">\n    </div>\n\n    <div class=\"options\"\n        #optionsList>\n        <ul\n            (wheel)=\"onOptionsWheel($event)\">\n            <li *ngFor=\"let option of optionList.filtered\"\n                [ngClass]=\"{'highlighted': option.highlighted, 'selected': option.selected, 'disabled': option.disabled}\"\n                [ngStyle]=\"getOptionStyle(option)\"\n                (click)=\"onOptionClick(option)\"\n                (mouseover)=\"onOptionMouseover(option)\">\n                {{option.label}}\n            </li>\n            <li\n                *ngIf=\"!optionList.hasShown()\"\n                class=\"message\">\n                {{notFoundMsg}}\n            </li>\n        </ul>\n    </div>\n</div>\n`,\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    template: `<div>\n    <file-uploader [(ngModel)]=\"innerValue\" (onClear)=\"clearValue()\" (fileChanged)=\"upload($event)\">\n    </file-uploader>\n    <img *ngIf=\"innerValue\" class=\"img-responsive\" [src]=\"innerValue | secure:this.dataSource.fetchFile\" alt=\"\" />\n</div>`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader-ampath';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  template: `<picker-modal (onOverlayClick)=\"cancelDatePicker()\">\n  <div class=\"picker-wrap\">\n    <div class=\"picker-box\">\n      <div class=\"picker-header\">\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-prev\" (click)=\"prev()\"></span>\n        </div>\n        <div class=\"picker-header-content\">\n          <div class=\"content\">\n            <span (click)=\"showMonthSelection()\" class=\"month\">{{calendarDate | moment: \"MMMM\"}}</span>\n            <span class=\"seperator\">|</span>\n            <span (click)=\"showYearSelection()\" class=\"year\">{{calendarDate | moment: \"YYYY\"}}</span>\n          </div>\n        </div>\n        <div class=\"picker-header-nav\">\n          <span class=\"nav-next\" (click)=\"next()\"></span>\n        </div>\n      </div>\n      <div class=\"picker-calendar\">\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n          <span class=\"picker-weekday\" *ngFor=\"let day of dayNames\">{{ day }}</span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"!onDisplayMonths && !onDisplayYears\">\n                    <span class=\"picker-day\" (click)=\"selectDay(day)\" [ngClass]=\"{\n                       'out-focus': day.month() != calendarDate.month(),\n                       'today': day.isSame(today),\n                       'selected': day.isSame(selectedDate)\n                      }\" *ngFor=\"let day of calendarDays\">\n                    {{ day | moment: 'D'}}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayMonths\">\n                    <span class=\"picker-month\" *ngFor=\"let month of monthsShort\"\n                          (click)=\"selectMonth(month)\"\n                          [ngClass]=\"{\n                       'selected': month === currentMonth\n                      }\">\n                    {{ month }}\n                </span>\n        </div>\n        <div class=\"picker-calendar-row\" *ngIf=\"onDisplayYears\">\n                    <span class=\"picker-year\" *ngFor=\"let year of displayYearRange\"\n                          (click)=\"selectYear(year)\"\n                          [ngClass]=\"{\n                       'selected': year === currentYear\n                      }\">\n                    {{ year }}\n                </span>\n        </div>\n      </div>\n      <div class=\"picker-footer\">\n        <div class=\"picker-action action-today\" (click)=\"selectToday()\"><span class=\"text\">Today</span></div>\n        <div class=\"picker-action action-clear\" (click)=\"clearPickDate()\"><span class=\"text\">Clear</span></div>\n        <div class=\"picker-action action-close\" (click)=\"cancelDatePicker()\"><span class=\"text\">Close</span></div>\n      </div>\n    </div>\n  </div>\n</picker-modal>\n`,\n  styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:666px}.picker-box{font-family:'Open Sans';min-width:400px!important;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;display:flex;height:2.5rem;width:100%}.picker-header-nav{position:relative;cursor:pointer;width:calc(100% / 8)}.picker-header-nav>*{position:absolute;top:50%;right:auto;bottom:auto;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.picker-header-nav .nav-next::before,.picker-header-nav .nav-prev::before{content:\" \";border-top:.5em solid transparent;border-bottom:.5em solid transparent;border-right:.75em solid #000;width:0;height:0;display:block;margin:0 auto}.picker-header-nav .nav-next::before{border-right:0;border-left:.75em solid #000}.picker-header-content{width:calc(100% * 6 / 8);text-align:center}.picker-header-content .month{font-size:1.778rem;line-height:2.5rem;margin-right:.5rem;font-weight:700}.picker-header-content .year{font-style:italic;color:#999}.picker-calendar{width:100%}.picker-calendar .picker-calendar-row{display:flex;flex-wrap:wrap;width:100%;margin-bottom:.625rem}.picker-calendar .picker-weekday{font-weight:700;text-align:left;color:#999;width:calc(100% / 7)}.picker-calendar .picker-day,.picker-calendar .picker-month,.picker-calendar .picker-year{font-size:1.333rem;line-height:2.5rem;position:relative;height:2.5rem;text-align:center;cursor:pointer;width:calc(100% / 7)}.picker-calendar .picker-day:hover,.picker-calendar .picker-month:hover,.picker-calendar .picker-year:hover{background:#b1dcfb}.picker-calendar .out-focus{color:#ddd}.picker-calendar .out-focus:hover{color:#000}.picker-calendar .selected{background:#0089ec;color:#fff}.picker-calendar .selected:hover{background:#0089ec}.picker-calendar .today::before{content:\" \";position:absolute;top:2px;right:2px;width:0;height:0;border-top:.5em solid #0059bc;border-left:.5em solid transparent}.picker-footer{cursor:pointer}.picker-footer .picker-action{text-align:center;width:calc(100% / 3)}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-today::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-today::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    template: `<picker-modal (onOverlayClick)=\"cancelTimePicker()\">\n    <div class=\"picker-wrap\">\n        <div class=\"picker-box\">\n            <div class=\"picker-header\">Time Picker</div>\n            <div class=\"picker-table\">\n                <ul class=\"picker-table-time\">\n                    <li class=\"picker-table-number hour\">\n                        <span class=\"arrow up\" (click)=\"increaseHour()\"></span>\n                        {{time | moment: hourFormat}}\n                        <span class=\"arrow down\" (click)=\"decreaseHour()\"></span>\n                    </li>\n                    <li class=\"picker-table-separator\">:</li>\n                    <li class=\"picker-table-number minute\">\n                        <span class=\"arrow up\" (click)=\"increaseMinute()\"></span>\n                        {{time | moment: 'mm'}}\n                        <span class=\"arrow down\" (click)=\"decreaseMinute()\"></span>\n                    </li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-separator\">:</li>\n                    <li *ngIf=\"showSecond\" class=\"picker-table-number second\">\n                        <span class=\"arrow up\" (click)=\"increaseSecond()\"></span>\n                        {{time | moment: 'ss'}}\n                        <span class=\"arrow down\" (click)=\"decreaseSecond()\"></span>\n                    </li>\n                    <li *ngIf=\"use12Hour\" class=\"picker-table-meridiem meridiem\">\n                        {{time | moment: 'A'}}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"picker-footer\">\n                <div class=\"picker-action action-now\" (click)=\"selectNow()\"><span class=\"text\">Now</span></div>\n                <div class=\"picker-action action-confirm\" (click)=\"selectTime()\"><span class=\"text\">Confirm</span></div>\n                <div class=\"picker-action action-clear\" (click)=\"clearTime()\"><span class=\"text\">Clear</span></div>\n                <div class=\"picker-action action-close\" (click)=\"cancelTimePicker()\"><span class=\"text\">Close</span></div>\n            </div>\n        </div>\n    </div>\n</picker-modal>\n`,\n    styles: [`*,::after,::before{box-sizing:border-box}.picker-wrap{width:95vw;max-width:40rem;font-family:'Open Sans'}.picker-box{width:100%;padding:.625rem 1rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-footer,.picker-header{font-size:1.333rem;line-height:2.5rem;height:2.5rem;width:100%}.picker-header{text-align:center}.picker-table{width:100%;margin:2.5rem 0}.picker-table-time{font-size:2.37rem;line-height:2.5rem;list-style:none;margin:0;padding:0;display:flex;justify-content:center;width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.picker-table-meridiem,.picker-table-number,.picker-table-separator{text-align:center}.picker-table-meridiem,.picker-table-number{position:relative;width:20%}.arrow{position:absolute;left:50%;border:solid #777;border-width:0 .2rem .2rem 0;display:inline-block;padding:.25rem;cursor:pointer}.arrow.up{top:-1rem;-webkit-transform:translateX(-50%) rotate(-135deg);transform:translateX(-50%) rotate(-135deg)}.arrow.down{bottom:-1rem;-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg)}.arrow:hover{border-color:#1975d2}.picker-table-separator{width:calc(20% / 3)}.picker-footer{display:flex;justify-content:center;width:100%;cursor:pointer}.picker-footer .picker-action{width:25%;text-align:center}.picker-footer .picker-action:hover{background-color:#b1dcfb}.picker-footer .picker-action .text{padding-left:.8rem}.picker-footer .action-clear::before,.picker-footer .action-close::before,.picker-footer .action-confirm::before,.picker-footer .action-now::before{content:\" \";position:relative;display:inline-block;height:0;width:0}.picker-footer .action-now::before{border-top:.66em solid #0059bc;border-left:.66em solid transparent}.picker-footer .action-confirm::before{width:1rem;height:1rem;border-radius:100%;background-color:#00b5ad}.picker-footer .action-clear::before{top:-.5rem;width:1rem;border-top:3px solid #e20}.picker-footer .action-close::before{width:1rem;height:1rem;background:linear-gradient(to bottom,transparent 35%,#777 35%,#777 65%,transparent 65%),linear-gradient(to right,transparent 35%,#777 35%,#777 65%,transparent 65%);-webkit-transform:rotate(45deg);transform:rotate(45deg)}`],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    template: `<section class=\"x-modal\">\n    <section class=\"modal-overlay\" (click)=\"closeModal()\"></section>\n    <section class=\"modal-main\" id=\"section-modal-main\">\n        <ng-content></ng-content>\n    </section>\n</section>\n`,\n    styles: [`:host{z-index:9999999999}*,::after,::before{box-sizing:border-box}.modal-main{position:absolute;left:19.6%;right:auto;top:auto;z-index:111;background-color:#fff;border:1px solid #d7dad7;border-radius:6px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 5px 15px rgba(0,0,0,.3)}`],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    template: `<div class='row'>\n    <div *ngIf=\"!showTime\" class='col-xs-12 col-md-12'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-8 col-md-8'>\n        <input *ngIf=\"!showWeeks\" type=\"text\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n            readonly placeholder=\"Select Date\" />\n        <div *ngIf=\"showWeeks\" class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" class=\"form-control\" [value]=\"value | date: 'mediumDate'\" (focus)=\"toggleDatePicker(true)\"\n                readonly placeholder=\"Select Date\">\n            <div class=\"input-group-btn\">\n                <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Weeks <span class=\"caret\"></span></button>\n                <ul class=\"dropdown-menu up\">\n                    <li (click)=\"weeksSelected(count)\" *ngFor=\"let count of weeks\"><span> {{count}} Weeks</span></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showTime\" class='col-xs-4 col-md-4'>\n        <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n        />\n    </div>\n</div>\n<date-picker *ngIf=\"showDatePicker\" [initDate]=\"value\" (onSelectDate)=\"setDate($event)\" (onDatePickerCancel)=\"toggleDatePicker($event)\"></date-picker>\n\n<time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"setTime($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n`,\n    styles: [`input[readonly]{background-color:#fff}.up{bottom:100%!important;top:auto!important}.glyphicon{top:1px}`],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    template: `<div>\n  <div class=\"row\">\n    <div [class]=\"getDatePickerCssClass()\">\n      <div class=\"input-group\">\n        <input matInput \n              [matDatepicker]=\"picker\" \n              class=\"form-control\" \n              [value]=\"value\" \n              placeholder=\"Choose a date\" \n              (dateChange)=\"onDateSelect($event)\"\n              (click)=\"picker.open()\"\n              readonly\n        >\n        <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"input-group-btn\"></mat-datepicker-toggle>\n      </div>\n    </div>\n    <div [class]=\"getWeekPickerCssClass()\" *ngIf=\"showWeeks\">\n      <mat-select placeholder=\"Select Weeks\"  class=\"form-control\" name=\"weeks\" (selectionChange) =\"weekSelect($event)\">\n        <mat-option *ngFor=\"let count of weeks\" [value]=\"count\">\n          {{count}} Weeks\n        </mat-option>\n      </mat-select>\n    </div>\n    <div [class]=\"getTimePickerCssClass()\" *ngIf=\"showTime\">\n          <input type=\"text\" class=\"form-control\" [value]=\"value | date: 'shortTime'\" (focus)=\"toggleTimePicker(true)\" readonly placeholder=\"Select Time\"\n          />\n          <time-picker *ngIf=\"showTimePicker\" [initTime]=\"value\" [use12Hour]=\"true\" (onSelectTime)=\"onTimeSelect($event)\" (onTimePickerCancel)=\"toggleTimePicker($event)\"></time-picker>\n    </div>\n  </div>\n</div>\n\n`,\n    styles: [`#time-section{display:inline-block}#ngx-atp-time-picker,#ngx-mat-form-field{width:100%}.up{bottom:100%!important;top:auto!important}.time-btn{margin-top:-20px}`],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        let dateToUse;\n        if (this.value === '' || typeof this.value === 'undefined') {\n            dateToUse = moment().format();\n        } else {\n            dateToUse = moment(this.value).format();\n        }\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    template: `<div>\n    <ng-select [id]=\"componentID\" [noFilter]=\"0\" (selected)=\"selected($event)\" (deselected)=\"removed($event)\" [options]=\"items\" [allowClear]=\"true\"\n        [placeholder]=\"placeholder\" [notFoundMsg]=\"notFoundMsg\" (typed)=\"typed($event)\" tabindex=\"0\">\n    </ng-select>\n    <div *ngIf=\"loading\">\n        resolving....\n    </div>\n</div>\n`,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  template: `<div *ngIf=\"showAppointments\" class=\"appointments\">\n  <p *ngIf=\"loadingAppointments\">\n    <span *ngIf=\"!appointmentsLoaded && errorLoadingAppointments\">Error checking appointments</span>\n    <span *ngIf=\"loadingAppointments\"><span\n      class=\"fa fa-spinner fa-spin\"></span>Checking appointments...</span>\n  </p>\n  <div *ngIf=\"appointmentsLoaded && !errorLoadingAppointments\">\n    <table *ngIf=\"appointments.length>0\" class=\"table table-stripped table-bordered\">\n      <thead>\n      <tr>\n        <th *ngFor=\"let appointment of appointments\" [ngClass]=\"{'active': appointment.date === today}\">\n          <span>{{appointment.date}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n        <td *ngFor=\"let appointment of appointments\"\n            [ngClass]=\"{'active': appointment.date === today}\">\n          <span><strong><em>{{appointment.count}}</em></strong></span>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n`,\n  styles: [`.appointments{margin-top:12px;font-size:12px;color:#999}.appointments p{padding-top:12px}.appointments th{border-bottom:0!important;color:#333}.appointments td span,.appointments th span{display:block}.appointments td.active,.appointments th.active{background-color:#3c8dbc;color:#fff!important;padding:0}.appointments td.active span,.appointments th.active span{padding:4px}.appointments span.fa{display:inline-block;margin-right:7px}`]\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    template: `<div class=\"viewer\">\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'form'\" class=\"form\">\n    <div *ngFor=\"let question of rootNode.question.questions; let i = index;\">\n      <div *ngIf=\"questionsAnswered(rootNode.children[question.key])\">\n        <div [attr.id]=\"'page'+i\" class=\"panel panel-default\">\n          <p class=\"page-label panel-heading text-primary\">{{question.label}}</p>\n          <div class=\"panel-body\">\n            <encounter-viewer [node]=\"rootNode.children[question.key]\" [schema]=\"_schema\" [parentComponent]=\"this\" [parentGroup]=\"rootNode.control\"></encounter-viewer>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.renderingType === 'page'\" class=\"page\">\n    <encounter-viewer *ngFor=\"let question of rootNode.question.questions\" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\"\n      [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n  </div>\n\n\n  <div *ngIf=\"rootNode.question.renderingType === 'section'&& questionsAnswered(rootNode)\"\n    class=\"section\">\n    <div class=\"panel panel-primary\">\n      <p class=\"panel-heading section-label\">{{ rootNode.question.label }}</p>\n    </div>\n    <div *ngFor=\"let question of rootNode.question.questions\">\n      <encounter-viewer [node]=\"rootNode.children[question.key]\" [parentComponent]=\"this\" [schema]=\"_schema\" [parentGroup]=\"parentGroup\"></encounter-viewer>\n    </div>\n  </div>\n\n  <!--Leaf Controls-->\n  <div style=\"margin-left:10px;\">\n  <form *ngIf=\"rootNode.question.controlType === 0\" [formGroup]=\"parentGroup\">\n    <div *ngIf=\"rootNode.control.value\">\n    <div class=\"question-answer\">\n      <label *ngIf=\"rootNode.question.label\" [attr.for]=\"rootNode.question.key\" style=\"font-weight:400;\">\n          {{ rootNode.question.label }}\n      </label>\n      <span *ngIf=\"checkForColon(rootNode.question.label)\">:</span>\n      <div [ngSwitch]=\"rootNode.question.renderingType\" style=\"display:inline-block; font-weight:bold;\">\n          <div *ngSwitchCase=\" 'file' \">\n            <file-preview [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"fileDataSource\"></file-preview>\n          </div>\n          <div *ngSwitchCase=\"'remote-select'\">\n            <remote-answer [formControlName]=\"rootNode.question.key\" [id]=\"rootNode.question.key + 'id'\" [dataSource]=\"remoteDataSource\"></remote-answer>\n          </div>\n          <div *ngSwitchDefault style=\"display:inline-block\">\n              <question-control [schema]=\"_schema\" [value]=\"rootNode.control.value\" [dataSource]=\"customDataSource\"></question-control>\n            </div>\n      </div>\n     \n    </div>\n    </div>\n  </form>\n</div>\n\n  <!--Array Controls-->\n  <div *ngIf=\"rootNode.question.controlType === 1 && questionsAnswered(rootNode)\">\n    <div [ngSwitch]=\"rootNode.question.renderingType\">\n      <div *ngSwitchCase=\" 'repeating' \">\n        <div [ngSwitch]=\"rootNode.question.extras.type\">\n          <div *ngSwitchCase=\"'testOrder'\">\n            <label>{{rootNode.question.label}}:</label>\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n          \n          <div *ngSwitchCase=\"'obsGroup'\">\n            <div *ngFor=\"let child of rootNode.children; let i=index \">\n              <encounter-viewer *ngFor=\"let question of child.question.questions \" [parentComponent]=\"this\" [node]=\"child.children[question.key]\n                \" [parentGroup]=\"child.control \" [schema]=\"_schema\"></encounter-viewer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"rootNode.question.controlType === 2\">\n\n    <!--GROUP-->\n    <div [ngSwitch]=\"rootNode.question.renderingType \">\n      <div *ngSwitchCase=\" 'group' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n      <div *ngSwitchCase=\" 'field-set' \">\n        <encounter-viewer *ngFor=\"let question of rootNode.question.questions \" [parentComponent]=\"this\" [node]=\"rootNode.children[question.key]\n                  \" [parentGroup]=\"rootNode.control \" [schema]=\"_schema\"></encounter-viewer>\n      </div>\n    </div>\n  </div>\n\n\n\n  </div>\n`,\n    styles: [`.page-label{font-size:20px;font-weight:700}.section-label{font-size:18px;font-weight:500}.panel-primary{border:none!important}.question-answer{font-size:16px}.panel{margin-bottom:5px}div.section{margin-bottom:15px!important}.line-breaker{white-space:pre-line}hr{margin:10px}`],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    template: `<encounter-viewer class=\"card\" [form]=\"$form\" [encounter]=\"$enc\"></encounter-viewer>\n\n\n`,\n    styles: [`.card{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}`]\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styles: [`input{border:none;box-shadow:none;color:#000;background:#fff!important;padding-top:23px;display:block;position:relative}`],\n    template: `<div>\n    {{innerValue}}\n</div>`,\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  template: `<div *ngFor=\"let option of options; let i = index;\">\n    <label class=\"form-control no-border\">\n        <input type=\"checkbox\" id=\"i + 'id'\" (change)=\"selectOpt(option, $event)\" value=\"option.value\">\n        {{ option.label }}\n    </label>\n</div>`,\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}